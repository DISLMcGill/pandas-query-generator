part[(part['RETAILPRICE'] != 1093.974677855305) | (part['P_NAME'] != 'blu') & (part['SIZE'] < 29) & (part['P_NAME'] == 'd')][['SIZE', 'MFGR']].merge(orders[(orders['O_CUSTKEY'] > 18820)].merge(lineitem[['TAX']].merge(supplier[(supplier['S_ACCTBAL'] != 6851.323130896589)], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='P_PARTKEY', right_on='O_ORDERKEY').groupby(by=['SIZE']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'] != 'AFR')].merge(nation[['N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'I')][['N_COMMENT']].merge(part[(part['P_NAME'] != 'cor')][['SIZE', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] <= 1882) | (partsupp['AVAILQTY'] > 9910)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='N_NATIONKEY', right_on='P_PARTKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT', 'N_NATIONKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] == 7) | (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_NAME']].merge(region.merge(nation[(nation['N_COMMENT'] == 'r')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] != 1)][['N_NAME']].merge(orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['SHIPPRIORITY'] != 0)][['CLERK', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE']], left_on='N_NATIONKEY', right_on='O_ORDERKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

part.merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(lineitem[(lineitem['SHIPMODE'] == 'REG AIR')][['SHIPDATE', 'RECEIPTDATE', 'L_ORDERKEY', 'L_SUPPKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST']].merge(lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(orders, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp

region

nation[(nation['N_NATIONKEY'] != 7)].groupby(by=['N_COMMENT']).agg('count')

orders[(orders['O_COMMENT'] != 'g') & (orders['O_ORDERKEY'] == 423) & (orders['TOTALPRICE'] == 60367.69370081899)][['ORDERDATE', 'SHIPPRIORITY', 'CLERK']].merge(region, left_on='O_ORDERKEY', right_on='R_REGIONKEY').merge(part[(part['RETAILPRICE'] != 907.226409092618) & (part['MFGR'] != 'Manufacturer#1')].merge(partsupp[(partsupp['PS_SUPPKEY'] == 1878) | (partsupp['SUPPLYCOST'] != 52.45643193242354)].merge(lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02')][['L_ORDERKEY', 'LINENUMBER', 'SHIPMODE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='P_PARTKEY').merge(part.merge(partsupp[(partsupp['PS_SUPPKEY'] == 5394) & (partsupp['AVAILQTY'] == 6840)].merge(supplier[(supplier['S_PHONE'] == '2') & (supplier['S_SUPPKEY'] > 135)][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='P_PARTKEY')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] > 6) | (customer['C_NATIONKEY'] == 0)][['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(orders[(orders['ORDERPRIORITY'] == '1-URGENT')][['TOTALPRICE', 'ORDERDATE']].merge(lineitem[(lineitem['DISCOUNT'] <= 0.021997701948048887) | (lineitem['L_COMMENT'] == 'p')].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE'])) & (lineitem['QUANTITY'] != 19)].merge(partsupp[(partsupp['PS_SUPPKEY'] > 4643) | (partsupp['AVAILQTY'] <= 7263)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(customer[(customer['C_NATIONKEY'] != 19)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '25-') & (customer['C_NATIONKEY'] <= 10) & (customer['C_CUSTKEY'] >= 65)]

customer.merge(orders[['O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_NAME'] == 'C')][['N_NATIONKEY']].merge(supplier[(supplier['S_ADDRESS'] == '6')].merge(nation[(nation['N_REGIONKEY'] <= 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_PHONE', 'S_ACCTBAL']].merge(region.merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['RECEIPTDATE'] != '1998-11-06')].merge(orders[(orders['CLERK'] != 'C')][['O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

part[(part['TYPE'].str.startswith('M'))].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')][['LINESTATUS', 'L_ORDERKEY', 'DISCOUNT', 'COMMITDATE']].merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM'])) & (orders['ORDERDATE'] != '1998-07-21')][['SHIPPRIORITY', 'O_COMMENT', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['RECEIPTDATE'] >= '1998-11-06')][['LINENUMBER', 'L_ORDERKEY', 'EXTENDEDPRICE']].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['COMMITDATE'] < '1992-05-15')][['RECEIPTDATE', 'SHIPDATE']].merge(supplier[(supplier['S_NATIONKEY'] >= 15) | (supplier['S_COMMENT'] != 'bli')], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] > '1992-01-13')].merge(customer[(customer['C_NATIONKEY'] == 19) | (customer['C_ADDRESS'] == 'x')][['C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith('h'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[['C_PHONE']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='C_CUSTKEY', right_on='R_REGIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['O_CUSTKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] > 2) | (region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] == 'AFR')].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders[['CLERK', 'ORDERPRIORITY']]

customer[(customer['C_PHONE'] != '27-')][['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT']].merge(orders[(orders['SHIPPRIORITY'] < 0) & (orders['CLERK'].str.startswith('C'))][['O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['SHIPPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 16) & (partsupp['P_COMMENT'].str.startswith('g')) & (partsupp['SUPPLYCOST'] <= 88.69915091580735)].merge(lineitem[(lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPDATE'] <= '1998-10-30')][['LINESTATUS']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['PT_COMMENT'] == 'k') & (part['RETAILPRICE'] == 1000.6042975011595)][['SIZE', 'RETAILPRICE']].merge(customer[(customer['C_CUSTKEY'] == 87)][['C_ADDRESS', 'C_NATIONKEY']], left_on='P_PARTKEY', right_on='C_CUSTKEY').merge(customer[['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']].merge(orders[(orders['ORDERDATE'] >= '1998-07-21')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 5461) | (partsupp['PS_SUPPKEY'] != 5541)][['P_COMMENT']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['PS_PARTKEY', 'P_COMMENT']).agg('sum', numeric_only=True)

lineitem[['DISCOUNT', 'SHIPDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY']].groupby(by=['RECEIPTDATE', 'L_PARTKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 101.75486816604382)][['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NAME'] == 'R')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'r') & (customer['C_ACCTBAL'] >= 6483.429062711137) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'FURNITURE'])) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY']))].merge(nation.merge(supplier.merge(partsupp[(partsupp['PS_SUPPKEY'] > 7386)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_NATIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(lineitem[['SHIPDATE']].merge(nation.merge(customer[(customer['C_PHONE'].str.startswith('18-')) & (customer['C_PHONE'].str.startswith('18-'))], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(nation, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['LINESTATUS'] == 'O') & (lineitem['EXTENDEDPRICE'] < 25749.09712050795)], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')][['RETURNFLAG', 'L_COMMENT', 'L_SUPPKEY', 'SHIPINSTRUCT']], left_on='PS_PARTKEY', right_on='L_PARTKEY')

part[['P_PARTKEY']].merge(partsupp.merge(part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[(part['RETAILPRICE'] < 1063.0058330674)][['TYPE']].merge(nation, left_on='P_PARTKEY', right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer.merge(nation[['N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part[(part['PT_COMMENT'].str.startswith('i')) & (part['BRAND'] != 'Brand#43')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('q')) | (partsupp['AVAILQTY'] <= 9792)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']].merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] == 42)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'v')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region.merge(nation[(nation['N_NAME'] != 'R')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] >= 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('t')) | (nation['N_COMMENT'] == 'u')].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('l'))].merge(nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_NATIONKEY'] < 10)][['N_COMMENT', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_COMMENT', 'N_NATIONKEY']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

region[(region['R_NAME'] == 'AME')].merge(nation.merge(region[(region['R_REGIONKEY'] != 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 17)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(supplier[(supplier['S_COMMENT'].str.startswith('h')) & (supplier['S_ACCTBAL'] != 7005.199510103441)][['S_ACCTBAL', 'S_SUPPKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_REGIONKEY'] <= 3)], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

region[(region['R_NAME'] != 'A') | (region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_REGIONKEY']].merge(nation[['N_NAME']].merge(customer[(customer['C_ACCTBAL'] <= 6660.302746731721)], left_on='N_NATIONKEY', right_on='C_CUSTKEY').merge(partsupp[['PS_SUPPKEY']], left_on='N_NATIONKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(region[(region['R_COMMENT'] != 'u')].merge(nation[(nation['N_NAME'].str.startswith('S'))][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ADDRESS'] != 'L')].merge(orders[['CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_ADDRESS'] == 'z')].merge(orders[['O_CUSTKEY', 'ORDERDATE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_NAME']).agg('count')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(customer[(customer['C_PHONE'] == '13-') | (customer['C_COMMENT'] == 'f')].merge(nation[(nation['N_NAME'] != 'I')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] != 'C')][['ORDERDATE', 'CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer.merge(orders[(orders['O_ORDERKEY'] == 321) & (orders['CLERK'] != 'C')][['ORDERSTATUS', 'SHIPPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['RECEIPTDATE'] < '1998-11-06')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_ORDERKEY', 'O_COMMENT']).agg('count')

partsupp[(partsupp['AVAILQTY'] <= 6910) & (partsupp['PS_PARTKEY'] < 11) & (partsupp['PS_PARTKEY'] != 32) | (partsupp['PS_SUPPKEY'] <= 233)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(lineitem[(lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['LINENUMBER'] == 3)][['L_ORDERKEY', 'SHIPMODE']].merge(orders[['O_ORDERKEY']].merge(lineitem[(lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['L_COMMENT'].str.startswith('y'))], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['TOTALPRICE'] <= 205880.82522613418) & (orders['O_ORDERKEY'] > 770)][['CLERK', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[['RETURNFLAG', 'L_PARTKEY', 'SHIPMODE']].merge(partsupp[(partsupp['P_COMMENT'] != 'g')][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'] == 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] == 3342) & (partsupp['P_COMMENT'] != 'p')], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY')

supplier[(supplier['S_NATIONKEY'] != 16) & (supplier['S_ADDRESS'] == 'h')][['S_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('G'))], left_on='S_SUPPKEY', right_on='N_NATIONKEY').merge(customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['C_COMMENT'].str.startswith('i'))].merge(orders[(orders['TOTALPRICE'] < 230578.20081960462)].merge(lineitem[(lineitem['L_COMMENT'].str.startswith('-'))][['DISCOUNT', 'LINESTATUS', 'SHIPMODE', 'SHIPINSTRUCT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='S_SUPPKEY', right_on='C_CUSTKEY').groupby(by=['S_COMMENT']).agg('mean', numeric_only=True)

part[(part['P_NAME'] == 'bis') & (part['MFGR'] != 'Manufacturer#2')][['BRAND', 'P_NAME']].merge(orders[(orders['O_ORDERKEY'] <= 532)][['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE']], left_on='P_PARTKEY', right_on='O_ORDERKEY').merge(supplier[(supplier['S_ADDRESS'] == 'o')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 42) & (partsupp['SUPPLYCOST'] == 145.65968756753745)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='P_PARTKEY', right_on='R_REGIONKEY').groupby(by=['P_NAME', 'BRAND']).agg('sum', numeric_only=True)

supplier

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(supplier[(supplier['S_NATIONKEY'] >= 4)][['S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer.merge(orders[(orders['ORDERDATE'] == '1998-07-21') & (orders['TOTALPRICE'] >= 295094.8770963144)], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_COMMENT'] != 'v') | (nation['N_NATIONKEY'] < 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL', 'C_ADDRESS']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_PARTKEY'] != 56165)]

orders.merge(lineitem[(lineitem['L_ORDERKEY'] == 103) & (lineitem['L_COMMENT'].str.startswith('h'))][['QUANTITY', 'L_ORDERKEY']].merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM'])) | (orders['TOTALPRICE'] <= 183559.15321773133)].merge(lineitem[['QUANTITY', 'LINESTATUS', 'LINENUMBER', 'SHIPDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(orders[(orders['ORDERSTATUS'] == 'F')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 695.5948570755725) | (partsupp['PS_PARTKEY'] >= 26) | (partsupp['AVAILQTY'] > 250)][['PS_SUPPKEY']]

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier[(supplier['S_COMMENT'] == 'b') & (supplier['S_NAME'] == 'S')][['S_COMMENT', 'S_PHONE']].merge(nation, left_on='S_SUPPKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['AVAILQTY']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[['N_REGIONKEY']].merge(region[['R_REGIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('S'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'J') | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] < 20)].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 189438) & (lineitem['QUANTITY'] != 2) | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['RETURNFLAG'].isin(['A', 'N']))][['RECEIPTDATE', 'LINESTATUS', 'RETURNFLAG']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] < 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] == 5) | (nation['N_NATIONKEY'] > 17)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY').merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']).groupby(by=['RECEIPTDATE', 'LINESTATUS']).agg('max', numeric_only=True)

nation.merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ' ') & (partsupp['PS_PARTKEY'] == 36) & (partsupp['AVAILQTY'] == 6372)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] <= 1089.224450734649) & (part['P_NAME'] == 'm')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['CLERK'] == 'C')].merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] < 32) | (partsupp['P_COMMENT'] == 's')], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_COMMENT']).agg('count')

orders.groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

part[['CONTAINER', 'P_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] > 544) & (partsupp['SUPPLYCOST'] < 179.37153457436088)].merge(supplier[(supplier['S_ACCTBAL'] > 1789.5449546100956)].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'] == 'JUMBO') & (part['P_NAME'] != 'f')][['P_NAME', 'TYPE', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] > 6460) & (partsupp['AVAILQTY'] <= 6431)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST']].merge(nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_COMMENT'].str.startswith('t'))][['N_REGIONKEY', 'N_COMMENT']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY').merge(part[(part['BRAND'] != 'Brand#55')][['P_PARTKEY', 'TYPE', 'RETAILPRICE', 'CONTAINER']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

part.groupby(by=['TYPE', 'BRAND']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] == 0)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 16) | (nation['N_COMMENT'] != 'r') & (nation['N_COMMENT'] != 'r')]

customer[(customer['C_ACCTBAL'] > 644.5591651861405) & (customer['C_COMMENT'].str.startswith('t'))][['C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] != 18)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] == 7) & (nation['N_NATIONKEY'] >= 4)].merge(customer[(customer['C_NATIONKEY'] > 4) & (customer['C_ACCTBAL'] == 2044.6558105829545)].merge(nation[(nation['N_COMMENT'] == 'i')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] != 'p')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[['C_CUSTKEY', 'C_COMMENT']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] >= 2)].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_NAME'].str.startswith('M')) & (region['R_NAME'].str.startswith('E'))].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_REGIONKEY']].merge(region[['R_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_NATIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_NAME'] != 'ASI') | (region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[['N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp[['SUPPLYCOST']]

region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] >= 3)][['N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] != 1435.0030753687886)][['S_PHONE', 'S_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 3900) | (partsupp['SUPPLYCOST'] >= 769.1135355319664)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_NAME'] == 'S')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] == 210839.26361555778) & (orders['ORDERDATE'] < '1992-01-13')][['CLERK', 'TOTALPRICE', 'SHIPPRIORITY']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 265.3724183821335)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(supplier[(supplier['S_ADDRESS'] == 'z') | (supplier['S_ADDRESS'] != 'u')][['S_PHONE']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='S_SUPPKEY', right_on='R_REGIONKEY').merge(customer[['C_ACCTBAL', 'C_ADDRESS']].merge(nation[['N_COMMENT', 'N_NAME']], left_on='C_CUSTKEY', right_on='N_NATIONKEY'), left_on='S_SUPPKEY', right_on='C_CUSTKEY'), left_on='O_ORDERKEY', right_on='S_SUPPKEY')

nation[['N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_NATIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('v'))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region.merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_COMMENT'].str.startswith('s'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp.merge(lineitem[['TAX', 'LINESTATUS', 'SHIPDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['TYPE'].str.startswith('M')) & (part['TYPE'] != 'L')].merge(partsupp[(partsupp['SUPPLYCOST'] <= 215.30934861879135)].merge(lineitem[(lineitem['DISCOUNT'] >= 0.0483529956758314)], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] == 'E')].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] < 2)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier.merge(partsupp[(partsupp['PS_PARTKEY'] != 18) & (partsupp['AVAILQTY'] <= 7147)].merge(part[['RETAILPRICE', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'WRAP')][['P_NAME', 'PT_COMMENT']].merge(partsupp.merge(lineitem.merge(orders[['TOTALPRICE', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[['S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 21)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_SUPPKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[['N_NAME', 'N_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 1668)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='N_NATIONKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='P_PARTKEY', right_on='R_REGIONKEY').merge(region.merge(nation.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] != 95)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='P_PARTKEY', right_on='R_REGIONKEY').groupby(by=['P_NAME', 'PT_COMMENT']).agg('count')

supplier.merge(partsupp[(partsupp['PS_SUPPKEY'] == 2080)][['P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['P_COMMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_NAME'] != 'S') | (nation['N_NAME'].str.startswith('A'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS']).agg('count')

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD', 'BUILDING']))][['C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(orders[['TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['SHIPMODE'] != 'REG AIR')][['RETURNFLAG', 'L_ORDERKEY']].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'CLERK']].merge(lineitem[(lineitem['L_ORDERKEY'] != 90) | (lineitem['L_COMMENT'].str.startswith('-'))][['SHIPDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_CUSTKEY']).agg('min', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT']].merge(lineitem[(lineitem['SHIPMODE'] == 'MAIL') | (lineitem['SHIPMODE'].isin(['SHIP', 'MAIL', 'RAIL', 'AIR', 'FOB']))].merge(orders[(orders['O_ORDERKEY'] < 549) | (orders['SHIPPRIORITY'] <= 0)][['ORDERDATE', 'TOTALPRICE']].merge(customer[(customer['C_ACCTBAL'] == 1165.890093522593) | (customer['C_ADDRESS'].str.startswith('i'))][['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_ORDERKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(lineitem[['TAX', 'SHIPMODE']].merge(part[['MFGR']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').merge(nation[(nation['N_REGIONKEY'] != 0)].merge(customer[['C_NATIONKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A']))], left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['S_COMMENT', 'S_PHONE']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 396.6271087264179) & (partsupp['P_COMMENT'] == 't') | (partsupp['PS_PARTKEY'] >= 16) | (partsupp['PS_SUPPKEY'] < 3366)].merge(part[(part['SIZE'] != 16) & (part['BRAND'] == 'Brand#25')].merge(partsupp.merge(supplier[(supplier['S_NAME'] == 'S')][['S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(lineitem[(lineitem['RETURNFLAG'] == 'A') & (lineitem['L_PARTKEY'] <= 43083)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('AFR'))][['R_NAME']].merge(customer, left_on='R_REGIONKEY', right_on='C_CUSTKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 3)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] < 5948.659908063969)][['S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier.merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[['SUPPLYCOST']].merge(orders[['TOTALPRICE', 'CLERK', 'ORDERDATE']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_COMMENT', 'S_PHONE']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] < 3)].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

part[(part['CONTAINER'].str.startswith('WRAP')) | (part['BRAND'] != 'Brand#15')].merge(partsupp[(partsupp['SUPPLYCOST'] > 359.8020300080113) & (partsupp['P_COMMENT'] != 'x')], left_on='P_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_COMMENT'] == ' ')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] >= 16)][['N_COMMENT']].merge(customer, left_on='N_NATIONKEY', right_on='C_CUSTKEY')

part[(part['RETAILPRICE'] > 1089.9642504060291)].groupby(by=['BRAND', 'SIZE']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 67)][['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_PHONE']].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='C_CUSTKEY', right_on='R_REGIONKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_CUSTKEY', right_on='N_NATIONKEY').merge(lineitem[['L_ORDERKEY', 'LINENUMBER', 'DISCOUNT']].merge(orders[(orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] != 'O')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'])

region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation.merge(supplier.merge(partsupp[(partsupp['P_COMMENT'] != 's') | (partsupp['AVAILQTY'] >= 4200)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] > 18)].merge(region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NATIONKEY'] >= 14)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_ACCTBAL'] != -680.5326656875122)][['C_COMMENT']].merge(orders, left_on='C_CUSTKEY', right_on='O_ORDERKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] > 10)].merge(customer[(customer['C_NATIONKEY'] == 16) & (customer['C_ADDRESS'].str.startswith('9'))].merge(orders[(orders['O_COMMENT'] == 'h')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer.merge(nation[(nation['N_NATIONKEY'] < 19)][['N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp.merge(part[['RETAILPRICE', 'TYPE']].merge(lineitem[['SHIPINSTRUCT']], left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(customer, left_on='P_PARTKEY', right_on='C_CUSTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[['L_ORDERKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['PS_PARTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['L_PARTKEY'] == 26571) & (lineitem['EXTENDEDPRICE'] <= 20380.720498241422)][['LINESTATUS', 'LINENUMBER', 'L_COMMENT', 'RETURNFLAG']].merge(supplier[(supplier['S_NATIONKEY'] != 13)], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY')

part[(part['BRAND'].isin(['Brand#15', 'Brand#43', 'Brand#33'])) & (part['SIZE'] == 43) & (part['P_PARTKEY'] < 27) & (part['P_PARTKEY'] == 35)][['P_NAME', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'TYPE']].merge(customer[['C_CUSTKEY', 'C_COMMENT']].merge(orders[(orders['ORDERDATE'] >= '1992-01-13')].merge(customer[(customer['C_PHONE'] == '22-')][['C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY').merge(nation[(nation['N_NATIONKEY'] <= 13)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='P_PARTKEY', right_on='N_NATIONKEY')

region[['R_NAME']].merge(partsupp.merge(lineitem[(lineitem['L_COMMENT'] != 'ly ') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD')][['LINESTATUS', 'LINENUMBER']].merge(orders[(orders['O_ORDERKEY'] <= 645) | (orders['TOTALPRICE'] > 271791.72491585923)][['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[['COMMITDATE']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='R_REGIONKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

orders.merge(lineitem[(lineitem['L_SUPPKEY'] > 4981)][['L_ORDERKEY', 'LINESTATUS', 'L_COMMENT', 'SHIPMODE']].merge(orders[(orders['O_CUSTKEY'] <= 79676)][['CLERK', 'TOTALPRICE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['RECEIPTDATE', 'DISCOUNT', 'LINENUMBER']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERPRIORITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.07446861340131876) | (lineitem['QUANTITY'] <= 14)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['O_COMMENT']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 98)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='S_SUPPKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['QUANTITY', 'L_COMMENT']).agg('mean', numeric_only=True)

nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY']].merge(lineitem[['TAX', 'LINESTATUS']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['QUANTITY'] <= 24)], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

customer.merge(orders[['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(nation[['N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

customer.merge(orders[(orders['ORDERDATE'] == '1998-07-21') & (orders['O_CUSTKEY'] != 108392)][['ORDERPRIORITY', 'O_ORDERKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['ORDERDATE'] != '1998-07-21')].merge(customer[(customer['C_CUSTKEY'] == 96)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['L_COMMENT'] == 'j') & (lineitem['QUANTITY'] != 13)][['L_COMMENT', 'RETURNFLAG', 'SHIPDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY')

partsupp.merge(lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPMODE'] != 'TRUCK')].merge(partsupp[['SUPPLYCOST', 'P_COMMENT']].merge(lineitem[(lineitem['LINENUMBER'] == 4) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(part[(part['P_PARTKEY'] > 33)][['PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[['RECEIPTDATE', 'EXTENDEDPRICE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] <= 1) | (nation['N_COMMENT'] != 't') & (nation['N_COMMENT'] != 'l')].merge(customer[['C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_SUPPKEY'] != 184) & (supplier['S_PHONE'] != '2')].merge(nation[(nation['N_COMMENT'] == 'u') | (nation['N_NATIONKEY'] > 15)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(customer[(customer['C_NAME'] == 'C')][['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != 'i') & (customer['C_COMMENT'].str.startswith('c'))][['C_NAME', 'C_PHONE', 'C_NATIONKEY']].merge(nation[['N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NAME']].merge(customer[(customer['C_NATIONKEY'] >= 3)], left_on='N_NATIONKEY', right_on='C_CUSTKEY').merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_SUPPKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

nation.groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'C_NAME']]

partsupp[(partsupp['AVAILQTY'] != 3671) & (partsupp['AVAILQTY'] != 5731)][['P_COMMENT', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

orders[(orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] == 96499)][['SHIPPRIORITY', 'ORDERSTATUS']].merge(part[['SIZE', 'P_NAME', 'CONTAINER', 'BRAND']].merge(nation[['N_NAME', 'N_REGIONKEY']], left_on='P_PARTKEY', right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='P_PARTKEY').merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='O_ORDERKEY', right_on='R_REGIONKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['LINENUMBER'] <= 3) | (lineitem['L_PARTKEY'] != 80342)][['RETURNFLAG', 'EXTENDEDPRICE', 'LINESTATUS', 'TAX']].merge(supplier[(supplier['S_ACCTBAL'] == 2448.1423287664247) | (supplier['S_NAME'] == 'S')][['S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY').merge(customer[(customer['C_ADDRESS'] == '4') & (customer['C_NATIONKEY'] != 2)][['C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[['N_COMMENT']].merge(customer[(customer['C_CUSTKEY'] < 4)], left_on='N_NATIONKEY', right_on='C_CUSTKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY').merge(region.merge(nation[(nation['N_NAME'] != 'M')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == 's')][['N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'C_ACCTBAL']).agg('sum', numeric_only=True)

part.merge(partsupp[(partsupp['PS_PARTKEY'] <= 5)][['P_COMMENT', 'PS_PARTKEY']].merge(lineitem[(lineitem['LINESTATUS'] != 'O') | (lineitem['DISCOUNT'] >= 0.022064937956471676)], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['MFGR'] != 'Manufacturer#3')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 723.1350218145938) | (partsupp['AVAILQTY'] <= 5135)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['O_ORDERKEY'] >= 566)].merge(lineitem[(lineitem['L_ORDERKEY'] >= 135)][['LINENUMBER', 'LINESTATUS', 'L_COMMENT']].merge(customer[(customer['C_CUSTKEY'] >= 42)], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY').merge(orders.merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_ADDRESS'] != '9') | (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_COMMENT', 'C_CUSTKEY', 'C_PHONE']].merge(orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] <= 12)][['C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['C_ADDRESS'] == 'd')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['TOTALPRICE', 'SHIPPRIORITY']).agg('count')

nation.groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 'v') | (nation['N_NATIONKEY'] >= 21) & (nation['N_NAME'] != 'R') | (nation['N_NAME'].str.startswith('J'))].merge(customer[(customer['C_CUSTKEY'] > 73)], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_NATIONKEY'] >= 9)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] != 'h')].merge(nation.merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] <= 2)][['N_NATIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_SUPPKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'B')].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == 't')][['S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[['S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_COMMENT'] == 'n')], left_on='S_SUPPKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5908)].merge(supplier[['S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY']].merge(region.merge(nation[(nation['N_NAME'] == 'I')].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

part[['MFGR', 'CONTAINER', 'P_NAME']].merge(customer[(customer['C_PHONE'] == '25-') | (customer['C_NATIONKEY'] >= 13)][['C_PHONE', 'MKTSEGMENT']].merge(partsupp.merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='P_PARTKEY', right_on='C_CUSTKEY').merge(lineitem[['L_PARTKEY', 'TAX', 'SHIPMODE']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 4778)].merge(part[['MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['MFGR', 'CONTAINER']).agg('count')

orders[['TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY']].merge(lineitem[['COMMITDATE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'RECEIPTDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['TAX'] == 0.060318512551519494)], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_ORDERKEY', 'TOTALPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')][['SHIPDATE', 'L_COMMENT', 'SHIPINSTRUCT', 'LINENUMBER', 'SHIPMODE']].merge(supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_NAME'].str.startswith('S'))], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY').merge(partsupp[(partsupp['AVAILQTY'] < 8481)][['AVAILQTY', 'PS_SUPPKEY']].merge(lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R']))][['L_COMMENT', 'SHIPDATE', 'COMMITDATE']].merge(part[(part['TYPE'] != 'L') & (part['P_PARTKEY'] >= 125)][['SIZE', 'TYPE']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[['S_SUPPKEY']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

partsupp[['SUPPLYCOST', 'P_COMMENT']].groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 5501) & (partsupp['P_COMMENT'].str.startswith('u'))].merge(lineitem[['RETURNFLAG', 'L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] >= 5507)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02')][['TAX', 'SHIPMODE', 'L_SUPPKEY', 'L_ORDERKEY']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['AVAILQTY', 'SUPPLYCOST']).agg('max', numeric_only=True)

region

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(lineitem[['LINENUMBER', 'L_COMMENT']], left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['PS_PARTKEY']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'CONTAINER', 'BRAND']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 35) & (partsupp['PS_SUPPKEY'] == 2602)][['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['LINESTATUS'] != 'F')][['L_SUPPKEY', 'SHIPMODE']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 120.0041395213467)][['SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] <= '1992-05-02')].merge(orders[['SHIPPRIORITY', 'ORDERDATE']].merge(nation[(nation['N_NATIONKEY'] <= 13)][['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='O_ORDERKEY', right_on='N_NATIONKEY').merge(lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 9693)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] < 3469) | (partsupp['SUPPLYCOST'] > 202.41267933236315)].merge(lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 831.0509517919554) & (partsupp['PS_SUPPKEY'] < 6000)][['PS_PARTKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['L_COMMENT'] == 'lit')][['SHIPDATE', 'SHIPINSTRUCT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(part[(part['TYPE'].str.startswith('L')) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5']))].merge(partsupp[(partsupp['P_COMMENT'] != 's')][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['LINESTATUS']).agg('min', numeric_only=True)

orders.groupby(by=['SHIPPRIORITY']).agg('count')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] <= 1)].merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] <= 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(supplier[(supplier['S_ADDRESS'] != 's')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'S_NATIONKEY']).agg('count')

lineitem.merge(orders[['ORDERPRIORITY', 'O_ORDERKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] >= 12)], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['L_SUPPKEY', 'RETURNFLAG']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'g') & (partsupp['PS_PARTKEY'] == 33) & (partsupp['SUPPLYCOST'] > 242.69471368556026) | (partsupp['PS_SUPPKEY'] == 2756)][['PS_SUPPKEY', 'PS_PARTKEY']]

supplier[(supplier['S_ACCTBAL'] <= 1335.1623803524556) | (supplier['S_ACCTBAL'] > 1778.6462710606663) | (supplier['S_ADDRESS'].str.startswith('O'))][['S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 't')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 10) & (supplier['S_COMMENT'] != 'b') & (supplier['S_SUPPKEY'] <= 129)].groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#5')].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['QUANTITY'] >= 27)].merge(orders[(orders['O_CUSTKEY'] >= 22476) | (orders['O_ORDERKEY'] == 486)][['TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'].str.startswith('AFR'))].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_COMMENT'].str.startswith('o')) | (customer['C_ADDRESS'] != 'f')]

customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY']].merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_COMMENT'].str.startswith('e'))][['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('s'))][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

partsupp[(partsupp['AVAILQTY'] > 9134) & (partsupp['AVAILQTY'] <= 5338)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['CONTAINER']].merge(orders[(orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[(customer['C_ADDRESS'] != '6') & (customer['C_ACCTBAL'] > 3971.436788201033)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='P_PARTKEY', right_on='O_ORDERKEY').merge(customer[(customer['C_NATIONKEY'] == 3)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_PARTKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '2') & (supplier['S_COMMENT'].str.startswith(' '))].merge(partsupp[(partsupp['PS_PARTKEY'] == 22) & (partsupp['P_COMMENT'].str.startswith('c'))][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] != '3') & (supplier['S_COMMENT'] == 'd')][['S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 506.04528839934176) & (partsupp['PS_SUPPKEY'] < 5452)].merge(lineitem[(lineitem['EXTENDEDPRICE'] == 35240.65020228298)][['DISCOUNT', 'SHIPDATE', 'L_SUPPKEY', 'TAX']].merge(partsupp[['P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[['DISCOUNT', 'QUANTITY', 'L_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] >= 1037) & (partsupp['P_COMMENT'] != 'ly ')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(lineitem[(lineitem['LINENUMBER'] >= 6)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

orders[['ORDERSTATUS', 'O_COMMENT']].merge(region, left_on='O_ORDERKEY', right_on='R_REGIONKEY').groupby(by=['O_COMMENT', 'ORDERSTATUS']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[['C_COMMENT']].merge(part[(part['P_PARTKEY'] >= 154) | (part['SIZE'] != 31)], left_on='C_CUSTKEY', right_on='P_PARTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 965.2614178825816) & (partsupp['AVAILQTY'] <= 5961) | (partsupp['AVAILQTY'] <= 6157)][['P_COMMENT', 'PS_PARTKEY']]

orders[['ORDERPRIORITY']].merge(region.merge(nation[(nation['N_COMMENT'].str.startswith('s'))].merge(customer[(customer['C_ACCTBAL'] != 6576.760620166937) & (customer['C_CUSTKEY'] == 88)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='O_ORDERKEY', right_on='R_REGIONKEY').groupby(by=['ORDERPRIORITY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 6765) & (partsupp['PS_PARTKEY'] == 40)].merge(lineitem[['LINESTATUS', 'SHIPINSTRUCT']].merge(supplier[(supplier['S_NATIONKEY'] != 9)][['S_ACCTBAL']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY').merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['PS_PARTKEY']).agg('mean', numeric_only=True)

region

customer[(customer['C_CUSTKEY'] >= 92)][['C_ADDRESS', 'C_ACCTBAL']].merge(orders[(orders['O_CUSTKEY'] != 108239) & (orders['TOTALPRICE'] == 146729.24711746475)].merge(customer[['C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 6)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT']].merge(orders[(orders['CLERK'] == 'C')][['ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY').merge(orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')][['ORDERPRIORITY', 'CLERK']].merge(part[['BRAND', 'SIZE', 'RETAILPRICE']], left_on='O_ORDERKEY', right_on='P_PARTKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY'), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

customer[['C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']]

nation[['N_COMMENT']].merge(customer[(customer['C_ADDRESS'] == 'L')], left_on='N_NATIONKEY', right_on='C_CUSTKEY').merge(region, left_on='N_NATIONKEY', right_on='R_REGIONKEY')

part[(part['SIZE'] < 47) & (part['CONTAINER'].str.startswith('MED')) | (part['CONTAINER'] == 'WRAP') | (part['TYPE'] != 'P')].groupby(by=['PT_COMMENT', 'P_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.05050232187710705) | (lineitem['L_ORDERKEY'] <= 25) | (lineitem['SHIPDATE'] != '1998-10-30')].merge(partsupp[(partsupp['AVAILQTY'] >= 6963) | (partsupp['AVAILQTY'] < 3240)][['PS_PARTKEY']].merge(lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06')][['SHIPDATE', 'L_SUPPKEY', 'DISCOUNT', 'LINENUMBER']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] < 4938) | (partsupp['PS_SUPPKEY'] != 853)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['SHIPMODE'] == 'RAIL') & (lineitem['TAX'] == 0.0034294444973696782)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SHIPMODE']).agg('count')

region[(region['R_NAME'] == 'E')]

partsupp[(partsupp['PS_SUPPKEY'] == 4549) | (partsupp['AVAILQTY'] < 8861) & (partsupp['AVAILQTY'] <= 2090) & (partsupp['P_COMMENT'] == 'ly ')].merge(lineitem[['SHIPMODE']].merge(supplier[(supplier['S_ACCTBAL'] > 9365.963307166512)].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5139) & (partsupp['PS_SUPPKEY'] >= 554)][['SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

customer[(customer['C_COMMENT'] == 'a')].merge(nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] < 2)][['R_NAME']].merge(customer[(customer['C_COMMENT'].str.startswith('o')) & (customer['C_ACCTBAL'] >= 7282.554348135225)][['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_PHONE']], left_on='R_REGIONKEY', right_on='C_CUSTKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_COMMENT'] != 'i') & (supplier['S_ACCTBAL'] <= 5752.329157596903)].merge(partsupp[['PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['TOTALPRICE'] > 145775.263629438)][['ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('count')

part.merge(partsupp[(partsupp['P_COMMENT'] != 'v')][['PS_SUPPKEY']].merge(supplier[['S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['EXTENDEDPRICE'] < 14508.9723286001) | (lineitem['SHIPMODE'] == 'MAIL')][['L_PARTKEY', 'TAX', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['P_COMMENT'] == 'x')][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] > 1)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] == '32-')][['S_NAME', 'S_ADDRESS', 'S_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'SIZE']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] == 8) & (nation['N_REGIONKEY'] != 3)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

part[(part['PT_COMMENT'] != 'l') & (part['RETAILPRICE'] <= 929.5292261579712) | (part['PT_COMMENT'] == 'w')][['TYPE', 'SIZE']].merge(lineitem[['COMMITDATE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'L_COMMENT']].merge(orders[['CLERK']].merge(partsupp, left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['TYPE', 'SIZE']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')]

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['TYPE'] != 'S') | (part['BRAND'] == 'Brand#13')][['CONTAINER', 'RETAILPRICE', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[['TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == 'g') | (orders['O_CUSTKEY'] < 44919) & (orders['TOTALPRICE'] < 282843.7150167326)].merge(customer[(customer['C_NAME'] != 'C')][['C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['DISCOUNT'] == 0.08984965575017924) | (lineitem['QUANTITY'] < 44)][['EXTENDEDPRICE', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 16)], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != 't')][['AVAILQTY']].merge(nation[(nation['N_COMMENT'] != 'e')], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['DISCOUNT', 'SHIPINSTRUCT', 'LINESTATUS']].merge(orders.merge(lineitem[(lineitem['DISCOUNT'] != 0.08087032488569969) & (lineitem['RECEIPTDATE'] <= '1998-11-06')][['DISCOUNT', 'L_PARTKEY', 'RECEIPTDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['TOTALPRICE', 'ORDERDATE']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 46)][['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] != 0)].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

lineitem

part[(part['PT_COMMENT'] != 'a') & (part['BRAND'] == 'Brand#21') & (part['PT_COMMENT'] == 'b')].merge(partsupp[['PS_PARTKEY']].merge(lineitem[(lineitem['LINENUMBER'] < 2) & (lineitem['RETURNFLAG'].isin(['N', 'A', 'R']))], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'TYPE']).agg('max', numeric_only=True)

part.merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] < 32) & (partsupp['P_COMMENT'].str.startswith('o'))][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_ADDRESS', 'S_ACCTBAL']].merge(partsupp[(partsupp['AVAILQTY'] == 9081) | (partsupp['PS_SUPPKEY'] <= 2871)], left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['RETURNFLAG'].isin(['R']))][['SHIPMODE', 'COMMITDATE', 'RETURNFLAG']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(supplier[['S_ADDRESS', 'S_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] >= 2979)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_REGIONKEY'] <= 3)].merge(customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_NAME']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['ORDERSTATUS'] == 'F')][['TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'] == 'p')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_ACCTBAL'] != 1838.2349761676242)][['C_NAME', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] < 12)][['C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

lineitem[['RECEIPTDATE']].merge(orders, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY').merge(supplier[(supplier['S_COMMENT'] == 'v') & (supplier['S_SUPPKEY'] != 181)].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_COMMENT'] != 'o')].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY').merge(partsupp[(partsupp['AVAILQTY'] != 2900) | (partsupp['PS_PARTKEY'] >= 18)].merge(lineitem[(lineitem['L_ORDERKEY'] <= 131) | (lineitem['L_COMMENT'].str.startswith(','))][['L_PARTKEY', 'RETURNFLAG', 'TAX']].merge(partsupp[(partsupp['AVAILQTY'] <= 3074)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

orders.merge(customer[(customer['C_COMMENT'].str.startswith('h'))].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(orders[['O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['L_ORDERKEY'] >= 158) & (lineitem['DISCOUNT'] <= 0.08245643622132692) & (lineitem['L_PARTKEY'] > 160737) & (lineitem['TAX'] > 0.05454994324786752)].merge(orders[(orders['O_COMMENT'] == 's')][['O_COMMENT', 'CLERK', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 9) & (partsupp['AVAILQTY'] < 6911)][['AVAILQTY']].merge(nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] >= 15)].merge(supplier[(supplier['S_NATIONKEY'] != 9) & (supplier['S_NATIONKEY'] < 10)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['EXTENDEDPRICE']).agg('count')

orders.merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT']].merge(orders[(orders['O_ORDERKEY'] >= 92) & (orders['SHIPPRIORITY'] >= 0)][['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT']].merge(orders.merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 459) | (partsupp['SUPPLYCOST'] <= 289.2978782203859) & (partsupp['PS_SUPPKEY'] <= 1065)].merge(supplier[(supplier['S_ACCTBAL'] <= 1390.1860821466455) & (supplier['S_ACCTBAL'] >= 6558.350855599211)].merge(nation[(nation['N_NATIONKEY'] <= 15) | (nation['N_REGIONKEY'] < 3)].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['AVAILQTY'] >= 8027) | (partsupp['PS_PARTKEY'] < 20)][['SUPPLYCOST']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['RECEIPTDATE'] >= '1998-11-06')][['L_ORDERKEY', 'COMMITDATE', 'SHIPMODE', 'SHIPINSTRUCT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('count')

orders.merge(lineitem[['TAX', 'LINESTATUS', 'COMMITDATE', 'LINENUMBER']].merge(orders[['O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 47) & (supplier['S_COMMENT'].str.startswith('n')) & (supplier['S_NATIONKEY'] < 12)].merge(nation.merge(region[(region['R_NAME'] == 'AME') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] >= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

partsupp.merge(part[['SIZE', 'BRAND', 'MFGR']].merge(orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY']], left_on='P_PARTKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[['COMMITDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(supplier[(supplier['S_COMMENT'] != 'j') & (supplier['S_COMMENT'] != 'i')][['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['TOTALPRICE'] <= 59508.81715082654) & (orders['ORDERSTATUS'] == 'F')][['ORDERSTATUS']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 406.1202342768222) | (partsupp['SUPPLYCOST'] != 875.098593668585)].merge(lineitem[['L_SUPPKEY', 'COMMITDATE', 'SHIPDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(customer[(customer['C_CUSTKEY'] != 23)].merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_NATIONKEY'] == 4)][['N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

orders[['O_COMMENT', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] < 4)].merge(nation[(nation['N_NATIONKEY'] == 13)].merge(supplier[(supplier['S_COMMENT'] != 'the')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='S_SUPPKEY').groupby(by=['O_COMMENT']).agg('sum', numeric_only=True)

customer

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']]

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['O_COMMENT'] != 'a')][['ORDERDATE', 'TOTALPRICE']].merge(part[(part['RETAILPRICE'] < 938.0887589309079) | (part['RETAILPRICE'] >= 1099.9088711768038)][['SIZE', 'MFGR', 'PT_COMMENT', 'TYPE']], left_on='O_ORDERKEY', right_on='P_PARTKEY').merge(region[['R_NAME']].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY']], left_on='R_REGIONKEY', right_on='C_CUSTKEY').merge(supplier[(supplier['S_ACCTBAL'] > 6552.566488970117) | (supplier['S_NATIONKEY'] <= 6)].merge(partsupp[['PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='R_REGIONKEY', right_on='S_SUPPKEY'), left_on='O_ORDERKEY', right_on='R_REGIONKEY').groupby(by=['ORDERDATE']).agg('count')

nation.groupby(by=['N_NAME']).agg('mean', numeric_only=True)

lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_NAME', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] <= 18)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'] == 'LG')].merge(partsupp[(partsupp['PS_SUPPKEY'] < 5519) | (partsupp['PS_SUPPKEY'] != 907)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[(part['P_PARTKEY'] < 36) | (part['SIZE'] < 46)][['MFGR', 'P_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='P_PARTKEY', right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(lineitem[(lineitem['DISCOUNT'] < 0.03700451287963581) | (lineitem['DISCOUNT'] <= 0.020722875490911286)][['COMMITDATE', 'RECEIPTDATE']].merge(supplier[['S_ACCTBAL', 'S_NATIONKEY']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'h') & (partsupp['AVAILQTY'] >= 5344)][['AVAILQTY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part.merge(partsupp[['AVAILQTY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 4) | (partsupp['P_COMMENT'] != ' ')][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_REGIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] == 'l')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_COMMENT'] == 'l')][['N_COMMENT']].merge(supplier.merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_SUPPKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

part.merge(partsupp[(partsupp['AVAILQTY'] >= 4829) | (partsupp['AVAILQTY'] > 2099)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] > -819.7663955697017)].merge(partsupp[(partsupp['PS_PARTKEY'] < 38)][['P_COMMENT', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] > 787.788673362448) | (partsupp['AVAILQTY'] != 1643) | (partsupp['PS_PARTKEY'] >= 42)].merge(lineitem[['L_COMMENT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

part[(part['SIZE'] != 5) | (part['P_NAME'] == 'm')][['CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR', 'P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 6) & (nation['N_COMMENT'] == 'h') | (nation['N_NATIONKEY'] == 21)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('M'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

orders[['ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY']].merge(lineitem[(lineitem['L_PARTKEY'] >= 196722) & (lineitem['QUANTITY'] <= 21)], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['LINESTATUS'].isin(['O', 'F']))][['DISCOUNT']].merge(partsupp[(partsupp['P_COMMENT'] != 'p')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERPRIORITY', 'ORDERDATE']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'a') | (partsupp['PS_SUPPKEY'] < 4697)].merge(part.merge(partsupp[['PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE')].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] <= 172)][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_ORDERKEY'] <= 82)], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING'])) | (customer['C_PHONE'] != '13-')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part[(part['PT_COMMENT'] != 'kag')].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != 'are') | (partsupp['P_COMMENT'] == '.')].merge(supplier[(supplier['S_NATIONKEY'] < 12) | (supplier['S_COMMENT'] != '.')][['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['RETURNFLAG'].isin(['N']))][['LINENUMBER', 'L_ORDERKEY', 'L_SUPPKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != 'e') | (partsupp['PS_SUPPKEY'] < 4244)][['P_COMMENT', 'PS_PARTKEY']].merge(lineitem[['RECEIPTDATE']].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part.merge(partsupp[(partsupp['P_COMMENT'] == 'bli') & (partsupp['AVAILQTY'] >= 1377)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 's')].merge(part[['CONTAINER']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='P_PARTKEY', right_on='R_REGIONKEY').merge(nation, left_on='P_PARTKEY', right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['L_SUPPKEY'] < 1363)].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

partsupp.groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

part[['RETAILPRICE', 'TYPE']]

nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] != 10) & (nation['N_NAME'] != 'E')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NATIONKEY'] < 21) & (nation['N_REGIONKEY'] < 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

part[(part['TYPE'] == 'E')][['P_NAME', 'PT_COMMENT', 'CONTAINER']]

supplier[(supplier['S_ACCTBAL'] > 9279.63191912626) | (supplier['S_NATIONKEY'] < 9) & (supplier['S_ADDRESS'].str.startswith('J')) & (supplier['S_NAME'] == 'S')].merge(nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(lineitem[['RETURNFLAG', 'DISCOUNT', 'L_COMMENT', 'TAX']].merge(nation[(nation['N_REGIONKEY'] >= 1)][['N_NAME']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('count')

supplier[(supplier['S_SUPPKEY'] < 98) | (supplier['S_ADDRESS'] != 'd') & (supplier['S_COMMENT'] == 'b') | (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] != 'c')].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'AFR')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[['PS_PARTKEY']].merge(part[(part['P_PARTKEY'] >= 119) | (part['TYPE'] != 'SMA')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[['P_PARTKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 1196) | (partsupp['SUPPLYCOST'] != 51.00399542602648)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['TAX'] < 0.00017468058489379602) | (lineitem['DISCOUNT'] >= 0.012638141269875225)][['SHIPMODE', 'EXTENDEDPRICE', 'L_PARTKEY', 'LINENUMBER']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] != 6751) & (partsupp['AVAILQTY'] < 9535)][['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['SIZE'] >= 47) & (part['SIZE'] < 6)][['CONTAINER', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

partsupp

part.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 2874) & (partsupp['PS_PARTKEY'] == 20)].merge(lineitem[(lineitem['QUANTITY'] == 36) | (lineitem['TAX'] == 0.033489792026691216)].merge(partsupp[(partsupp['P_COMMENT'] != 'k')][['PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5331) & (partsupp['PS_SUPPKEY'] != 2256)].merge(part.merge(partsupp[(partsupp['P_COMMENT'] == 'q') | (partsupp['PS_SUPPKEY'] > 2485)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[['SHIPMODE', 'QUANTITY', 'COMMITDATE', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 1843) & (partsupp['SUPPLYCOST'] < 985.810280255015)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['PT_COMMENT'].str.startswith('d')) & (part['P_NAME'] == 'f')][['CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 688.0828414984741)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(lineitem[['RECEIPTDATE', 'SHIPDATE', 'L_COMMENT']].merge(nation[(nation['N_NAME'] == 'B')][['N_COMMENT']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['AVAILQTY', 'PS_PARTKEY']).agg('min', numeric_only=True)

lineitem.groupby(by=['EXTENDEDPRICE', 'SHIPMODE']).agg('mean', numeric_only=True)

part[['CONTAINER']].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'K')][['N_COMMENT', 'N_NATIONKEY']].merge(supplier[(supplier['S_ADDRESS'] == 'y') & (supplier['S_PHONE'] == '2')][['S_PHONE', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(supplier[['S_NATIONKEY', 'S_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_ADDRESS'] == 'F') & (customer['C_ACCTBAL'] > -26.66341149795926)][['MKTSEGMENT', 'C_NAME']].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] != 'C')][['S_PHONE', 'S_SUPPKEY']], left_on='C_CUSTKEY', right_on='S_SUPPKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

region[(region['R_REGIONKEY'] != 0) | (region['R_COMMENT'] != 'g')].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

part[(part['BRAND'].isin(['Brand#21', 'Brand#11', 'Brand#25', 'Brand#35', 'Brand#14', 'Brand#23', 'Brand#52', 'Brand#55', 'Brand#12', 'Brand#51', 'Brand#45', 'Brand#44', 'Brand#33', 'Brand#42', 'Brand#34', 'Brand#22', 'Brand#54', 'Brand#53', 'Brand#31', 'Brand#41', 'Brand#32', 'Brand#43', 'Brand#13', 'Brand#15', 'Brand#24'])) & (part['CONTAINER'] == 'WRAP') & (part['SIZE'] > 42) & (part['BRAND'] == 'Brand#12')][['RETAILPRICE', 'TYPE', 'P_NAME', 'BRAND']].merge(lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06')][['SHIPMODE']], left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['BRAND']).agg('max', numeric_only=True)

supplier[['S_ADDRESS']]

partsupp[(partsupp['SUPPLYCOST'] > 694.0211411841166)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(lineitem[['RECEIPTDATE', 'LINENUMBER', 'QUANTITY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 1)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP', 'FOB', 'MAIL', 'AIR']))].merge(orders[['ORDERPRIORITY', 'O_ORDERKEY']].merge(lineitem[['RECEIPTDATE', 'L_SUPPKEY', 'LINENUMBER']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['AVAILQTY'] >= 3548) & (partsupp['P_COMMENT'] != 't')][['PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem.merge(orders[(orders['ORDERSTATUS'] == 'F')][['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

nation.merge(region.merge(nation[(nation['N_NATIONKEY'] != 3) | (nation['N_COMMENT'].str.startswith('n'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] <= 2)].merge(supplier[(supplier['S_SUPPKEY'] < 80)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] == 87)].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_PHONE'] != '2')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NAME'] == 'P')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer.groupby(by=['C_ADDRESS', 'C_CUSTKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 185) | (supplier['S_ACCTBAL'] >= 4215.065306797558) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] != 3)].merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_PHONE']].merge(region[(region['R_NAME'] == 'AME')], left_on='C_CUSTKEY', right_on='R_REGIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(supplier[(supplier['S_SUPPKEY'] >= 10)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL']]

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['CONTAINER'].str.startswith('SM')) | (part['MFGR'] != 'Manufacturer#5') | (part['P_PARTKEY'] != 38)][['CONTAINER']].merge(nation.merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_NAME'] == 'AME')].merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='P_PARTKEY', right_on='N_NATIONKEY')

lineitem[['SHIPDATE', 'L_PARTKEY', 'LINENUMBER']]

supplier[(supplier['S_ADDRESS'] == 'S') & (supplier['S_ADDRESS'] != 'k') | (supplier['S_NAME'].str.startswith('S'))].merge(partsupp[(partsupp['P_COMMENT'] == 'c')][['P_COMMENT', 'AVAILQTY']].merge(customer[(customer['C_COMMENT'] == 'i')], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='C_CUSTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation.merge(supplier[(supplier['S_ADDRESS'] != 'b')].merge(partsupp[(partsupp['PS_SUPPKEY'] > 1248)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['L_SUPPKEY'] >= 6372) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) & (lineitem['EXTENDEDPRICE'] <= 43509.048133987264)].merge(partsupp.merge(lineitem[(lineitem['SHIPMODE'].isin(['SHIP', 'MAIL', 'RAIL', 'AIR', 'REG AIR', 'FOB'])) | (lineitem['QUANTITY'] <= 42)][['DISCOUNT', 'L_SUPPKEY']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['RECEIPTDATE'] == '1998-11-06')].merge(orders[(orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] <= 149997.71141074446)][['ORDERPRIORITY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['ORDERSTATUS'] == 'O')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

region[(region['R_REGIONKEY'] == 1)][['R_NAME', 'R_REGIONKEY']]

orders[(orders['ORDERSTATUS'] == 'P')][['CLERK', 'O_ORDERKEY', 'TOTALPRICE']].merge(lineitem[(lineitem['L_ORDERKEY'] > 35)].merge(partsupp[(partsupp['SUPPLYCOST'] < 95.33679545198537)].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 33) & (partsupp['SUPPLYCOST'] <= 69.30512909556138)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['RETURNFLAG', 'TAX', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] != 31)][['SUPPLYCOST']].merge(supplier, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['TOTALPRICE', 'O_ORDERKEY']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] == 183)][['BRAND', 'SIZE', 'P_NAME', 'TYPE', 'PT_COMMENT']].merge(supplier[['S_PHONE', 'S_ACCTBAL']].merge(region[['R_NAME']].merge(supplier[(supplier['S_COMMENT'] != 'q') | (supplier['S_SUPPKEY'] <= 175)][['S_NATIONKEY', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']], left_on='R_REGIONKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(orders[['O_CUSTKEY']].merge(customer[['C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='P_PARTKEY', right_on='O_ORDERKEY')

region[['R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_NAME'] == 'J')][['N_NATIONKEY']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'MACHINERY')][['C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] != 'E')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_ADDRESS', 'S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 't')][['N_NATIONKEY', 'N_NAME']].merge(supplier[(supplier['S_ADDRESS'] != 'T')].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'S')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(supplier[(supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_NATIONKEY', 'S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 35) & (partsupp['PS_SUPPKEY'] < 5367) | (partsupp['SUPPLYCOST'] == 520.0188495205759)][['PS_PARTKEY']].merge(lineitem[['QUANTITY', 'L_PARTKEY', 'SHIPMODE']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[['CONTAINER', 'TYPE', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['L_PARTKEY'] == 63043)], left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['PS_PARTKEY']).agg('mean', numeric_only=True)

part[['TYPE', 'CONTAINER']].merge(orders[(orders['TOTALPRICE'] > 26148.17570683211) | (orders['O_CUSTKEY'] < 3739)].merge(customer[(customer['C_NAME'] != 'C')][['C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(nation[(nation['N_NAME'].str.startswith('E'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='P_PARTKEY', right_on='O_ORDERKEY').merge(region[(region['R_COMMENT'] != 'u')][['R_REGIONKEY']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NAME'] == 'G')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='P_PARTKEY', right_on='R_REGIONKEY').merge(customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['RETURNFLAG'] != 'R') & (lineitem['RETURNFLAG'] != 'A')][['SHIPMODE', 'SHIPINSTRUCT', 'L_COMMENT', 'RECEIPTDATE']].merge(part[(part['TYPE'] != 'P') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3']))].merge(partsupp[['AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] == 13)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').merge(supplier[(supplier['S_NATIONKEY'] != 6) & (supplier['S_NAME'] == 'S')].merge(partsupp[(partsupp['AVAILQTY'] == 3574)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_NAME']].merge(part[['P_NAME', 'BRAND']], left_on='N_NATIONKEY', right_on='P_PARTKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY').merge(orders, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY')

region[(region['R_REGIONKEY'] <= 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

customer.merge(orders[['O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 11)][['N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['AVAILQTY'] != 6346) | (partsupp['P_COMMENT'] == 't')], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_NAME'].str.startswith('J'))][['N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('AFR'))][['R_NAME']].merge(supplier[(supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_ADDRESS'] != 'U')][['S_PHONE']], left_on='R_REGIONKEY', right_on='S_SUPPKEY').merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_ADDRESS']).agg('count')

part.groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

lineitem[['SHIPDATE']].merge(nation[(nation['N_NATIONKEY'] <= 19)].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] <= 0)].merge(nation[(nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier.merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'].str.startswith('s'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'U')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY').merge(orders[['O_ORDERKEY']].merge(lineitem[(lineitem['TAX'] >= 0.05651111671131155) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'COLLECT COD']))][['SHIPINSTRUCT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['QUANTITY'] <= 47)][['L_PARTKEY', 'RECEIPTDATE', 'SHIPMODE', 'L_ORDERKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY').groupby(by=['SHIPDATE']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 9337) & (partsupp['SUPPLYCOST'] <= 289.53900432744064) & (partsupp['AVAILQTY'] == 8029)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] <= 4305) | (partsupp['SUPPLYCOST'] > 166.459726569309)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['RETURNFLAG'] == 'A') & (lineitem['COMMITDATE'] > '1992-05-15')].merge(orders.merge(lineitem[['RETURNFLAG', 'DISCOUNT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['O_CUSTKEY'] <= 78319)].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'].str.startswith('ASI'))].merge(nation[(nation['N_COMMENT'] == 'i') | (nation['N_NATIONKEY'] < 17)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier.merge(partsupp[(partsupp['AVAILQTY'] <= 6241) & (partsupp['P_COMMENT'] == 'd')], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'V') & (nation['N_NATIONKEY'] < 10)].merge(customer.merge(orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 20.713080899513965) | (partsupp['PS_PARTKEY'] <= 28)].merge(lineitem[['EXTENDEDPRICE', 'SHIPINSTRUCT', 'DISCOUNT']].merge(supplier[(supplier['S_ACCTBAL'] <= -547.9946583245649) | (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_ADDRESS', 'S_ACCTBAL']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['L_PARTKEY'] < 140133)][['LINENUMBER', 'EXTENDEDPRICE', 'COMMITDATE', 'DISCOUNT']].merge(nation[(nation['N_NATIONKEY'] > 6) & (nation['N_REGIONKEY'] != 0)].merge(customer[(customer['C_COMMENT'].str.startswith('q')) | (customer['C_NATIONKEY'] < 12)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(part[(part['BRAND'] == 'Brand#32') | (part['SIZE'] != 12)], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['AVAILQTY', 'P_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] < 39937.08145897166) | (lineitem['LINENUMBER'] > 5)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SHIPDATE']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NAME']].merge(orders[(orders['O_COMMENT'] != 'y')].merge(lineitem[['L_ORDERKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['CLERK', 'O_COMMENT', 'O_CUSTKEY', 'ORDERSTATUS']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

lineitem[(lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['TAX'] <= 0.028943890981951326)].merge(partsupp[(partsupp['P_COMMENT'] != 'g')], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_NAME'].str.startswith('y'))].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders.merge(lineitem[['RETURNFLAG']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_ACCTBAL'] == 9277.626740326741)][['C_PHONE', 'C_NAME', 'C_CUSTKEY']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['P_COMMENT'] == 'j') & (partsupp['SUPPLYCOST'] < 462.4210964191301)]

supplier[(supplier['S_ADDRESS'].str.startswith('w')) & (supplier['S_COMMENT'].str.startswith('s')) | (supplier['S_ACCTBAL'] < 9121.232973328493)].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[['CLERK', 'O_ORDERKEY']].merge(lineitem[(lineitem['RETURNFLAG'] != 'R') | (lineitem['LINESTATUS'].isin(['O', 'F']))][['QUANTITY', 'LINENUMBER']].merge(nation[(nation['N_NATIONKEY'] != 8) & (nation['N_NAME'] != 'M')].merge(supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_COMMENT'].str.startswith('al '))], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')][['MKTSEGMENT', 'C_COMMENT', 'C_NAME']].merge(supplier[(supplier['S_NATIONKEY'] <= 7) | (supplier['S_COMMENT'].str.startswith('b'))].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='C_CUSTKEY', right_on='S_SUPPKEY').merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] == 'C')][['N_NATIONKEY']].merge(customer[(customer['C_PHONE'] == '25-') | (customer['C_NATIONKEY'] <= 19)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='C_CUSTKEY', right_on='S_SUPPKEY').groupby(by=['C_COMMENT', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_COMMENT'] != 'i') & (orders['O_CUSTKEY'] >= 56927)].merge(customer[(customer['C_ACCTBAL'] < 9103.351022979583)].merge(nation.merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['L_COMMENT'].str.startswith('o'))][['L_PARTKEY', 'SHIPINSTRUCT', 'TAX', 'QUANTITY']].merge(partsupp[(partsupp['AVAILQTY'] > 1034)].merge(lineitem[(lineitem['L_ORDERKEY'] != 44) | (lineitem['SHIPMODE'] != 'FOB')][['RETURNFLAG', 'SHIPINSTRUCT', 'SHIPMODE', 'COMMITDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['CLERK', 'O_ORDERKEY']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']]

orders[['TOTALPRICE']].merge(lineitem[['LINENUMBER', 'LINESTATUS', 'L_COMMENT']].merge(nation[(nation['N_COMMENT'] != 't') | (nation['N_NAME'] == 'V')][['N_NATIONKEY']].merge(customer[['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'BUILDING', 'MACHINERY']))][['C_COMMENT']].merge(supplier[['S_NATIONKEY']], left_on='C_CUSTKEY', right_on='S_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['TOTALPRICE']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'] != 'AFR')][['R_COMMENT']].merge(customer.merge(orders.merge(lineitem[(lineitem['RETURNFLAG'] != 'R')][['SHIPDATE', 'QUANTITY', 'L_COMMENT', 'TAX']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_COMMENT'] != 'r')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='R_REGIONKEY', right_on='C_CUSTKEY').merge(orders[(orders['O_ORDERKEY'] > 613) | (orders['O_COMMENT'] != 'x')][['SHIPPRIORITY', 'ORDERDATE']].merge(supplier.merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='S_SUPPKEY'), left_on='R_REGIONKEY', right_on='O_ORDERKEY').merge(lineitem, left_on='R_REGIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'])

partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] != 'p') | (part['MFGR'] == 'Manufacturer#2')][['CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[['L_SUPPKEY', 'SHIPMODE', 'RETURNFLAG', 'COMMITDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY')

customer[(customer['C_CUSTKEY'] < 37) | (customer['C_ADDRESS'] != 'K')][['C_CUSTKEY', 'C_ACCTBAL']].merge(orders[(orders['O_COMMENT'] == 'the') | (orders['O_CUSTKEY'] < 78558)].merge(lineitem[['QUANTITY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN'])) | (lineitem['QUANTITY'] != 48)][['L_SUPPKEY', 'QUANTITY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['SHIPPRIORITY'] != 0)], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

customer.merge(orders[['O_ORDERKEY']].merge(lineitem[(lineitem['TAX'] > 6.329278846411768e-05)][['SHIPDATE', 'LINENUMBER']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['EXTENDEDPRICE'] <= 78699.68074782359)].merge(partsupp[(partsupp['AVAILQTY'] <= 4415) & (partsupp['PS_PARTKEY'] > 47)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_COMMENT'].str.startswith('k')) & (orders['ORDERSTATUS'].isin(['P', 'O', 'F']))].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30')].merge(partsupp[(partsupp['PS_PARTKEY'] < 12) & (partsupp['PS_SUPPKEY'] > 531)].merge(lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['COMMITDATE'] == '1998-10-16')][['LINENUMBER', 'L_PARTKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] == 3489) & (partsupp['PS_PARTKEY'] == 4)].merge(lineitem[(lineitem['L_PARTKEY'] == 139414)], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[['P_PARTKEY', 'P_NAME']].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SHIPDATE']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 8129) | (partsupp['PS_PARTKEY'] > 41) & (partsupp['PS_PARTKEY'] != 16)].groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'SHIP') & (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['QUANTITY'] != 28)][['L_SUPPKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'EXTENDEDPRICE', 'DISCOUNT']].merge(partsupp[['PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['EXTENDEDPRICE', 'DISCOUNT']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 787.2853123665718) & (partsupp['PS_SUPPKEY'] > 6167) & (partsupp['SUPPLYCOST'] == 872.3641662819394)].merge(part.merge(partsupp[(partsupp['AVAILQTY'] < 7067) | (partsupp['AVAILQTY'] > 473)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(lineitem[(lineitem['TAX'] < 0.0209306033873351) & (lineitem['QUANTITY'] < 43)][['DISCOUNT', 'L_SUPPKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 19)].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_NAME'] != 'A') | (nation['N_NAME'].str.startswith('J'))].merge(supplier[(supplier['S_ACCTBAL'] >= 8807.412747372802)][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_NATIONKEY'] > 6)].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL']).agg('count')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'].str.startswith('u'))][['N_COMMENT']].merge(partsupp, left_on='N_NATIONKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(partsupp[(partsupp['PS_PARTKEY'] > 36)].merge(part[(part['SIZE'] <= 29)][['MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] < 9)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['SUPPLYCOST'] != 531.8241196941312)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

region[['R_REGIONKEY']]

lineitem[['LINENUMBER', 'EXTENDEDPRICE', 'SHIPDATE', 'TAX', 'L_PARTKEY']].groupby(by=['TAX']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 46)].merge(part[['BRAND']].merge(nation[(nation['N_COMMENT'] != 'h') | (nation['N_REGIONKEY'] >= 0)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(supplier[(supplier['S_NATIONKEY'] == 23) & (supplier['S_PHONE'] != '2')][['S_NATIONKEY', 'S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='P_PARTKEY', right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[['RETAILPRICE', 'PT_COMMENT']].merge(lineitem, left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(lineitem[['L_COMMENT', 'QUANTITY', 'TAX']], left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 55260) | (lineitem['LINESTATUS'].isin(['O', 'F']))]

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY', 'FURNITURE']))][['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 'n')].merge(customer[(customer['C_NAME'].str.startswith('C'))].merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] <= 0)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['QUANTITY'] != 45) & (lineitem['L_ORDERKEY'] != 141)][['COMMITDATE', 'RETURNFLAG']].merge(part[(part['RETAILPRICE'] >= 1003.6951270930516) & (part['TYPE'] != 'E')][['TYPE', 'P_PARTKEY', 'P_NAME']].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['L_ORDERKEY'] == 8) | (lineitem['TAX'] != 0.030943145493256764)][['L_SUPPKEY', 'DISCOUNT', 'SHIPINSTRUCT', 'EXTENDEDPRICE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

lineitem[(lineitem['SHIPMODE'] != 'SHIP') & (lineitem['QUANTITY'] == 34)][['QUANTITY', 'DISCOUNT', 'RECEIPTDATE', 'SHIPINSTRUCT', 'SHIPDATE']].groupby(by=['SHIPDATE']).agg('sum', numeric_only=True)

orders[['CLERK', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY']]

partsupp.merge(supplier[(supplier['S_ADDRESS'] == 'q')][['S_COMMENT']].merge(orders[['SHIPPRIORITY', 'ORDERDATE']], left_on='S_SUPPKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY']]

lineitem[['LINENUMBER', 'SHIPINSTRUCT']].merge(orders[['SHIPPRIORITY']].merge(nation, left_on='O_ORDERKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY').groupby(by=['LINENUMBER', 'SHIPINSTRUCT']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 7694) | (partsupp['P_COMMENT'].str.startswith('c'))][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(orders[['ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY').merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] < 3)], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='R_REGIONKEY')

nation[['N_COMMENT']]

supplier[(supplier['S_ACCTBAL'] > 4586.182805225754) & (supplier['S_ADDRESS'].str.startswith('p'))][['S_ACCTBAL', 'S_SUPPKEY']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

supplier[['S_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'] == 'x') & (partsupp['PS_SUPPKEY'] < 1778)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(lineitem[(lineitem['EXTENDEDPRICE'] < 68405.7609866014)][['TAX', 'LINENUMBER', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation.merge(customer[['MKTSEGMENT', 'C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] >= 17)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('ly '))][['P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(lineitem[(lineitem['L_ORDERKEY'] <= 15)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

customer[['C_COMMENT']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] > 106) | (supplier['S_ACCTBAL'] <= 854.2215282421248)][['S_PHONE', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['BRAND']].merge(orders[(orders['TOTALPRICE'] >= 354746.9779952137) | (orders['ORDERDATE'] >= '1992-01-13')], left_on='P_PARTKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

supplier[(supplier['S_ADDRESS'] == 'W') & (supplier['S_ADDRESS'] != 'j') & (supplier['S_ADDRESS'] != 'h') | (supplier['S_NATIONKEY'] <= 10)]

partsupp[(partsupp['SUPPLYCOST'] < 170.39230440535314) | (partsupp['SUPPLYCOST'] == 39.50220667304491) & (partsupp['AVAILQTY'] <= 9556)].groupby(by=['AVAILQTY', 'P_COMMENT']).agg('count')

customer.merge(orders[(orders['O_CUSTKEY'] != 100793)][['ORDERPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(customer[(customer['C_COMMENT'] != 'e')][['C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[['R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY']).agg('max', numeric_only=True)

nation.merge(supplier[['S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NAME']).agg('count')

part[['CONTAINER', 'P_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] != ',') & (partsupp['P_COMMENT'].str.startswith('s'))], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] < 20)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

part.merge(partsupp[['PS_SUPPKEY']].merge(lineitem[(lineitem['L_ORDERKEY'] < 173) & (lineitem['RECEIPTDATE'] < '1998-11-06')], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] <= 2610.4479005955836)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_COMMENT'] == 'e') & (nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] == ' ')].merge(customer[['C_NAME', 'C_CUSTKEY', 'C_NATIONKEY']].merge(orders[(orders['O_CUSTKEY'] >= 80685) | (orders['ORDERDATE'] <= '1998-07-21')][['O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

part.groupby(by=['CONTAINER']).agg('count')

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'R'])) | (lineitem['LINENUMBER'] < 5) | (lineitem['L_ORDERKEY'] > 1)].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders.merge(lineitem.merge(partsupp[['PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SHIPINSTRUCT', 'EXTENDEDPRICE']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 5752.754086288514) & (customer['C_ACCTBAL'] != 5472.949728753812)].merge(nation[['N_NATIONKEY']].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'C') | (nation['N_REGIONKEY'] != 2)].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('!')) & (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_ADDRESS'] != 'O') & (supplier['S_PHONE'] == '26-')][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 583.2689273219967) & (partsupp['PS_SUPPKEY'] != 5952)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

orders[['ORDERDATE', 'O_ORDERKEY']].merge(lineitem[(lineitem['LINENUMBER'] <= 1) | (lineitem['SHIPMODE'] != 'REG AIR')].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] != 'f') | (customer['C_CUSTKEY'] > 76)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['L_PARTKEY'] < 108754) | (lineitem['SHIPINSTRUCT'] != 'NONE')][['RECEIPTDATE', 'COMMITDATE']].merge(partsupp[(partsupp['P_COMMENT'] != 'ly ') | (partsupp['PS_SUPPKEY'] >= 6184)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(nation[(nation['N_NATIONKEY'] > 13) | (nation['N_COMMENT'] == 'h')].merge(region[['R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('0')) | (supplier['S_ACCTBAL'] >= 6885.526518484779) & (supplier['S_ACCTBAL'] < 6630.21063082325) | (supplier['S_SUPPKEY'] <= 168)][['S_ADDRESS', 'S_PHONE']].merge(orders[(orders['SHIPPRIORITY'] >= 0)][['ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY', 'CLERK']].merge(customer.merge(orders[['ORDERPRIORITY', 'SHIPPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[['C_COMMENT']].merge(lineitem[['DISCOUNT', 'L_PARTKEY', 'RECEIPTDATE', 'L_SUPPKEY']], left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='S_SUPPKEY', right_on='O_ORDERKEY')

nation.groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'O_ORDERKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['TAX', 'L_SUPPKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_ORDERKEY', 'ORDERPRIORITY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] != 2)].merge(nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'J')], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier[(supplier['S_ADDRESS'] == 'T') | (supplier['S_SUPPKEY'] <= 24)].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] == 3)].merge(customer[(customer['C_CUSTKEY'] == 93)][['MKTSEGMENT', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] != 'y') | (nation['N_NATIONKEY'] > 10)], left_on='C_CUSTKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_COMMENT'] != 'u')].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] > 7)][['N_COMMENT']].merge(orders[(orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] >= 102438.62317921889)], left_on='N_NATIONKEY', right_on='O_ORDERKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

orders[(orders['TOTALPRICE'] == 185136.71944642733) & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] >= 0) | (orders['O_COMMENT'] != 'n')].merge(customer[['C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'E')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'BUILDING')][['C_PHONE', 'C_ACCTBAL']].merge(supplier[['S_NATIONKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='C_CUSTKEY', right_on='S_SUPPKEY').merge(orders[['CLERK', 'ORDERPRIORITY']], left_on='C_CUSTKEY', right_on='O_ORDERKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_CUSTKEY'] >= 38) & (customer['C_CUSTKEY'] < 6)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS', 'CLERK']).agg('mean', numeric_only=True)

supplier.merge(partsupp[(partsupp['AVAILQTY'] <= 1409)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] <= 4908) | (partsupp['SUPPLYCOST'] == 894.394819513486)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

region[(region['R_REGIONKEY'] > 0) & (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME']].merge(partsupp.merge(lineitem[(lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'DELIVER IN PERSON']))][['LINESTATUS', 'L_COMMENT', 'LINENUMBER', 'COMMITDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[['RECEIPTDATE', 'EXTENDEDPRICE', 'LINENUMBER']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='R_REGIONKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(lineitem[(lineitem['TAX'] < 0.00519823834114332)], left_on='R_REGIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'])

supplier.merge(nation[(nation['N_NATIONKEY'] != 0)].merge(customer[(customer['C_CUSTKEY'] == 52) | (customer['C_ADDRESS'] != 'F')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] == 'e')][['N_NATIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_COMMENT'] != 'd')][['S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NATIONKEY'] < 16)][['N_COMMENT']], left_on='S_SUPPKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 45) & (partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['SUPPLYCOST'] > 170.90972189102035) | (partsupp['PS_SUPPKEY'] == 3990)].merge(supplier.merge(partsupp[(partsupp['PS_PARTKEY'] >= 41)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 73.08032139449666)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 1)][['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['MFGR'] == 'Manufacturer#3') | (part['TYPE'].str.startswith('E'))][['BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_COMMENT'] != 'n') & (nation['N_REGIONKEY'] != 0)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NAME'] == 'P')], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders.merge(lineitem[(lineitem['COMMITDATE'] == '1998-10-16')].merge(partsupp[(partsupp['SUPPLYCOST'] == 352.57312264698766) | (partsupp['PS_SUPPKEY'] <= 3530)][['P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[['C_COMMENT', 'MKTSEGMENT']].merge(lineitem[(lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['SHIPMODE'] != 'RAIL')][['L_PARTKEY', 'LINESTATUS', 'RECEIPTDATE']], left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

customer.merge(orders[(orders['TOTALPRICE'] != 168361.97152814013) & (orders['O_COMMENT'] == 'n')][['O_ORDERKEY', 'CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

region[(region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_NAME'] != 'A') | (nation['N_REGIONKEY'] != 3)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] > 1)].merge(region[(region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_NATIONKEY'] >= 23) | (supplier['S_NATIONKEY'] < 22)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(region[['R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != 'T')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

part[(part['PT_COMMENT'].str.startswith('b')) & (part['MFGR'].isin(['Manufacturer#2'])) | (part['TYPE'] == 'E') | (part['PT_COMMENT'].str.startswith('a'))].merge(partsupp[['PS_PARTKEY']].merge(part[['MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[['L_SUPPKEY', 'SHIPDATE', 'L_PARTKEY']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders.groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'SM') | (part['CONTAINER'] == 'WRAP') | (part['PT_COMMENT'] != 'w') | (part['CONTAINER'] != 'SM')][['CONTAINER', 'TYPE']].merge(orders, left_on='P_PARTKEY', right_on='O_ORDERKEY').merge(nation[(nation['N_NAME'] != 'E')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='P_PARTKEY', right_on='N_NATIONKEY').merge(nation, left_on='P_PARTKEY', right_on='N_NATIONKEY').groupby(by=['TYPE']).agg('max', numeric_only=True)

region.merge(nation[(nation['N_COMMENT'] != 'r')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 7433)][['AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(lineitem[(lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['L_ORDERKEY'] != 102)][['COMMITDATE', 'SHIPDATE', 'TAX']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(supplier[(supplier['S_ACCTBAL'] < 7907.333178123431)][['S_NAME', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem

partsupp[(partsupp['P_COMMENT'] == 's') | (partsupp['PS_SUPPKEY'] < 2197) | (partsupp['P_COMMENT'] != '.')].merge(lineitem[(lineitem['COMMITDATE'] >= '1992-05-15')][['L_SUPPKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[(supplier['S_ADDRESS'] != '2') & (supplier['S_NATIONKEY'] <= 9)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')].merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_ADDRESS'] == 'W')][['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_PARTKEY'] > 44)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders.merge(customer[['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']].merge(orders[(orders['ORDERPRIORITY'] == '5-LOW')].merge(customer[['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['ORDERPRIORITY']].merge(part, left_on='O_ORDERKEY', right_on='P_PARTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] == 7) & (nation['N_COMMENT'].str.startswith('n'))].merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NAME'] != 'C')].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_ACCTBAL'] == 4604.06096908774) & (customer['C_CUSTKEY'] > 79)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders[['ORDERDATE', 'O_ORDERKEY']].merge(lineitem[(lineitem['COMMITDATE'] <= '1992-05-15')].merge(partsupp[(partsupp['AVAILQTY'] != 6154) & (partsupp['SUPPLYCOST'] >= 810.41628999729)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_ORDERKEY'] <= 507) & (orders['O_ORDERKEY'] > 533)][['ORDERDATE']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='O_ORDERKEY', right_on='N_NATIONKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] != 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_SUPPKEY'] < 23) & (supplier['S_COMMENT'].str.startswith('h'))], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_REGIONKEY'] == 3)].merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_NATIONKEY'] > 3)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] == 'q') | (supplier['S_SUPPKEY'] == 146) | (supplier['S_SUPPKEY'] < 140)].merge(partsupp[(partsupp['AVAILQTY'] != 314)].merge(lineitem[(lineitem['RETURNFLAG'] != 'R')], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['CONTAINER'] != 'LG') | (part['P_PARTKEY'] != 61)].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] < 11)][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME')][['R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#11')][['CONTAINER', 'P_NAME', 'SIZE', 'PT_COMMENT', 'BRAND']].merge(lineitem[['L_ORDERKEY', 'LINESTATUS', 'SHIPDATE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(nation.merge(supplier[['S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 15) & (nation['N_COMMENT'].str.startswith('n'))][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_COMMENT'] == 'r')][['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='P_PARTKEY', right_on='N_NATIONKEY')

region[(region['R_REGIONKEY'] <= 1)].merge(nation[(nation['N_NATIONKEY'] >= 15) & (nation['N_COMMENT'] != 'p')].merge(region[(region['R_REGIONKEY'] == 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

customer[(customer['C_CUSTKEY'] < 58)].merge(orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '2-HIGH', '5-LOW', '3-MEDIUM'])) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED']))].merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_REGIONKEY']]

orders.merge(lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'RAIL', 'TRUCK', 'SHIP', 'REG AIR', 'FOB']))][['DISCOUNT', 'SHIPDATE']].merge(nation[(nation['N_NAME'] == 'K')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(nation[['N_NAME', 'N_COMMENT']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_ADDRESS'] == 'B') | (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_COMMENT', 'C_NAME', 'C_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_CUSTKEY', right_on='N_NATIONKEY').merge(part[(part['P_PARTKEY'] == 127) | (part['CONTAINER'] == 'WRAP')][['MFGR', 'SIZE', 'P_PARTKEY', 'BRAND']], left_on='C_CUSTKEY', right_on='P_PARTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(orders[(orders['TOTALPRICE'] <= 55623.68757391608)][['O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'FURNITURE', 'MACHINERY']))][['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_COMMENT', 'O_ORDERKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation.merge(customer[(customer['C_ADDRESS'] != '6')][['C_COMMENT', 'C_NATIONKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 'c') & (nation['N_NAME'] != 'C')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders[['ORDERPRIORITY']].merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 25) & (partsupp['PS_SUPPKEY'] < 3901)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(partsupp[(partsupp['PS_PARTKEY'] != 14) | (partsupp['PS_PARTKEY'] > 26)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(lineitem[(lineitem['L_COMMENT'] != 'lit')][['SHIPINSTRUCT']].merge(nation, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(customer[['C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_PHONE'] == '13-')].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(supplier[(supplier['S_NAME'] != 'S')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'] == 'AFR')], left_on='N_NATIONKEY', right_on='R_REGIONKEY').merge(region.merge(nation[(nation['N_NATIONKEY'] <= 17) | (nation['N_REGIONKEY'] >= 1)][['N_NATIONKEY']].merge(customer[(customer['C_ACCTBAL'] >= 7193.700461505452)][['C_NAME', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_NATIONKEY', right_on='R_REGIONKEY').merge(lineitem[['SHIPDATE']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(region[(region['R_REGIONKEY'] == 0)], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY'), left_on='N_NATIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'A') | (nation['N_COMMENT'] == 'i') | (nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] == 'e')].merge(customer.merge(orders[(orders['O_CUSTKEY'] != 5561)][['CLERK']].merge(lineitem[(lineitem['EXTENDEDPRICE'] >= 71247.97221941751) | (lineitem['LINENUMBER'] == 1)][['SHIPDATE', 'DISCOUNT']], left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_ADDRESS'].str.startswith('E')) & (customer['MKTSEGMENT'] != 'BUILDING')][['C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(customer[(customer['C_CUSTKEY'] >= 3)][['C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_NAME']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 23) | (nation['N_NAME'] != 'I') & (nation['N_COMMENT'] != 'h') & (nation['N_NAME'].str.startswith('C'))].merge(region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_COMMENT'] != ' ') & (customer['C_PHONE'] != '27-')].merge(nation[(nation['N_REGIONKEY'] < 3)][['N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING', 'MACHINERY', 'AUTOMOBILE'])) & (customer['C_PHONE'] != '3') | (customer['C_COMMENT'].str.startswith('y')) & (customer['C_ACCTBAL'] == -796.942633148276)].merge(nation[(nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME', 'MKTSEGMENT']).agg('min', numeric_only=True)

nation.merge(customer[(customer['C_NATIONKEY'] < 6)][['C_COMMENT', 'MKTSEGMENT']].merge(partsupp[(partsupp['P_COMMENT'] == 'b') & (partsupp['SUPPLYCOST'] > 844.1076657170518)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

orders[['TOTALPRICE', 'O_COMMENT', 'O_CUSTKEY']].groupby(by=['TOTALPRICE', 'O_CUSTKEY']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT']]

partsupp[['PS_PARTKEY']].merge(part[['MFGR', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE']].merge(partsupp[['PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(lineitem[['L_COMMENT', 'COMMITDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 6345)][['SUPPLYCOST']]

orders[(orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] == 6385) | (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))][['O_ORDERKEY', 'SHIPPRIORITY']].merge(lineitem[(lineitem['COMMITDATE'] < '1992-05-15')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('are'))][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['QUANTITY', 'SHIPINSTRUCT', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders.merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 9881.778741392298)].groupby(by=['C_NATIONKEY']).agg('mean', numeric_only=True)

orders[['ORDERDATE']].merge(lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(lineitem, left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_PHONE'] != '32-')][['S_PHONE', 'S_NAME']].merge(customer[(customer['C_PHONE'] == '1') & (customer['C_PHONE'] != '18-')], left_on='S_SUPPKEY', right_on='C_CUSTKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer.merge(orders[['CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='O_ORDERKEY', right_on='N_NATIONKEY')

partsupp[(partsupp['AVAILQTY'] <= 2301) & (partsupp['P_COMMENT'].str.startswith('t')) & (partsupp['SUPPLYCOST'] < 540.1261002582244) & (partsupp['PS_SUPPKEY'] > 468)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(lineitem.merge(orders[['O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 6514) | (partsupp['PS_SUPPKEY'] <= 3694)].merge(lineitem.merge(partsupp[['SUPPLYCOST', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] >= 819.4054899374293) | (partsupp['PS_PARTKEY'] < 40)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

region.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(supplier[(supplier['S_COMMENT'] != 'h')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('s'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(supplier, left_on='C_CUSTKEY', right_on='S_SUPPKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_REGIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_NATIONKEY'] < 17)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] == 133) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('17-'))][['S_NATIONKEY', 'S_COMMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(supplier[(supplier['S_PHONE'] == '17-')].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] <= 3)][['N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] == 16) & (nation['N_REGIONKEY'] < 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'y')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']]

part[['PT_COMMENT', 'P_PARTKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] != 602.6802872622044) & (partsupp['PS_PARTKEY'] <= 49)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['MFGR'] != 'Manufacturer#2')][['TYPE', 'PT_COMMENT', 'SIZE']].merge(partsupp[(partsupp['P_COMMENT'] != 'i') & (partsupp['P_COMMENT'] == 'h')], left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

orders

partsupp[(partsupp['PS_SUPPKEY'] < 2307) & (partsupp['PS_PARTKEY'] != 20) | (partsupp['AVAILQTY'] != 3580) | (partsupp['AVAILQTY'] > 9106)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']]

nation.groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation.merge(customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'g')][['R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_NAME'] != 'S')][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'k') & (partsupp['P_COMMENT'] != 'i')][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(nation[(nation['N_NATIONKEY'] <= 8) | (nation['N_REGIONKEY'] > 3)], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(lineitem[(lineitem['SHIPDATE'] != '1998-10-30')][['RETURNFLAG', 'RECEIPTDATE', 'L_COMMENT']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_CUSTKEY'] != 22)].merge(nation.merge(supplier[['S_PHONE', 'S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

nation.merge(customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'u')][['C_ADDRESS', 'C_COMMENT']].merge(supplier.merge(partsupp[['P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='C_CUSTKEY', right_on='S_SUPPKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_CUSTKEY'] > 71)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY')

part.merge(partsupp.merge(lineitem[(lineitem['SHIPMODE'] == 'AIR') | (lineitem['SHIPMODE'] == 'FOB')][['QUANTITY']].merge(customer[(customer['C_CUSTKEY'] != 1)][['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['RETURNFLAG'].isin(['N']))][['L_SUPPKEY', 'SHIPINSTRUCT', 'L_COMMENT', 'TAX']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

orders[['CLERK', 'ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY']].merge(nation[(nation['N_REGIONKEY'] >= 3)].merge(customer[(customer['C_PHONE'] == '18-') | (customer['C_COMMENT'] != 'l')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='O_ORDERKEY', right_on='N_NATIONKEY').groupby(by=['CLERK']).agg('min', numeric_only=True)

part[['SIZE', 'CONTAINER', 'BRAND', 'P_NAME']]

region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] <= 2)][['R_COMMENT']].merge(lineitem, left_on='R_REGIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'])

customer[(customer['C_COMMENT'].str.startswith('p')) & (customer['C_ADDRESS'] == 'o') & (customer['C_PHONE'].str.startswith('2')) | (customer['C_COMMENT'] == ',')][['C_NAME']].merge(lineitem.merge(partsupp[['SUPPLYCOST']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'])

partsupp[(partsupp['AVAILQTY'] <= 2819) | (partsupp['P_COMMENT'].str.startswith('k')) & (partsupp['P_COMMENT'].str.startswith('t')) | (partsupp['P_COMMENT'].str.startswith('p'))][['P_COMMENT', 'SUPPLYCOST']].merge(orders, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 11)][['N_NAME']].merge(supplier[(supplier['S_ACCTBAL'] <= -902.8072531227813)], left_on='N_NATIONKEY', right_on='S_SUPPKEY').merge(partsupp.merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='N_NATIONKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 496) & (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] <= 231350.16111323974) & (orders['TOTALPRICE'] != 14040.937673263943)][['O_COMMENT', 'ORDERDATE']].merge(region.merge(nation[(nation['N_NATIONKEY'] != 10) & (nation['N_NATIONKEY'] <= 5)].merge(supplier[(supplier['S_SUPPKEY'] >= 20)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] <= 2)].merge(customer[['C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='O_ORDERKEY', right_on='R_REGIONKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 588.9566211869543) & (partsupp['P_COMMENT'] == 'p')].merge(lineitem[['QUANTITY', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 5740) & (partsupp['P_COMMENT'].str.startswith(';'))], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['L_SUPPKEY'] <= 6669)][['L_ORDERKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(lineitem.merge(partsupp[['SUPPLYCOST']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='R_REGIONKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 29) & (partsupp['P_COMMENT'] != 'a')].merge(lineitem[['L_COMMENT', 'QUANTITY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['O_COMMENT', 'ORDERDATE']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_ORDERKEY'] <= 446)].merge(customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_ADDRESS'] != 'j')][['C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['SHIPMODE']].merge(part[(part['RETAILPRICE'] < 902.3128413765146) & (part['CONTAINER'].str.startswith('WRAP'))], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').merge(partsupp[['PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERPRIORITY', 'CLERK']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('STA'))][['MFGR', 'P_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] == 'p') & (partsupp['SUPPLYCOST'] <= 474.3147262334246)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part.merge(partsupp[(partsupp['P_COMMENT'] == 'u')][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 102736) & (orders['SHIPPRIORITY'] < 0)].merge(lineitem[(lineitem['L_PARTKEY'] == 95478) & (lineitem['EXTENDEDPRICE'] >= 28698.566001053427)].merge(orders.merge(customer[(customer['C_NAME'].str.startswith('C'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] > 11)].merge(lineitem[(lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) | (lineitem['SHIPDATE'] == '1998-10-30')], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['QUANTITY'] != 26)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['SHIPPRIORITY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'b')][['SUPPLYCOST', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['COMMITDATE']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 893.6384479166253) | (partsupp['SUPPLYCOST'] > 589.0257558371677) | (partsupp['P_COMMENT'] == 'k')].groupby(by=['PS_SUPPKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] >= 18)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(customer[(customer['C_ADDRESS'] == '3') | (customer['C_NATIONKEY'] > 10)], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

orders

partsupp[['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] == '3') & (supplier['S_ADDRESS'] == 'f') & (supplier['S_ACCTBAL'] == 6663.129159625551)][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']]

lineitem[(lineitem['QUANTITY'] < 26) | (lineitem['QUANTITY'] >= 4) | (lineitem['L_ORDERKEY'] > 138) & (lineitem['COMMITDATE'] >= '1992-05-15')][['DISCOUNT', 'L_PARTKEY', 'LINENUMBER', 'COMMITDATE', 'TAX']].groupby(by=['COMMITDATE']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_CUSTKEY'] == 68) & (customer['C_ADDRESS'] == 'c')][['C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_NATIONKEY']].merge(supplier[(supplier['S_SUPPKEY'] < 55)][['S_NAME']].merge(lineitem[(lineitem['L_COMMENT'] != 'lit') | (lineitem['L_COMMENT'] == 's. ')], left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 2033)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']]

supplier[(supplier['S_NATIONKEY'] <= 7) & (supplier['S_ACCTBAL'] < -670.9576688014779)][['S_COMMENT']].merge(customer[(customer['C_ACCTBAL'] > 5028.56393631931)], left_on='S_SUPPKEY', right_on='C_CUSTKEY').groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 1585)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 4) & (partsupp['PS_SUPPKEY'] != 509)].merge(part.merge(partsupp[['AVAILQTY']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='R_REGIONKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['SHIPMODE'] == 'TRUCK')][['EXTENDEDPRICE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('1')) | (customer['C_COMMENT'] == '.')].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['ORDERSTATUS', 'ORDERDATE', 'CLERK', 'SHIPPRIORITY']].merge(part[(part['P_PARTKEY'] < 180)], left_on='O_ORDERKEY', right_on='P_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] >= 678.1226597784137) | (partsupp['PS_PARTKEY'] != 24)], left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['ORDERSTATUS'] != 'O')], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_PHONE']).agg('min', numeric_only=True)

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(lineitem[(lineitem['DISCOUNT'] > 0.058322728033927934) | (lineitem['LINESTATUS'].isin(['F', 'O']))][['L_SUPPKEY', 'SHIPDATE', 'LINENUMBER']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['QUANTITY', 'RECEIPTDATE', 'LINENUMBER', 'L_ORDERKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] != 'g')].merge(nation[(nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_NATIONKEY'] == 17) | (nation['N_REGIONKEY'] >= 2)][['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME', 'N_NATIONKEY']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation[['N_NATIONKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 16)][['N_NATIONKEY', 'N_COMMENT']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] != 7406)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier.merge(partsupp[(partsupp['SUPPLYCOST'] <= 360.60804886610185) | (partsupp['SUPPLYCOST'] != 604.833241755756)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_NATIONKEY'] != 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_NATIONKEY'] != 7)], left_on='N_NATIONKEY', right_on='S_NATIONKEY')

region.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] <= 23) | (nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_NAME']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('3'))].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(customer[(customer['C_PHONE'].str.startswith('2')) & (customer['C_CUSTKEY'] == 41)], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'E')][['R_COMMENT']].merge(part[['P_NAME']], left_on='R_REGIONKEY', right_on='P_PARTKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 0)].merge(nation[(nation['N_REGIONKEY'] == 0)].merge(supplier[(supplier['S_ACCTBAL'] != -453.623897412431)].merge(nation[(nation['N_REGIONKEY'] == 1)][['N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

lineitem[['L_COMMENT']].merge(nation.merge(supplier[(supplier['S_SUPPKEY'] >= 111) & (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'C')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(supplier[['S_NAME']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY')

region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

part[(part['P_PARTKEY'] < 88) | (part['TYPE'].str.startswith('P')) | (part['SIZE'] >= 7)][['RETAILPRICE', 'PT_COMMENT', 'P_NAME', 'TYPE']]

supplier[(supplier['S_ADDRESS'] == 'i') & (supplier['S_NATIONKEY'] > 2) | (supplier['S_NATIONKEY'] > 12) & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NATIONKEY'] == 6)].merge(customer[(customer['C_COMMENT'].str.startswith('r'))].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NAME'] != 'C')].merge(customer[['C_NATIONKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS', 'S_COMMENT']).agg('count')

part.merge(partsupp[(partsupp['P_COMMENT'] != 'f')][['PS_SUPPKEY', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'P_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'x') & (supplier['S_COMMENT'] != '.') & (supplier['S_SUPPKEY'] <= 82) & (supplier['S_ADDRESS'] != '8')][['S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 935.108922080384)][['AVAILQTY', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] == 5090) & (partsupp['P_COMMENT'].str.startswith('.'))].merge(lineitem[(lineitem['L_SUPPKEY'] == 6544) | (lineitem['QUANTITY'] < 35)][['QUANTITY', 'TAX']].merge(part[['PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['SHIPPRIORITY'] != 0)][['SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE']].merge(customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_ORDERKEY', right_on='C_CUSTKEY').merge(supplier[(supplier['S_COMMENT'] != 'c')][['S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] != 5) | (partsupp['PS_SUPPKEY'] > 3278)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='S_SUPPKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_CUSTKEY'] != 26408)].merge(customer[(customer['C_ADDRESS'] == 'm') & (customer['C_CUSTKEY'] != 9)][['C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] != -845.9660271951262)][['MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['ORDERDATE'] == '1998-07-21') & (orders['SHIPPRIORITY'] >= 0)][['O_ORDERKEY', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY']].merge(lineitem[['L_COMMENT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['SHIPMODE', 'RECEIPTDATE', 'L_ORDERKEY', 'TAX']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_ADDRESS'] == 'J')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

customer[(customer['C_CUSTKEY'] <= 1) | (customer['C_ADDRESS'] == 'P') & (customer['C_PHONE'].str.startswith('2'))][['C_ADDRESS', 'C_CUSTKEY']].groupby(by=['C_ADDRESS']).agg('sum', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'].str.startswith('m')) | (part['BRAND'] == 'Brand#41') | (part['SIZE'] > 27)].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] != 4400)].merge(lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 5859)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[['SHIPINSTRUCT']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] < 78)][['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[['ORDERDATE']].merge(lineitem[['LINENUMBER', 'RETURNFLAG', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(nation[(nation['N_NATIONKEY'] <= 11)][['N_REGIONKEY', 'N_NAME']], left_on='O_ORDERKEY', right_on='N_NATIONKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY']).agg('sum', numeric_only=True)

supplier.merge(partsupp[(partsupp['PS_SUPPKEY'] == 4156) & (partsupp['P_COMMENT'] != 's')][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] == 803.2652104870962)].merge(part[(part['TYPE'] != 'L')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] > 0.04628650933687267) | (lineitem['L_ORDERKEY'] < 145) & (lineitem['L_SUPPKEY'] != 8160)][['LINENUMBER', 'DISCOUNT', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] <= 1211) | (partsupp['PS_SUPPKEY'] < 2188)].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[['L_SUPPKEY', 'SHIPDATE', 'LINESTATUS', 'SHIPINSTRUCT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders.groupby(by=['O_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] != 218263.37093280302) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] >= 102632)][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['SHIPMODE'] == 'REG AIR')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['QUANTITY'] < 45) & (lineitem['L_SUPPKEY'] > 1746)][['COMMITDATE', 'QUANTITY', 'L_COMMENT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['CLERK', 'O_ORDERKEY']).agg('min', numeric_only=True)

supplier.merge(partsupp[(partsupp['AVAILQTY'] != 8832) | (partsupp['SUPPLYCOST'] > 586.6726156653289)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(lineitem[(lineitem['SHIPMODE'] != 'TRUCK')][['LINESTATUS', 'EXTENDEDPRICE', 'RETURNFLAG', 'TAX']].merge(region, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'].str.startswith('a'))].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

lineitem[['L_COMMENT', 'LINENUMBER', 'COMMITDATE', 'L_PARTKEY', 'L_ORDERKEY']].merge(partsupp.merge(supplier[(supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['QUANTITY'] > 26)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('q')) | (partsupp['AVAILQTY'] >= 8761)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['O_CUSTKEY'] != 126222) & (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))][['O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'] != 'i') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_PARTKEY']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] == 'MED') & (part['P_PARTKEY'] >= 46) | (part['BRAND'] != 'Brand#53')].groupby(by=['CONTAINER']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] < 149653.97595700296) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'].str.startswith('C'))][['ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE']].groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 17) | (nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'] != 'l')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] <= 13)].merge(partsupp.merge(part[(part['P_PARTKEY'] <= 151)][['PT_COMMENT', 'P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

customer[['C_ADDRESS']].merge(region[['R_COMMENT']], left_on='C_CUSTKEY', right_on='R_REGIONKEY')

region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] == 3)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_REGIONKEY'] > 3)].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] > 24)][['RETURNFLAG', 'LINENUMBER', 'L_SUPPKEY', 'SHIPMODE']].merge(partsupp[(partsupp['AVAILQTY'] > 9576) & (partsupp['SUPPLYCOST'] != 669.6682216425536)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] < 9300.117400861785) & (supplier['S_NAME'] == 'S')]

lineitem[(lineitem['L_COMMENT'] == ',') | (lineitem['L_PARTKEY'] != 98123)].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['TOTALPRICE'] != 48873.93263103707) & (orders['O_CUSTKEY'] < 134784) | (orders['ORDERPRIORITY'] != '3-MEDIUM')][['ORDERPRIORITY', 'CLERK', 'ORDERSTATUS', 'TOTALPRICE']].merge(region.merge(nation[(nation['N_NAME'] == 'J')].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='O_ORDERKEY', right_on='R_REGIONKEY').merge(nation.merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='O_ORDERKEY', right_on='N_NATIONKEY').groupby(by=['ORDERSTATUS', 'ORDERPRIORITY']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 8344.695641554288)][['C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']].merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['TOTALPRICE']].merge(region[(region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='O_ORDERKEY', right_on='R_REGIONKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

orders[['ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith('l'))].merge(orders[['ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] != 34) & (customer['MKTSEGMENT'] == 'MACHINERY')][['C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(lineitem[['L_SUPPKEY', 'QUANTITY', 'RECEIPTDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_PHONE'].str.startswith('1'))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['L_ORDERKEY'] < 61) | (lineitem['EXTENDEDPRICE'] != 61934.937074972404)][['SHIPMODE', 'L_PARTKEY', 'EXTENDEDPRICE', 'TAX', 'QUANTITY']].groupby(by=['QUANTITY']).agg('max', numeric_only=True)

region[['R_REGIONKEY']]

supplier[(supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_NATIONKEY'] < 16) | (supplier['S_COMMENT'].str.startswith(' sl'))][['S_ADDRESS', 'S_NATIONKEY']]

customer[(customer['C_ACCTBAL'] > 3201.773289359561) & (customer['C_NAME'].str.startswith('C'))].merge(orders[(orders['O_COMMENT'].str.startswith('k')) & (orders['ORDERPRIORITY'] == '1-URGENT')].merge(customer[(customer['C_NATIONKEY'] > 15) | (customer['C_NATIONKEY'] >= 9)][['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

partsupp[(partsupp['P_COMMENT'] != 'j') | (partsupp['PS_SUPPKEY'] > 5696)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['BRAND'].isin(['Brand#11', 'Brand#25', 'Brand#51', 'Brand#21', 'Brand#31', 'Brand#45', 'Brand#52'])) | (part['PT_COMMENT'] != 'the')][['CONTAINER', 'SIZE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST']].merge(region[['R_COMMENT']].merge(part, left_on='R_REGIONKEY', right_on='P_PARTKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='R_REGIONKEY').groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']].merge(partsupp[(partsupp['AVAILQTY'] == 2287)][['P_COMMENT', 'PS_PARTKEY']].merge(part[['MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[(part['P_NAME'] == 'o') | (part['MFGR'] == 'Manufacturer#3')][['P_PARTKEY', 'PT_COMMENT']].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['AVAILQTY'] > 7792)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] < 914.8226170214615)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

lineitem

orders.merge(lineitem[(lineitem['QUANTITY'] <= 10)].merge(partsupp[['SUPPLYCOST', 'AVAILQTY']].merge(nation, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['AVAILQTY'] != 8184) & (partsupp['SUPPLYCOST'] < 912.9345626062561)][['PS_SUPPKEY', 'AVAILQTY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['RETURNFLAG', 'SHIPMODE']].merge(partsupp[(partsupp['AVAILQTY'] < 468) | (partsupp['PS_SUPPKEY'] < 4266)][['AVAILQTY']].merge(lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['LINENUMBER'] > 3)][['L_COMMENT', 'LINENUMBER', 'TAX', 'L_ORDERKEY']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_COMMENT', 'ORDERPRIORITY']).agg('count')

region.merge(nation[['N_NAME']].merge(lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'FOB', 'SHIP', 'TRUCK', 'REG AIR', 'AIR', 'RAIL'])) | (lineitem['L_ORDERKEY'] != 160)][['LINENUMBER', 'L_ORDERKEY']].merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='N_NATIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_NATIONKEY'] >= 7)][['N_COMMENT', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] <= 0)].merge(customer[(customer['C_ACCTBAL'] <= 4246.9429020755115)].merge(orders[(orders['SHIPPRIORITY'] >= 0)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

lineitem[(lineitem['TAX'] == 0.06415068431353067) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['TAX'] >= 0.014634817786205678) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD')][['RECEIPTDATE', 'DISCOUNT', 'SHIPDATE']].merge(orders[(orders['ORDERPRIORITY'] != '3-MEDIUM')][['SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY').merge(orders[(orders['SHIPPRIORITY'] == 0) | (orders['CLERK'].str.startswith('C'))], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_NAME']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

orders[(orders['TOTALPRICE'] <= 7427.855676357994)].merge(customer[(customer['C_CUSTKEY'] > 3)][['C_ADDRESS']].merge(region[(region['R_REGIONKEY'] != 0)].merge(nation[(nation['N_NATIONKEY'] <= 8)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='C_CUSTKEY', right_on='R_REGIONKEY').merge(region[['R_NAME', 'R_REGIONKEY']], left_on='C_CUSTKEY', right_on='R_REGIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['RETURNFLAG'] == 'A')][['RECEIPTDATE', 'DISCOUNT', 'SHIPDATE']].merge(region[['R_COMMENT']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY').merge(region[(region['R_REGIONKEY'] < 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_COMMENT'] == ' ')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

region[['R_COMMENT']].merge(lineitem[(lineitem['LINENUMBER'] != 4)][['COMMITDATE', 'SHIPMODE']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 3)][['SUPPLYCOST', 'PS_PARTKEY']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_NAME'] != 'J')].merge(customer[(customer['C_ADDRESS'] != 'U')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='R_REGIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

lineitem.groupby(by=['SHIPMODE', 'EXTENDEDPRICE']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != '!')].merge(partsupp[(partsupp['PS_SUPPKEY'] == 2773)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] < 21)].merge(nation[(nation['N_NATIONKEY'] <= 23) | (nation['N_NAME'] != 'K')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith(',')) | (supplier['S_PHONE'].str.startswith('32-'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['L_PARTKEY'] < 188169)][['COMMITDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'BRAND']].merge(lineitem[['RETURNFLAG', 'QUANTITY', 'RECEIPTDATE', 'SHIPMODE']].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(orders[['O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY').merge(part[(part['BRAND'] == 'Brand#34')][['MFGR']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(nation.merge(supplier[(supplier['S_SUPPKEY'] <= 76) & (supplier['S_SUPPKEY'] == 166)][['S_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_NAME'] == 'M')], left_on='S_SUPPKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] != 1430.4192901945373)].merge(partsupp[(partsupp['P_COMMENT'] == 'a') | (partsupp['P_COMMENT'] != 's')][['AVAILQTY', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='P_PARTKEY', right_on='N_NATIONKEY').merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[['CLERK', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(lineitem[(lineitem['SHIPMODE'] != 'MAIL')][['LINENUMBER', 'SHIPINSTRUCT', 'L_SUPPKEY', 'COMMITDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 10) & (nation['N_COMMENT'].str.startswith('c')) & (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[['MKTSEGMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] < 274743.7562521932)]

customer[(customer['C_CUSTKEY'] != 23) | (customer['C_CUSTKEY'] != 35)][['C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_CUSTKEY']].merge(orders[(orders['ORDERSTATUS'] != 'P')][['CLERK', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_COMMENT']].merge(part[(part['SIZE'] > 32) | (part['SIZE'] == 27)][['BRAND', 'CONTAINER', 'P_NAME']], left_on='C_CUSTKEY', right_on='P_PARTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') | (customer['MKTSEGMENT'] == 'BUILDING')][['MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['TOTALPRICE', 'CLERK', 'O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NAME', 'C_ADDRESS']).agg('max', numeric_only=True)

region.merge(nation[(nation['N_COMMENT'] == 'i')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'C') | (nation['N_COMMENT'].str.startswith('u'))].merge(region[['R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_NAME'] != 'C')].merge(orders[(orders['O_ORDERKEY'] >= 249) & (orders['O_CUSTKEY'] > 122989)][['CLERK', 'O_ORDERKEY', 'ORDERDATE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_NAME'] == 'S')].merge(nation[['N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] >= 11) & (nation['N_NAME'].str.startswith('G'))].merge(customer[(customer['C_ADDRESS'].str.startswith('0')) & (customer['C_PHONE'] == '18-')][['C_NAME']].merge(part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2'])) | (part['PT_COMMENT'].str.startswith('ly '))][['CONTAINER', 'TYPE', 'RETAILPRICE']], left_on='C_CUSTKEY', right_on='P_PARTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_NAME'] != 'A')][['R_NAME']].merge(supplier[(supplier['S_SUPPKEY'] != 13)], left_on='R_REGIONKEY', right_on='S_SUPPKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL']).agg('max', numeric_only=True)

orders[['O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] >= 767.4168508928256) | (customer['C_ADDRESS'] != 'j')][['C_ADDRESS', 'C_PHONE']].merge(part[(part['TYPE'] == 'STA')].merge(partsupp[(partsupp['PS_PARTKEY'] > 10) | (partsupp['PS_SUPPKEY'] != 5670)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='C_CUSTKEY', right_on='P_PARTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_CUSTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] < 105) & (lineitem['COMMITDATE'] < '1992-05-15')][['SHIPDATE', 'L_SUPPKEY', 'COMMITDATE']].groupby(by=['L_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 837.563102282519) & (partsupp['P_COMMENT'] != 'the') & (partsupp['PS_SUPPKEY'] < 4999) & (partsupp['P_COMMENT'].str.startswith('h'))][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] == 'W')][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL']].merge(nation, left_on='S_SUPPKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['TAX'] == 0.06179410844819968) | (lineitem['TAX'] < 0.013403072704622643)][['RECEIPTDATE', 'L_COMMENT']].merge(orders.merge(customer[(customer['C_NATIONKEY'] >= 17)][['C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) & (orders['CLERK'].str.startswith('C'))][['ORDERDATE', 'O_ORDERKEY']].groupby(by=['ORDERDATE']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['C_NAME'] == 'C')][['C_NAME', 'C_ACCTBAL']]

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 4122) | (partsupp['PS_PARTKEY'] <= 23)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETURNFLAG', 'SHIPINSTRUCT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 15) | (nation['N_NATIONKEY'] < 23) & (nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] == 'V')].merge(supplier[(supplier['S_ADDRESS'] == 'W')].merge(partsupp[(partsupp['PS_PARTKEY'] > 8) | (partsupp['AVAILQTY'] > 7521)][['AVAILQTY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S'))], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_NATIONKEY'] <= 20) & (nation['N_REGIONKEY'] >= 3)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['LINENUMBER'] != 3) & (lineitem['EXTENDEDPRICE'] == 44193.90917838956)].merge(partsupp[(partsupp['PS_PARTKEY'] == 32)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('l'))]

nation[(nation['N_REGIONKEY'] == 1)].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 9962.144881132252)][['C_NAME', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 3191) | (partsupp['AVAILQTY'] >= 5564)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_REGIONKEY'] != 3)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

region[['R_REGIONKEY']].merge(nation.merge(customer[(customer['C_PHONE'].str.startswith('18-')) & (customer['C_PHONE'] != '3')].merge(orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_CUSTKEY'] > 70) | (customer['C_PHONE'].str.startswith('1'))][['C_ADDRESS', 'C_NAME']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(customer[['C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'P') & (nation['N_COMMENT'].str.startswith('i'))][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region.merge(nation[(nation['N_NAME'] != 'B') & (nation['N_NATIONKEY'] != 12)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'].str.startswith('V'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation.merge(supplier[['S_ACCTBAL', 'S_NAME']].merge(partsupp, left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] == 'V')][['N_NAME', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

customer[(customer['C_PHONE'].str.startswith('2')) & (customer['C_PHONE'] != '25-') & (customer['C_CUSTKEY'] == 43)][['C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == ' ')].merge(customer[(customer['C_CUSTKEY'] <= 65) | (customer['C_PHONE'] == '13-')][['C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(customer[['C_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_CUSTKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'I') | (customer['C_COMMENT'].str.startswith('o'))].merge(orders[(orders['O_ORDERKEY'] > 435)].merge(customer[['C_NAME', 'C_CUSTKEY', 'C_ADDRESS']].merge(orders[['ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_COMMENT'] == 'a')][['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_ORDERKEY'] < 461)].merge(lineitem[['L_ORDERKEY']].merge(orders[(orders['O_ORDERKEY'] > 240)][['O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['L_PARTKEY'] > 169045)][['DISCOUNT', 'LINESTATUS']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['SHIPMODE'] != 'AIR')].merge(orders[(orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_COMMENT'].str.startswith('s')) & (customer['C_NAME'].str.startswith('C'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['RECEIPTDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['TOTALPRICE'] > 59191.29266641561)][['ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_COMMENT'] != 'w')][['C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] == 351.52759829276664) & (partsupp['SUPPLYCOST'] >= 104.79910782581815)].merge(supplier[(supplier['S_SUPPKEY'] == 64)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TAX']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('E'))].merge(region[['R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[['R_NAME', 'R_REGIONKEY']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] <= 494)][['O_CUSTKEY']].merge(customer[['C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'M')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[['C_ACCTBAL', 'C_COMMENT']].merge(partsupp[(partsupp['P_COMMENT'] != 'o') | (partsupp['P_COMMENT'] == 'the')].merge(lineitem[['QUANTITY', 'SHIPINSTRUCT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']].merge(orders[['TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['SHIPPRIORITY'] == 0)][['ORDERDATE', 'CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_CUSTKEY']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('the'))].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] == 911.0776430854924)][['S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('y')) & (supplier['S_ACCTBAL'] == 1363.462632424291)][['S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[['TYPE', 'SIZE', 'BRAND', 'P_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['P_COMMENT'] != 'j')].merge(lineitem[(lineitem['DISCOUNT'] < 0.08763170777620749)][['RETURNFLAG']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'P')][['SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_SUPPKEY'] == 136)].merge(partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[['RETAILPRICE', 'BRAND', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('count')

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['BRAND'].isin(['Brand#23', 'Brand#54', 'Brand#55']))][['PT_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_COMMENT'] != 'h')][['N_NATIONKEY', 'N_COMMENT']], left_on='P_PARTKEY', right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['P_COMMENT'] != ';')][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 6028)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 195) & (supplier['S_ADDRESS'] != ',')][['S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT']].merge(region[(region['R_COMMENT'] == 'l')].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['TAX'] < 0.00791788252202271)][['DISCOUNT', 'L_SUPPKEY', 'SHIPMODE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[['S_SUPPKEY', 'S_ADDRESS']].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_PARTKEY', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 2550)]

nation[(nation['N_NATIONKEY'] >= 3)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

lineitem[['L_PARTKEY', 'DISCOUNT', 'L_COMMENT', 'LINESTATUS']]

supplier[['S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] != 3) & (nation['N_COMMENT'] != 'n')].merge(region[(region['R_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_NAME'] == 'K')][['N_REGIONKEY', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_ADDRESS'].str.startswith('h')) & (customer['C_NAME'].str.startswith('C'))], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'S_NAME']).agg('count')

part[['PT_COMMENT', 'MFGR']].merge(supplier[(supplier['S_SUPPKEY'] <= 28)], left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(customer.merge(nation[['N_NAME']].merge(customer[(customer['C_PHONE'] == '18-')][['C_NAME', 'MKTSEGMENT', 'C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_CUSTKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY').merge(region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='P_PARTKEY', right_on='R_REGIONKEY').groupby(by=['MFGR', 'PT_COMMENT']).agg('count')

orders[['O_ORDERKEY']].merge(lineitem[['QUANTITY']].merge(region, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] <= 20) | (lineitem['L_COMMENT'] == 'q') | (lineitem['L_PARTKEY'] == 77487)][['RETURNFLAG', 'LINENUMBER', 'EXTENDEDPRICE']].groupby(by=['LINENUMBER']).agg('min', numeric_only=True)

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] == '17-') | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] != 1158.7409134377524)].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'] == 'c')][['N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'S_NAME']).agg('min', numeric_only=True)

lineitem[['RETURNFLAG', 'L_ORDERKEY', 'QUANTITY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['RETURNFLAG']).agg('count')

lineitem[['L_PARTKEY', 'EXTENDEDPRICE', 'LINENUMBER', 'L_COMMENT']].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['TYPE'] != 'SMA')].merge(partsupp[(partsupp['SUPPLYCOST'] == 759.6933321238349) | (partsupp['SUPPLYCOST'] != 390.9444639286018)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['LINENUMBER'] != 6) | (lineitem['L_PARTKEY'] > 23701)][['LINESTATUS', 'SHIPDATE']].merge(orders, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(lineitem[(lineitem['SHIPMODE'] != 'SHIP') | (lineitem['DISCOUNT'] <= 0.046982598271738854)][['TAX']].merge(part, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['RETAILPRICE'] >= 1031.8684558946804)][['SIZE', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['EXTENDEDPRICE', 'LINENUMBER']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY']].merge(supplier[(supplier['S_PHONE'] == '26-') & (supplier['S_SUPPKEY'] == 164)].merge(partsupp[(partsupp['SUPPLYCOST'] != 29.518455444780876) | (partsupp['P_COMMENT'].str.startswith('bli'))], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_PARTKEY'] == 29)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='S_SUPPKEY').merge(nation.merge(customer[(customer['C_CUSTKEY'] > 60) | (customer['C_COMMENT'] == 'd')][['C_COMMENT', 'C_CUSTKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_COMMENT'].str.startswith('p'))][['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY').merge(orders[(orders['O_CUSTKEY'] < 23181) & (orders['SHIPPRIORITY'] < 0)][['O_COMMENT']].merge(part, left_on='O_ORDERKEY', right_on='P_PARTKEY').merge(part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='P_PARTKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY').groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('A')) | (region['R_NAME'] != 'E') | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_NAME']].merge(nation.merge(region[['R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

part.merge(partsupp.merge(part.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['EXTENDEDPRICE'] != 47188.12126257996)][['L_ORDERKEY', 'L_PARTKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

region.merge(nation.merge(supplier[['S_NATIONKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] != 7)], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

lineitem[['QUANTITY', 'SHIPDATE', 'RETURNFLAG']].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] > 22)].merge(supplier[(supplier['S_COMMENT'] != '.') & (supplier['S_PHONE'].str.startswith('32-'))], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] == 'V')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY').merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_ADDRESS'] == 'E') & (supplier['S_NAME'].str.startswith('S'))], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(part[(part['P_PARTKEY'] < 169) & (part['CONTAINER'].str.startswith('JUMBO'))][['PT_COMMENT', 'P_PARTKEY', 'MFGR']].merge(partsupp[(partsupp['AVAILQTY'] != 5305) & (partsupp['SUPPLYCOST'] != 665.1092793514805)][['SUPPLYCOST', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').groupby(by=['QUANTITY', 'SHIPDATE']).agg('sum', numeric_only=True)

part.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(lineitem[(lineitem['COMMITDATE'] == '1992-05-15')].merge(orders[(orders['O_ORDERKEY'] < 466) | (orders['O_ORDERKEY'] < 133)], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[['S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'CONTAINER']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'b') & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] >= 73) & (supplier['S_PHONE'].str.startswith('32-'))]

region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] != 1) | (region['R_COMMENT'].str.startswith('u'))].merge(nation.merge(supplier[(supplier['S_ADDRESS'] != 'w')][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NAME']].merge(partsupp[(partsupp['P_COMMENT'] == 'c') | (partsupp['PS_PARTKEY'] <= 10)][['P_COMMENT']], left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_NATIONKEY'] == 15)][['S_ADDRESS', 'S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 5) | (partsupp['AVAILQTY'] < 6225) | (partsupp['P_COMMENT'].str.startswith('ly '))][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['TYPE'] == 'L')][['MFGR', 'PT_COMMENT']].merge(orders[(orders['TOTALPRICE'] != 41457.60027775518) & (orders['ORDERDATE'] == '1998-07-21')].merge(lineitem[(lineitem['SHIPMODE'] == 'RAIL')][['LINENUMBER', 'SHIPDATE', 'RECEIPTDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='P_PARTKEY', right_on='O_ORDERKEY').merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE']].merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g')][['R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='C_CUSTKEY', right_on='R_REGIONKEY').merge(part[['PT_COMMENT', 'SIZE']].merge(lineitem[['RETURNFLAG', 'L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] > 2318)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(region[(region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='P_PARTKEY', right_on='R_REGIONKEY'), left_on='C_CUSTKEY', right_on='P_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] <= 780.2787862510874) & (partsupp['SUPPLYCOST'] > 515.4556930833402)].merge(lineitem[['RECEIPTDATE', 'QUANTITY', 'SHIPINSTRUCT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RECEIPTDATE']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['P_NAME'] == 'r')].merge(partsupp[['AVAILQTY']].merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_NATIONKEY'] <= 1)], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[['SIZE', 'PT_COMMENT', 'RETAILPRICE']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 42)], left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(orders, left_on='P_PARTKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_PARTKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 7391.611885111347) & (supplier['S_COMMENT'] == 'i')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['P_COMMENT'] == 'd') | (partsupp['PS_PARTKEY'] > 40)].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part.merge(partsupp[(partsupp['SUPPLYCOST'] > 677.1257285979095)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] <= 160209.2317288096)][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERDATE', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1998-07-21')].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['L_COMMENT'] != ' re')][['LINENUMBER', 'L_ORDERKEY', 'L_SUPPKEY', 'QUANTITY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['L_COMMENT'].str.startswith('f'))], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

orders[(orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'] == 'P') & (orders['O_ORDERKEY'] < 275)][['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE']]

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'SHIPPRIORITY']].merge(nation.merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='O_ORDERKEY', right_on='N_NATIONKEY').merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='O_ORDERKEY', right_on='R_REGIONKEY')

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] != 142529)].groupby(by=['ORDERDATE', 'ORDERPRIORITY']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'C_PHONE']].groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 65939.0199130653)][['LINESTATUS', 'DISCOUNT']].merge(customer[(customer['C_ACCTBAL'] >= 4098.88612870949)][['C_ADDRESS', 'C_ACCTBAL']].merge(lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['SHIPINSTRUCT'] != 'NONE')], left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(nation[(nation['N_NATIONKEY'] != 1)], left_on='C_CUSTKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY').merge(orders[(orders['O_CUSTKEY'] > 133735)][['O_ORDERKEY', 'ORDERSTATUS']].merge(lineitem[['L_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] < 9465)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['EXTENDEDPRICE', 'SHIPDATE', 'SHIPINSTRUCT']].merge(customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY').merge(partsupp[(partsupp['P_COMMENT'] == ';') | (partsupp['SUPPLYCOST'] > 675.8665782521249)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(lineitem.merge(orders[['SHIPPRIORITY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'k')][['PS_SUPPKEY', 'P_COMMENT']].merge(lineitem[['L_PARTKEY', 'TAX', 'L_COMMENT', 'LINENUMBER']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY']].merge(part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4'])) & (part['BRAND'] != 'Brand#45')].merge(partsupp[(partsupp['P_COMMENT'] != 'n')][['P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETURNFLAG', 'EXTENDEDPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 928.0628801538869) | (partsupp['PS_PARTKEY'] >= 16) & (partsupp['PS_SUPPKEY'] >= 5496)].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] == 'P') & (nation['N_NAME'] == 'P')][['N_COMMENT', 'N_NATIONKEY']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[['DISCOUNT', 'L_ORDERKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

partsupp.merge(supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(supplier[(supplier['S_ACCTBAL'] != 8703.773202381555) | (supplier['S_NAME'] == 'S')][['S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_SUPPKEY'] < 20)][['S_ACCTBAL', 'S_ADDRESS', 'S_NAME']].groupby(by=['S_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) & (orders['O_CUSTKEY'] == 132546)][['CLERK', 'ORDERPRIORITY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 643.9197863175383)][['AVAILQTY']].merge(orders[(orders['O_COMMENT'].str.startswith('h'))][['ORDERSTATUS', 'O_CUSTKEY']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] != 22)], left_on='O_ORDERKEY', right_on='N_NATIONKEY').merge(region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='O_ORDERKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] >= 3)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['AVAILQTY'] < 5439)].merge(lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')][['DISCOUNT', 'L_ORDERKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_COMMENT'].str.startswith('e')) | (customer['C_NATIONKEY'] < 18)][['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(customer[['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'c') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] != 17)][['S_NATIONKEY', 'S_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] > 3900) & (partsupp['AVAILQTY'] <= 8917)].merge(lineitem[['L_SUPPKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

nation[(nation['N_NAME'].str.startswith('V'))][['N_NATIONKEY', 'N_NAME']]

supplier[(supplier['S_ACCTBAL'] >= 3466.022901652551) & (supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_NATIONKEY'] <= 21)].merge(nation[(nation['N_COMMENT'].str.startswith('i'))][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(lineitem.merge(orders[(orders['O_CUSTKEY'] != 76036)][['ORDERDATE', 'O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['MFGR'] != 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation.merge(region[(region['R_REGIONKEY'] < 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 14) | (nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] == 'P')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(supplier.merge(partsupp[(partsupp['SUPPLYCOST'] <= 84.33817519667713)][['PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[['S_NATIONKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_ACCTBAL'] > 2431.74468506262)][['C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE']].merge(nation, left_on='C_CUSTKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

orders.merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 2) | (partsupp['AVAILQTY'] > 8532)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem.merge(partsupp.merge(lineitem[['LINESTATUS']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['SHIPPRIORITY'] >= 0) | (orders['SHIPPRIORITY'] != 0)][['TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['COMMITDATE', 'L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] < 2915) & (partsupp['AVAILQTY'] != 9245)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERDATE']).agg('count')

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_NATIONKEY'] != 16) & (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['L_ORDERKEY'] > 136) | (lineitem['LINENUMBER'] > 3) | (lineitem['L_PARTKEY'] < 128302)][['LINESTATUS']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']).groupby(by=['LINESTATUS']).agg('count')

region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] <= 3)].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME']].merge(part.merge(partsupp[(partsupp['PS_SUPPKEY'] > 2441)], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(region[(region['R_NAME'] != 'E')][['R_NAME']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='R_REGIONKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='R_REGIONKEY', right_on='P_PARTKEY').groupby(by=['R_NAME']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 847.8065453222409) & (partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['AVAILQTY'] > 2890) | (partsupp['PS_SUPPKEY'] > 6136)]

partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].groupby(by=['PS_PARTKEY', 'AVAILQTY']).agg('count')

supplier.groupby(by=['S_PHONE', 'S_COMMENT']).agg('count')

lineitem.merge(orders[(orders['SHIPPRIORITY'] < 0)][['O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] == 108312)][['LINENUMBER', 'LINESTATUS', 'RETURNFLAG']].merge(nation[(nation['N_NATIONKEY'] <= 8) & (nation['N_NATIONKEY'] <= 2)].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').groupby(by=['LINENUMBER']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_CUSTKEY'] != 86)][['C_NAME', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']].merge(region[(region['R_REGIONKEY'] != 2)][['R_NAME', 'R_REGIONKEY']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='C_CUSTKEY', right_on='R_REGIONKEY').merge(region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='C_CUSTKEY', right_on='R_REGIONKEY').groupby(by=['C_PHONE']).agg('min', numeric_only=True)

lineitem[['DISCOUNT']].merge(nation[(nation['N_COMMENT'] != 'v')][['N_NAME', 'N_COMMENT']].merge(lineitem[['RECEIPTDATE', 'SHIPINSTRUCT']].merge(customer[(customer['C_ACCTBAL'] >= 732.4410876108807) & (customer['C_CUSTKEY'] != 51)][['MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_PHONE']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='N_NATIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').groupby(by=['DISCOUNT']).agg('count')

partsupp.merge(lineitem[['COMMITDATE', 'SHIPDATE']].merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY').merge(orders.merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['DISCOUNT'] > 0.09168610372547445)].merge(partsupp[(partsupp['AVAILQTY'] < 438)][['PS_SUPPKEY']].merge(supplier[['S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

part[(part['RETAILPRICE'] < 1098.5950487927707) & (part['SIZE'] != 10) | (part['BRAND'].isin(['Brand#53', 'Brand#41', 'Brand#34', 'Brand#54', 'Brand#51', 'Brand#44', 'Brand#43', 'Brand#23', 'Brand#14', 'Brand#21', 'Brand#45', 'Brand#15', 'Brand#31', 'Brand#42', 'Brand#55', 'Brand#13', 'Brand#52', 'Brand#33', 'Brand#32', 'Brand#25', 'Brand#35']))].merge(partsupp[(partsupp['SUPPLYCOST'] > 514.5356934370172)][['PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['MFGR', 'PT_COMMENT']].merge(customer[['C_PHONE']], left_on='P_PARTKEY', right_on='C_CUSTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[(part['BRAND'] == 'Brand#35') | (part['P_NAME'] != 'blu')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 2338) | (partsupp['PS_PARTKEY'] != 23) | (partsupp['AVAILQTY'] == 1607)].groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('count')

lineitem[(lineitem['SHIPMODE'] == 'AIR') | (lineitem['L_SUPPKEY'] != 9771) | (lineitem['SHIPMODE'] != 'SHIP')][['LINENUMBER', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[(orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] == '5-LOW')][['SHIPPRIORITY', 'ORDERDATE', 'TOTALPRICE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='O_ORDERKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['PS_PARTKEY'] == 18)][['PS_SUPPKEY', 'SUPPLYCOST']], left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_ORDERKEY']).agg('count')

orders[(orders['CLERK'].str.startswith('C')) | (orders['CLERK'].str.startswith('C'))][['TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'ORDERDATE']].merge(lineitem[(lineitem['EXTENDEDPRICE'] < 19234.770499987986)][['EXTENDEDPRICE', 'QUANTITY', 'LINENUMBER']].merge(region[(region['R_NAME'] != 'AFR')].merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['L_SUPPKEY', 'LINESTATUS']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

region[(region['R_COMMENT'].str.startswith('u'))][['R_NAME']]

customer[['C_NATIONKEY', 'C_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'i')].merge(customer[(customer['C_ADDRESS'] != 'l')][['C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_COMMENT'] == 'v')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NATIONKEY'] == 17)].merge(region[(region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] != 0)][['R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['TYPE'].str.startswith('SMA'))].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.groupby(by=['COMMITDATE']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] < 21) & (nation['N_COMMENT'] == 'n')][['N_NAME']].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] < 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NATIONKEY'] < 18)].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] > 20)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_NATIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME']).agg('count')

lineitem[(lineitem['SHIPMODE'] != 'FOB')].merge(orders[(orders['O_COMMENT'].str.startswith('g'))].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] != 2) | (partsupp['P_COMMENT'] == 'ly ')][['AVAILQTY']].merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_NATIONKEY'] == 23)].merge(supplier[(supplier['S_COMMENT'] != 'v') & (supplier['S_SUPPKEY'] >= 98)][['S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['L_ORDERKEY', 'SHIPINSTRUCT']).agg('max', numeric_only=True)

nation.groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] == 3)][['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[['R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT', 'S_ACCTBAL']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 312) | (partsupp['PS_PARTKEY'] < 29) | (partsupp['AVAILQTY'] >= 5749)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 2253) & (partsupp['PS_SUPPKEY'] >= 6475)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[(supplier['S_SUPPKEY'] != 11) | (supplier['S_ACCTBAL'] >= 762.5698943604134)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[['TAX', 'L_PARTKEY', 'L_SUPPKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('min', numeric_only=True)

part[(part['TYPE'].str.startswith('L')) & (part['SIZE'] != 39) | (part['RETAILPRICE'] > 956.750751431461) | (part['BRAND'].isin(['Brand#42', 'Brand#15', 'Brand#25', 'Brand#34', 'Brand#41', 'Brand#45', 'Brand#54', 'Brand#12']))].merge(partsupp[(partsupp['SUPPLYCOST'] >= 857.6974435081194) & (partsupp['PS_SUPPKEY'] <= 771)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

orders[['TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK']].merge(lineitem[['RETURNFLAG']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith(',')) | (partsupp['PS_PARTKEY'] == 45)][['AVAILQTY']].merge(lineitem[(lineitem['L_SUPPKEY'] != 6799) & (lineitem['RECEIPTDATE'] > '1998-11-06')], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_COMMENT'].str.startswith('a'))].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] < 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['CLERK'] == 'C') | (orders['TOTALPRICE'] > 104218.9206526195)][['ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']].merge(orders[(orders['O_ORDERKEY'] == 427) | (orders['O_ORDERKEY'] > 80)], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_ORDERKEY'] >= 544) & (orders['TOTALPRICE'] != 281704.2648155842)][['TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERPRIORITY', 'CLERK']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 1749) & (partsupp['SUPPLYCOST'] == 775.3145856238096) & (partsupp['P_COMMENT'] == 'j') & (partsupp['P_COMMENT'] != 'the')][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_NAME', 'S_ACCTBAL']].merge(part[(part['P_NAME'].str.startswith('o')) & (part['MFGR'] == 'Manufacturer#1')], left_on='S_SUPPKEY', right_on='P_PARTKEY').merge(part[(part['P_PARTKEY'] <= 121) & (part['P_NAME'].str.startswith('b'))].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='S_SUPPKEY', right_on='P_PARTKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 22) | (nation['N_REGIONKEY'] <= 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_REGIONKEY']).agg('count')

orders[(orders['TOTALPRICE'] != 211492.09573822917) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['O_ORDERKEY'] != 688) | (orders['TOTALPRICE'] == 318558.47792210866)][['ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_COMMENT'] != 'k')][['C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT']].merge(orders[(orders['O_COMMENT'] == 'n')].merge(customer[['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_ORDERKEY', right_on='C_CUSTKEY').merge(part[(part['P_PARTKEY'] <= 6) | (part['P_NAME'].str.startswith('a'))], left_on='O_ORDERKEY', right_on='P_PARTKEY').groupby(by=['ORDERSTATUS', 'TOTALPRICE']).agg('max', numeric_only=True)

part[['P_NAME', 'SIZE']].groupby(by=['SIZE', 'P_NAME']).agg('count')

orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['TOTALPRICE'] >= 330331.59700907156) | (orders['O_COMMENT'] != 'y') & (orders['ORDERDATE'] >= '1992-01-13')][['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE']].merge(supplier[(supplier['S_NAME'] != 'S')], left_on='O_ORDERKEY', right_on='S_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 49) & (partsupp['AVAILQTY'] >= 3014)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['P_COMMENT'].str.startswith('q'))].merge(lineitem[(lineitem['RETURNFLAG'] != 'N')].merge(orders[(orders['TOTALPRICE'] >= 147009.71439041835)][['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['SHIPDATE'] >= '1992-04-27')], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RECEIPTDATE', 'L_COMMENT']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] < 43) | (partsupp['PS_PARTKEY'] <= 30)].merge(lineitem[(lineitem['LINESTATUS'] != 'F') | (lineitem['L_COMMENT'].str.startswith('f'))].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

partsupp.merge(lineitem[['L_PARTKEY']].merge(partsupp[['AVAILQTY']].merge(nation[(nation['N_NAME'].str.startswith('U'))], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] <= 203.9560027717608)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(lineitem[['LINESTATUS', 'EXTENDEDPRICE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

region.groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['ORDERDATE'] != '1998-07-21') & (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'].str.startswith('C'))].groupby(by=['O_COMMENT', 'SHIPPRIORITY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] != 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] >= 4) & (nation['N_COMMENT'].str.startswith('h'))].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == 'p')][['S_NAME', 'S_NATIONKEY', 'S_PHONE']].merge(nation.merge(customer[(customer['C_ADDRESS'].str.startswith('R')) | (customer['C_PHONE'] != '1')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 13)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_COMMENT']].merge(customer[(customer['C_CUSTKEY'] > 92)], left_on='R_REGIONKEY', right_on='C_CUSTKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_ADDRESS'] == 'Q') | (customer['C_NAME'] == 'C')], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_ADDRESS', 'C_CUSTKEY']].merge(orders[(orders['TOTALPRICE'] != 132643.75181436652)][['TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[['S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NAME'].str.startswith('P'))][['N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] == 'r') | (nation['N_NATIONKEY'] > 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY']].merge(orders[['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY']].merge(lineitem.merge(orders[['TOTALPRICE', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['ORDERPRIORITY', 'ORDERDATE']].merge(part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#5'])) | (part['CONTAINER'] != 'WRAP')], left_on='O_ORDERKEY', right_on='P_PARTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

supplier

nation.groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 217.9594707453721) | (partsupp['PS_SUPPKEY'] >= 5563) & (partsupp['PS_SUPPKEY'] <= 5606) & (partsupp['PS_SUPPKEY'] <= 2400)].merge(part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT']].merge(lineitem[(lineitem['SHIPMODE'].isin(['AIR', 'RAIL', 'REG AIR', 'SHIP']))], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

nation[(nation['N_NATIONKEY'] >= 21) & (nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] >= 7)].merge(customer.merge(orders[(orders['O_ORDERKEY'] > 637) & (orders['CLERK'] == 'C')][['ORDERDATE', 'TOTALPRICE']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))], left_on='O_ORDERKEY', right_on='S_SUPPKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'] != 'O')][['O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[['S_NAME', 'S_ADDRESS']].merge(partsupp[(partsupp['AVAILQTY'] > 1365)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_ACCTBAL'] >= 1048.3830283743328) & (supplier['S_ACCTBAL'] >= 8426.040881453704)][['S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] < 20) | (nation['N_NAME'] != 'B')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'u') | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[['N_NATIONKEY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 3275)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_COMMENT'] != 'n')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'h') | (nation['N_NATIONKEY'] != 15)].merge(supplier[(supplier['S_SUPPKEY'] <= 81) | (supplier['S_NATIONKEY'] > 9)][['S_ADDRESS', 'S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[['R_COMMENT']].merge(lineitem[['SHIPMODE', 'RETURNFLAG', 'L_SUPPKEY', 'COMMITDATE']], left_on='R_REGIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

region[['R_REGIONKEY', 'R_COMMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(customer[(customer['C_ACCTBAL'] == 6541.936876997055) | (customer['C_ADDRESS'].str.startswith(','))], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region.merge(nation[['N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

customer[(customer['C_ADDRESS'] == 'd') & (customer['C_NAME'] != 'C')][['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_PHONE']].groupby(by=['C_NAME']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'LINENUMBER', 'RETURNFLAG', 'RECEIPTDATE']].merge(partsupp[['P_COMMENT']].merge(part[(part['TYPE'] != 'M') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3']))][['RETAILPRICE', 'MFGR', 'CONTAINER']].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='P_PARTKEY', right_on='R_REGIONKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(lineitem[['QUANTITY', 'L_ORDERKEY', 'DISCOUNT', 'SHIPDATE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[(supplier['S_ADDRESS'] != 'h')][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NAME']].merge(lineitem[(lineitem['LINENUMBER'] < 4) & (lineitem['TAX'] < 0.050686348621280415)][['DISCOUNT', 'LINESTATUS', 'SHIPMODE', 'L_PARTKEY']], left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(orders[(orders['CLERK'] != 'C') & (orders['CLERK'] == 'C')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['AVAILQTY'] < 2145)], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['O_CUSTKEY'] == 22178)].merge(customer[(customer['C_PHONE'] != '13-')][['C_NATIONKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 6) | (nation['N_NAME'] == 'S')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_SUPPKEY']).agg('max', numeric_only=True)

part

customer.groupby(by=['C_PHONE', 'C_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 11)]

orders[(orders['SHIPPRIORITY'] < 0)][['O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERSTATUS']].merge(partsupp[['P_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_NAME'] != 'M')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='R_REGIONKEY').merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL']].merge(orders[(orders['ORDERDATE'] < '1998-07-21')][['SHIPPRIORITY', 'O_ORDERKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='C_CUSTKEY'), left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(region.merge(nation[(nation['N_NAME'] != 'J')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='O_ORDERKEY', right_on='R_REGIONKEY').merge(part[['BRAND', 'TYPE']].merge(partsupp[['P_COMMENT']], left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_ORDERKEY', right_on='P_PARTKEY')

customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']].merge(orders[['TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_COMMENT'] != ' ')][['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']].merge(orders[(orders['ORDERDATE'] > '1998-07-21')][['O_ORDERKEY', 'CLERK', 'ORDERSTATUS']], left_on='C_CUSTKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

orders[['O_COMMENT', 'O_ORDERKEY']].merge(lineitem.merge(orders[['CLERK', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['L_COMMENT'] != 'l') & (lineitem['SHIPDATE'] <= '1992-04-27')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 30) | (partsupp['P_COMMENT'] == 'p')].merge(lineitem[['L_ORDERKEY', 'L_SUPPKEY', 'QUANTITY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

customer[(customer['C_ACCTBAL'] >= 5540.642172673315)].merge(nation[['N_NATIONKEY']].merge(customer.merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH']))], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_ACCTBAL'] != 271.3380177261406) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_COMMENT'] == 'v')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('min', numeric_only=True)

lineitem[['QUANTITY', 'L_ORDERKEY', 'SHIPMODE', 'L_COMMENT']].merge(orders[(orders['O_CUSTKEY'] <= 131108) & (orders['CLERK'] != 'C')][['O_COMMENT', 'O_ORDERKEY']].merge(lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['COMMITDATE'] == '1998-10-16')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

customer[(customer['C_NATIONKEY'] > 6)]

customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 94) | (customer['C_ACCTBAL'] == -38.805343952180124) | (customer['C_ACCTBAL'] <= 6024.16644063507)]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] != 124) & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] < 1)][['N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_NATIONKEY'] <= 12)].merge(customer[(customer['C_CUSTKEY'] != 23)][['C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']].merge(orders[(orders['TOTALPRICE'] >= 185102.98161828643) | (orders['CLERK'] != 'C')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

part.merge(partsupp[(partsupp['P_COMMENT'] == 'j')], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['L_PARTKEY'] <= 148123)].merge(partsupp[(partsupp['PS_PARTKEY'] == 47) & (partsupp['P_COMMENT'] != 'b')], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != 'the')][['PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

part.groupby(by=['PT_COMMENT', 'RETAILPRICE']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 0) | (nation['N_NAME'] == 'S')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 23) & (nation['N_REGIONKEY'] != 1)].merge(supplier[(supplier['S_ACCTBAL'] <= 776.3587580809155)][['S_SUPPKEY', 'S_NATIONKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

part.merge(partsupp[(partsupp['PS_PARTKEY'] != 42) & (partsupp['PS_PARTKEY'] >= 5)].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['P_PARTKEY'] != 26) | (part['P_PARTKEY'] >= 1)][['RETAILPRICE', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'TYPE']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 68676)].merge(customer.merge(nation[(nation['N_COMMENT'] != 'i') & (nation['N_COMMENT'] != 'o')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_PARTKEY'] == 6496)][['RECEIPTDATE', 'L_PARTKEY', 'COMMITDATE']].merge(partsupp[['SUPPLYCOST']].merge(orders, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['TAX'] == 0.02784426081649359) | (lineitem['L_COMMENT'].str.startswith('s'))][['QUANTITY', 'RETURNFLAG']].merge(orders[(orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_COMMENT'] != 'g')].merge(lineitem[['SHIPDATE', 'QUANTITY', 'LINENUMBER', 'SHIPMODE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

lineitem.groupby(by=['DISCOUNT']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']].merge(partsupp[(partsupp['PS_PARTKEY'] != 31) & (partsupp['PS_PARTKEY'] < 14)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(lineitem[(lineitem['LINENUMBER'] == 2) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON', 'TAKE BACK RETURN']))].merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE', 'S_ADDRESS']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 404.3484893469424) & (partsupp['AVAILQTY'] <= 8578) | (partsupp['SUPPLYCOST'] != 335.23102687790026)].merge(supplier.merge(partsupp.merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[['SHIPDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[['S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

customer.groupby(by=['C_NATIONKEY', 'MKTSEGMENT']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[['N_NAME']].merge(orders, left_on='N_NATIONKEY', right_on='O_ORDERKEY').merge(lineitem, left_on='N_NATIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('14-'))][['S_ACCTBAL', 'S_NAME']].merge(region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'] == 'n')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='S_SUPPKEY', right_on='R_REGIONKEY')

lineitem[['DISCOUNT', 'LINESTATUS', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 2471)].merge(lineitem[(lineitem['L_PARTKEY'] == 100459) | (lineitem['L_ORDERKEY'] >= 185)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['SHIPDATE'] <= '1998-10-30')][['L_SUPPKEY', 'L_COMMENT']].merge(partsupp[['PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != ';')].merge(supplier[(supplier['S_COMMENT'] != 'y')][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 17)][['PS_PARTKEY', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['DISCOUNT']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['TAX'] == 0.05085259445128983) & (lineitem['SHIPMODE'] == 'REG AIR')].groupby(by=['EXTENDEDPRICE', 'DISCOUNT']).agg('count')

part[(part['BRAND'] == 'Brand#54')].merge(partsupp[(partsupp['AVAILQTY'] > 7154)].merge(part[(part['BRAND'] != 'Brand#24') | (part['RETAILPRICE'] == 997.8807930133485)][['PT_COMMENT', 'RETAILPRICE', 'TYPE']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']], left_on='P_PARTKEY', right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] != 6533)][['P_COMMENT']].merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] > 346355.89458510507)].merge(customer[(customer['C_NAME'].str.startswith('C'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[['EXTENDEDPRICE', 'SHIPINSTRUCT']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

supplier.merge(nation.merge(customer.merge(nation[['N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['P_COMMENT'] != 'e') | (partsupp['SUPPLYCOST'] < 124.25476069461133)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(part[['BRAND', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2'])) & (part['TYPE'].str.startswith('L'))][['CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_NATIONKEY'] > 12)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS']].merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[['S_ADDRESS', 'S_NAME']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] < 3)], left_on='S_SUPPKEY', right_on='C_CUSTKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY')

orders[['O_COMMENT', 'ORDERPRIORITY']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 592.4554090823223)].merge(supplier[(supplier['S_ACCTBAL'] != 4208.417634950261) & (supplier['S_PHONE'] != '14-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['TYPE']].merge(supplier[(supplier['S_COMMENT'] != 'n') & (supplier['S_PHONE'] == '32-')], left_on='P_PARTKEY', right_on='S_SUPPKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

partsupp[(partsupp['PS_PARTKEY'] < 27) & (partsupp['SUPPLYCOST'] > 243.21714057720854) | (partsupp['SUPPLYCOST'] <= 422.2325137978755)][['P_COMMENT', 'PS_SUPPKEY']].groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'E') & (region['R_REGIONKEY'] < 1)].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(supplier[(supplier['S_ADDRESS'] == '6')].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] >= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

part.merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] < -83.36432403386561) | (supplier['S_NATIONKEY'] < 12)][['S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['PT_COMMENT'] == 'x') & (part['PT_COMMENT'] != 'the')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp.merge(part[(part['P_NAME'].str.startswith('b'))][['SIZE', 'MFGR', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(lineitem[(lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['LINENUMBER'] != 2)].merge(orders[(orders['SHIPPRIORITY'] != 0) & (orders['CLERK'] != 'C')].merge(lineitem[(lineitem['LINENUMBER'] == 3)], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

lineitem[['DISCOUNT']].merge(part[(part['PT_COMMENT'].str.startswith('ss ')) & (part['P_PARTKEY'] == 21)].merge(partsupp.merge(lineitem[['TAX', 'L_PARTKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST']].merge(part[(part['SIZE'] != 15) & (part['SIZE'] >= 5)], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').groupby(by=['DISCOUNT']).agg('max', numeric_only=True)

part[['SIZE', 'P_NAME', 'MFGR']].merge(supplier[(supplier['S_ACCTBAL'] != -663.0520832300547) & (supplier['S_PHONE'].str.startswith('3'))][['S_ACCTBAL']].merge(partsupp[(partsupp['P_COMMENT'] == 'y') | (partsupp['PS_SUPPKEY'] >= 814)].merge(supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(customer[(customer['C_ACCTBAL'] != 307.9890899386935)][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME']].merge(partsupp[(partsupp['SUPPLYCOST'] > 778.8917862782929)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='C_CUSTKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY').groupby(by=['SIZE', 'P_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(orders[(orders['SHIPPRIORITY'] < 0)].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['QUANTITY'] >= 33)][['EXTENDEDPRICE']].merge(nation[(nation['N_COMMENT'] == 'r') | (nation['N_NAME'].str.startswith('V'))][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(customer[(customer['C_COMMENT'] != 'y')][['C_NAME', 'C_COMMENT']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['DISCOUNT'] >= 0.09975978096734957)], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_CUSTKEY', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

part.merge(partsupp.merge(lineitem[['SHIPINSTRUCT', 'SHIPMODE', 'L_ORDERKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[['COMMITDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

part.merge(partsupp[(partsupp['P_COMMENT'] != 'r') & (partsupp['PS_PARTKEY'] > 41)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != ';')][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] >= 1690)], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 9) & (supplier['S_ADDRESS'].str.startswith('c')) | (supplier['S_SUPPKEY'] <= 132) | (supplier['S_NATIONKEY'] < 3)].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE']].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_COMMENT'] != 'p')], left_on='O_ORDERKEY', right_on='N_NATIONKEY').groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

lineitem[['L_SUPPKEY']].merge(partsupp[['AVAILQTY']].merge(region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 0)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='R_REGIONKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(lineitem[(lineitem['SHIPMODE'] != 'REG AIR')], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] != 885.1599040918359)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

partsupp

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_COMMENT']].merge(supplier[(supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_SUPPKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] != 1721)].merge(part[(part['PT_COMMENT'].str.startswith('ss ')) | (part['SIZE'] == 12)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ACCTBAL'] > 6385.71095321638)][['S_ACCTBAL', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] > 10)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] == 125)][['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME']].merge(partsupp[['P_COMMENT', 'AVAILQTY']].merge(lineitem[(lineitem['TAX'] < 0.047955550952588) | (lineitem['RETURNFLAG'] == 'N')][['QUANTITY', 'RETURNFLAG', 'L_PARTKEY']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier.merge(partsupp[(partsupp['PS_PARTKEY'] >= 3)][['PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

part[['PT_COMMENT']].merge(partsupp[(partsupp['SUPPLYCOST'] < 915.3673033117055)].merge(part[(part['CONTAINER'] == 'WRAP') & (part['CONTAINER'] != 'MED')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['EXTENDEDPRICE'] < 17153.374901175874)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(lineitem[(lineitem['RETURNFLAG'] == 'A') & (lineitem['SHIPMODE'] == 'AIR')], left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW']))].merge(lineitem[['EXTENDEDPRICE', 'SHIPMODE', 'LINESTATUS', 'LINENUMBER']].merge(customer[(customer['C_NATIONKEY'] <= 1) & (customer['C_PHONE'].str.startswith('22-'))][['C_COMMENT']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['MKTSEGMENT'] == 'BUILDING')][['C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_REGIONKEY'] <= 1)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

part[(part['TYPE'] == 'STA') & (part['PT_COMMENT'] != 'i') | (part['BRAND'] != 'Brand#45') | (part['BRAND'] == 'Brand#15')].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] != 1608) | (partsupp['AVAILQTY'] != 9198)].merge(lineitem[['SHIPINSTRUCT', 'RETURNFLAG', 'DISCOUNT', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[(supplier['S_PHONE'] == '14-')][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_REGIONKEY'] <= 3)][['N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 3483.5501572731064) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_COMMENT'] != '.') | (customer['C_CUSTKEY'] == 64)].merge(nation[['N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] == 3)].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part[['TYPE', 'P_PARTKEY']].merge(partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['EXTENDEDPRICE'] < 51371.65516736933)].merge(orders[(orders['O_ORDERKEY'] < 590)][['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] > 875.2249010813548)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith(',')) | (partsupp['SUPPLYCOST'] <= 800.0180585924428)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['TYPE'] == 'E') | (part['PT_COMMENT'] == 'f')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY']).agg('min', numeric_only=True)

supplier

part[(part['P_PARTKEY'] >= 98) | (part['P_PARTKEY'] > 195) | (part['P_PARTKEY'] >= 181) | (part['CONTAINER'].str.startswith('JUMBO'))][['RETAILPRICE', 'TYPE']]

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_NATIONKEY'] >= 8)][['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] < 20) & (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders[(orders['O_ORDERKEY'] > 445)].merge(lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD')][['RETURNFLAG', 'SHIPDATE', 'SHIPMODE']].merge(partsupp[(partsupp['SUPPLYCOST'] == 28.421578702339804)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(nation[(nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

supplier[(supplier['S_NAME'] != 'S')].groupby(by=['S_NATIONKEY', 'S_NAME']).agg('count')

customer.merge(orders[(orders['SHIPPRIORITY'] == 0)], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] != 1094.9384637221638) | (part['TYPE'] != 'SMA') & (part['RETAILPRICE'] >= 1053.121348547949) & (part['P_NAME'] != 'l')][['BRAND', 'MFGR', 'P_NAME', 'RETAILPRICE']].merge(region.merge(nation[(nation['N_NAME'].str.startswith('U'))].merge(customer[['MKTSEGMENT', 'C_NAME']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='P_PARTKEY', right_on='R_REGIONKEY').merge(customer[['C_COMMENT', 'C_CUSTKEY']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS']].merge(nation.merge(supplier[['S_PHONE', 'S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[['R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_COMMENT'] != 's')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(orders[(orders['SHIPPRIORITY'] > 0)].merge(lineitem[['RECEIPTDATE', 'L_SUPPKEY', 'LINESTATUS']].merge(partsupp[(partsupp['SUPPLYCOST'] == 752.3865902396151) & (partsupp['P_COMMENT'].str.startswith('.'))], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_CUSTKEY'] >= 78)][['MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['TOTALPRICE'] == 285317.4762916072) & (orders['ORDERSTATUS'] != 'F')][['ORDERSTATUS']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='S_SUPPKEY').merge(region[(region['R_REGIONKEY'] != 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='O_ORDERKEY', right_on='R_REGIONKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NAME'] != 'E')].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_NAME'] != 'C')].merge(nation[(nation['N_COMMENT'] != 'n') | (nation['N_NATIONKEY'] > 4)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'C_ADDRESS']).agg('max', numeric_only=True)

nation

lineitem[['L_PARTKEY', 'SHIPINSTRUCT', 'L_SUPPKEY']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['MFGR'] != 'Manufacturer#3')][['RETAILPRICE', 'BRAND']].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] > 15)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='P_PARTKEY', right_on='N_NATIONKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['DISCOUNT'] == 0.008444251226400901) | (lineitem['EXTENDEDPRICE'] >= 57051.635452677176)], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier[(supplier['S_NATIONKEY'] < 21)][['S_NAME', 'S_COMMENT', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != ';')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] == 6266.583545277686)][['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL']]

partsupp.merge(supplier[['S_NAME']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('j'))][['SUPPLYCOST']], left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02')][['L_PARTKEY', 'DISCOUNT']].merge(partsupp[(partsupp['PS_PARTKEY'] > 14)], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(lineitem[['L_COMMENT', 'TAX', 'QUANTITY', 'SHIPMODE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

region.merge(nation[(nation['N_NATIONKEY'] == 1)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('R'))], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_PHONE'].str.startswith('2'))].merge(nation[(nation['N_NATIONKEY'] <= 13)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[['SHIPPRIORITY']].merge(customer.merge(orders[['TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation.merge(customer[['C_PHONE']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '3-MEDIUM', '2-HIGH', '1-URGENT'])) | (orders['CLERK'] != 'C')].merge(customer[(customer['C_NATIONKEY'] != 15)][['C_CUSTKEY']].merge(orders[(orders['TOTALPRICE'] == 76292.57325678135) & (orders['ORDERDATE'] < '1992-01-13')].merge(lineitem[['L_PARTKEY', 'LINESTATUS']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_NATIONKEY'] > 14)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(orders[(orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] >= 313732.4450419439)][['TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NAME'].str.startswith('P'))][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(supplier[(supplier['S_ACCTBAL'] <= 5951.398786915098)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 88.74425108861325) & (partsupp['AVAILQTY'] > 3819)][['AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_ACCTBAL'] != 703.3194553805315) | (customer['C_COMMENT'] != 'n')][['C_ACCTBAL', 'C_NATIONKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']].merge(orders[(orders['ORDERSTATUS'] == 'F')][['O_CUSTKEY', 'TOTALPRICE', 'ORDERDATE']].merge(customer[['MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_ACCTBAL'] > 8775.253321978775) & (customer['C_ACCTBAL'] < 6383.04803769453)][['C_ACCTBAL', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NAME']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERPRIORITY'] != '5-LOW')].merge(lineitem[['EXTENDEDPRICE', 'SHIPINSTRUCT', 'COMMITDATE', 'TAX']].merge(part[(part['P_NAME'] == 'lin') & (part['BRAND'].isin(['Brand#12', 'Brand#22', 'Brand#44', 'Brand#51', 'Brand#55', 'Brand#31', 'Brand#33', 'Brand#54', 'Brand#53', 'Brand#15', 'Brand#45', 'Brand#42']))].merge(partsupp[(partsupp['PS_PARTKEY'] <= 6)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] > 2230)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')][['QUANTITY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_NAME'] == 'F') & (nation['N_NATIONKEY'] < 9)].merge(customer.merge(orders[['O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(partsupp[(partsupp['AVAILQTY'] != 5618) | (partsupp['PS_PARTKEY'] < 43)][['PS_PARTKEY']], left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['TOTALPRICE'] >= 201248.56721274214) | (orders['ORDERPRIORITY'] != '2-HIGH')][['SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] >= 22) & (customer['C_ADDRESS'] != 'n')][['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_ORDERKEY'] != 364)][['CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] <= 1590.5029599546208)], left_on='O_ORDERKEY', right_on='S_SUPPKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'a') | (supplier['S_PHONE'] != '3')][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY']]

customer[['C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 'n') & (nation['N_REGIONKEY'] == 1)][['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g')][['R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('n')) | (partsupp['AVAILQTY'] == 4433) & (partsupp['AVAILQTY'] != 9277) | (partsupp['SUPPLYCOST'] <= 594.982697095988)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] <= 20)].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_NATIONKEY'] == 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['L_PARTKEY'] <= 69374) & (lineitem['RETURNFLAG'] == 'A')][['DISCOUNT', 'L_PARTKEY', 'QUANTITY', 'L_ORDERKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'k') | (partsupp['AVAILQTY'] == 5382)].merge(lineitem[(lineitem['TAX'] > 0.042647957653170324)], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(part[(part['P_NAME'] != 'd')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

nation[(nation['N_COMMENT'].str.startswith('a')) & (nation['N_NATIONKEY'] != 11)].merge(customer[['MKTSEGMENT']].merge(supplier[(supplier['S_SUPPKEY'] < 41) | (supplier['S_NAME'] != 'S')], left_on='C_CUSTKEY', right_on='S_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] != 339.69834360880185) | (partsupp['SUPPLYCOST'] != 781.8113038986913)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] <= 95)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY')

supplier.merge(partsupp.merge(lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 3738)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['CONTAINER'].str.startswith('WRAP'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_NATIONKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('c')) | (supplier['S_PHONE'].str.startswith('1'))][['S_PHONE']].merge(partsupp, left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE']))][['MKTSEGMENT', 'C_CUSTKEY']].merge(orders[(orders['SHIPPRIORITY'] != 0)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT', 'S_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 4857) | (partsupp['PS_SUPPKEY'] > 318) & (partsupp['PS_PARTKEY'] >= 41)].merge(lineitem[(lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['RETURNFLAG'] == 'A')][['SHIPINSTRUCT', 'RECEIPTDATE', 'DISCOUNT']].merge(customer[(customer['C_PHONE'].str.startswith('1'))][['C_CUSTKEY', 'C_ACCTBAL']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['COMMITDATE'] < '1998-10-16')], left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['AVAILQTY']).agg('count')

orders[(orders['SHIPPRIORITY'] < 0)]

orders.merge(customer[['C_NATIONKEY', 'C_COMMENT', 'C_PHONE', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_CUSTKEY'] <= 42) & (customer['C_NATIONKEY'] <= 5)][['C_CUSTKEY']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(customer[(customer['C_NATIONKEY'] == 1)][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_CUSTKEY'] > 45) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NAME'] == 'B') & (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] <= 18)].merge(supplier[(supplier['S_COMMENT'] == 'f') & (supplier['S_COMMENT'] == 'd')], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 3)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

nation[(nation['N_NAME'] != 'R') & (nation['N_NATIONKEY'] < 22) | (nation['N_NAME'] != 'M')]

supplier[(supplier['S_SUPPKEY'] != 72) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] >= 2291.0421821384098)].merge(nation[(nation['N_REGIONKEY'] < 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'S_NATIONKEY']).agg('count')

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 4189.0050263293715) | (supplier['S_NATIONKEY'] > 6)][['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT']].groupby(by=['S_NAME']).agg('sum', numeric_only=True)

partsupp.merge(lineitem.merge(orders[['O_COMMENT', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem.merge(orders[(orders['O_COMMENT'] != 'c')][['TOTALPRICE']].merge(customer[(customer['C_CUSTKEY'] > 88)][['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_ORDERKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['AVAILQTY', 'P_COMMENT']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('p'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

supplier

part[['CONTAINER']].merge(customer[(customer['C_COMMENT'] == 't')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 7546) | (partsupp['SUPPLYCOST'] <= 902.8512922453074) | (partsupp['PS_SUPPKEY'] <= 4721)].merge(supplier[(supplier['S_COMMENT'].str.startswith('bli'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(orders.merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_COMMENT'] == '.')][['ORDERSTATUS', 'ORDERPRIORITY', 'O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation.merge(supplier[['S_NATIONKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region.merge(nation[(nation['N_REGIONKEY'] < 3)][['N_NAME']].merge(partsupp[(partsupp['P_COMMENT'] == ' ')][['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']], left_on='N_NATIONKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(part[(part['TYPE'] == 'E')][['P_PARTKEY']], left_on='N_NATIONKEY', right_on='P_PARTKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT']].merge(part[['RETAILPRICE', 'BRAND']], left_on='N_NATIONKEY', right_on='P_PARTKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY']]

orders[(orders['ORDERDATE'] == '1998-07-21')][['ORDERPRIORITY', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_ACCTBAL'] != 2920.33803864523)][['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(nation[(nation['N_NAME'].str.startswith('C'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE']))][['C_ACCTBAL', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 22) | (nation['N_NATIONKEY'] >= 18)].merge(region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation.merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 5866) & (partsupp['SUPPLYCOST'] < 965.610898439507) & (partsupp['SUPPLYCOST'] == 746.8906164690078)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'R')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] >= 9)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME']]

supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_PHONE'] != '17-') | (supplier['S_ACCTBAL'] > 6284.840942178194)][['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(partsupp[(partsupp['AVAILQTY'] <= 5801)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['TYPE'] != 'E') | (part['TYPE'] != 'STA')][['CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

orders.merge(lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(orders[(orders['ORDERDATE'] > '1998-07-21')][['O_ORDERKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[['L_ORDERKEY', 'QUANTITY', 'SHIPMODE', 'L_PARTKEY', 'COMMITDATE']].merge(orders[(orders['O_ORDERKEY'] == 728) | (orders['O_COMMENT'] == 'w')][['SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

part[(part['BRAND'] == 'Brand#55') | (part['PT_COMMENT'] == 'n') & (part['PT_COMMENT'].str.startswith('l'))][['BRAND', 'MFGR', 'SIZE']].merge(supplier.merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] > 1573)][['PS_PARTKEY', 'SUPPLYCOST']].merge(lineitem[(lineitem['LINENUMBER'] >= 6)], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['LINENUMBER'] == 1) | (lineitem['LINENUMBER'] != 6)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 335.1875017100752)][['PS_PARTKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'])

nation.merge(customer[(customer['C_COMMENT'] != 'n')][['C_COMMENT', 'C_ADDRESS']].merge(lineitem[(lineitem['TAX'] == 0.07953670413686485) & (lineitem['LINESTATUS'] == 'O')].merge(partsupp[(partsupp['AVAILQTY'] != 7190)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(nation.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] >= 5845.416619111728)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_CUSTKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier.merge(nation[(nation['N_NATIONKEY'] == 0) & (nation['N_NAME'] == 'F')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[['R_COMMENT', 'R_REGIONKEY']].merge(nation.merge(customer[['C_ADDRESS', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('g'))].merge(customer[(customer['C_COMMENT'] == 'h') | (customer['C_ACCTBAL'] != 3540.6811189687287)].merge(orders.merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[['C_CUSTKEY']].merge(orders[(orders['CLERK'] != 'C')][['SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] >= 207327.80680155716) & (orders['ORDERSTATUS'].isin(['F'])) & (orders['ORDERSTATUS'].isin(['F']))][['O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']]

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

part[(part['CONTAINER'] == 'WRAP') & (part['P_PARTKEY'] == 41) & (part['SIZE'] != 11)][['BRAND', 'TYPE', 'MFGR', 'CONTAINER', 'RETAILPRICE']].merge(lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'TAKE BACK RETURN', 'COLLECT COD'])) & (lineitem['DISCOUNT'] >= 0.029636012792632296)].merge(orders[(orders['O_COMMENT'] == '.')][['O_ORDERKEY', 'CLERK', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'WRAP')][['MFGR', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['TYPE', 'CONTAINER']).agg('count')

lineitem[(lineitem['COMMITDATE'] < '1992-05-15')][['DISCOUNT', 'LINENUMBER', 'RECEIPTDATE', 'COMMITDATE']].merge(part.merge(partsupp[(partsupp['SUPPLYCOST'] >= 579.1345222539976) & (partsupp['P_COMMENT'] == 'g')][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] != -249.47533741908717)][['S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['LINENUMBER'] != 4)], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(part[(part['BRAND'].isin(['Brand#52', 'Brand#15', 'Brand#32', 'Brand#11', 'Brand#42', 'Brand#34', 'Brand#53', 'Brand#44', 'Brand#55', 'Brand#12', 'Brand#14', 'Brand#45', 'Brand#21', 'Brand#13', 'Brand#41', 'Brand#23', 'Brand#22', 'Brand#35']))][['TYPE', 'P_PARTKEY', 'CONTAINER', 'SIZE']].merge(partsupp[(partsupp['AVAILQTY'] < 7144)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'] == 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN']))][['L_COMMENT']].merge(part[(part['PT_COMMENT'].str.startswith('f')) & (part['MFGR'] != 'Manufacturer#4')][['MFGR']].merge(orders[['TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='P_PARTKEY', right_on='O_ORDERKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').merge(customer[(customer['C_NATIONKEY'] != 0)][['C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME']].merge(orders[(orders['ORDERDATE'] > '1992-01-13')][['SHIPPRIORITY']], left_on='R_REGIONKEY', right_on='O_ORDERKEY'), left_on='C_CUSTKEY', right_on='R_REGIONKEY').merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='C_CUSTKEY', right_on='R_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY').merge(orders[(orders['O_COMMENT'].str.startswith('h')) | (orders['O_ORDERKEY'] > 735)][['ORDERSTATUS', 'ORDERDATE']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY').groupby(by=['L_COMMENT']).agg('count')

orders.merge(lineitem[(lineitem['L_ORDERKEY'] <= 155) | (lineitem['LINENUMBER'] > 6)].merge(orders[(orders['O_CUSTKEY'] != 101953) & (orders['O_ORDERKEY'] >= 45)][['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY']].merge(lineitem[(lineitem['EXTENDEDPRICE'] < 78379.62756500058) | (lineitem['EXTENDEDPRICE'] != 49470.38671796481)], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(supplier[(supplier['S_COMMENT'] != ',')][['S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY')

part[(part['P_NAME'].str.startswith('c'))][['TYPE', 'P_NAME', 'RETAILPRICE', 'CONTAINER']].merge(lineitem[(lineitem['SHIPDATE'] <= '1998-10-30')][['SHIPMODE', 'RETURNFLAG', 'L_SUPPKEY']], left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(lineitem[(lineitem['L_ORDERKEY'] <= 166)][['L_ORDERKEY']], left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'])

lineitem[(lineitem['TAX'] >= 0.07818782926467317) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['SHIPMODE'].isin(['REG AIR', 'TRUCK', 'FOB'])) | (lineitem['L_ORDERKEY'] > 12)][['L_SUPPKEY', 'RETURNFLAG']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

customer[(customer['C_CUSTKEY'] != 88) & (customer['C_CUSTKEY'] < 60)][['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR']).agg('max', numeric_only=True)

part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[(supplier['S_COMMENT'] == 'n') | (supplier['S_NATIONKEY'] != 22)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] >= 1099.8775085388547)].merge(partsupp[(partsupp['PS_PARTKEY'] > 46) | (partsupp['PS_SUPPKEY'] != 3155)][['AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(customer[(customer['C_ADDRESS'] != 'E') & (customer['C_ACCTBAL'] <= -26.592986407146668)][['C_PHONE', 'C_CUSTKEY']].merge(orders[(orders['O_COMMENT'].str.startswith('k')) | (orders['ORDERDATE'] > '1992-01-13')][['O_ORDERKEY', 'ORDERDATE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_NATIONKEY'] <= 12)], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']].merge(region[(region['R_COMMENT'] == 'h')], left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

part[['CONTAINER', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME']].merge(lineitem[(lineitem['EXTENDEDPRICE'] <= 13333.468659454262) | (lineitem['COMMITDATE'] >= '1998-10-16')][['L_COMMENT', 'TAX']].merge(part.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').merge(nation, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'])

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] != 22)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'] == 'r')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(supplier[(supplier['S_ACCTBAL'] > 7045.521028769862) | (supplier['S_ADDRESS'] == '1')][['S_PHONE', 'S_ADDRESS', 'S_NAME']].merge(part[['RETAILPRICE', 'SIZE']], left_on='S_SUPPKEY', right_on='P_PARTKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']]

customer[['MKTSEGMENT']].merge(lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 1058) & (partsupp['AVAILQTY'] > 2760)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['MKTSEGMENT']).agg('count')

supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE']].groupby(by=['S_NAME', 'S_SUPPKEY']).agg('min', numeric_only=True)

region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_COMMENT'].str.startswith('y'))][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME') | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation.merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY'])) & (customer['C_ACCTBAL'] > 7014.718818775118)].merge(orders[(orders['SHIPPRIORITY'] == 0)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_ACCTBAL'] >= 7179.850822006092)].merge(orders[(orders['TOTALPRICE'] == 267819.0616323519) & (orders['O_COMMENT'].str.startswith('ly '))], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 23)].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_SUPPKEY', right_on='N_NATIONKEY').merge(region[(region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME']].groupby(by=['S_ACCTBAL']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] != 110) & (part['RETAILPRICE'] < 959.4796875400189) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4'])) | (part['P_PARTKEY'] != 36)][['CONTAINER', 'MFGR', 'BRAND', 'PT_COMMENT', 'TYPE']].merge(customer[['C_ACCTBAL', 'C_ADDRESS']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='C_CUSTKEY', right_on='R_REGIONKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY').merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] != '14-')][['S_ACCTBAL', 'S_COMMENT']], left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['L_PARTKEY'] <= 4883)][['TAX']], left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['TYPE', 'PT_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] > 2)][['N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_ADDRESS']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'RETAILPRICE', 'TYPE', 'SIZE']].groupby(by=['MFGR']).agg('max', numeric_only=True)

region.merge(nation[(nation['N_NATIONKEY'] == 23) | (nation['N_NAME'] != 'M')][['N_COMMENT']].merge(lineitem[['TAX']], left_on='N_NATIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']], left_on='N_NATIONKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'F')][['N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

part[(part['PT_COMMENT'] == 'b') | (part['BRAND'].isin(['Brand#15', 'Brand#32', 'Brand#33', 'Brand#42', 'Brand#51', 'Brand#55']))][['RETAILPRICE', 'CONTAINER', 'P_PARTKEY']].merge(partsupp[['SUPPLYCOST']].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='R_REGIONKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['AVAILQTY']].merge(customer, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='C_CUSTKEY').merge(orders[['CLERK', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(lineitem[['RECEIPTDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != ' ') & (part['MFGR'] == 'Manufacturer#3') & (part['RETAILPRICE'] > 929.2402340174064) & (part['BRAND'].isin(['Brand#22', 'Brand#54', 'Brand#42', 'Brand#41', 'Brand#25', 'Brand#33', 'Brand#55', 'Brand#53', 'Brand#15', 'Brand#34', 'Brand#44', 'Brand#21', 'Brand#24', 'Brand#23', 'Brand#32', 'Brand#43', 'Brand#11', 'Brand#14', 'Brand#52', 'Brand#35', 'Brand#45', 'Brand#31', 'Brand#12', 'Brand#13', 'Brand#51']))].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 6648)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] == 556) | (orders['TOTALPRICE'] <= 291114.9743985579)].merge(lineitem[['EXTENDEDPRICE', 'TAX']].merge(region[(region['R_COMMENT'] != 'h')].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY').merge(customer[(customer['C_CUSTKEY'] < 12) & (customer['C_ADDRESS'].str.startswith('p'))][['C_CUSTKEY', 'C_NAME']].merge(orders[['O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['TAX']].merge(supplier, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 17)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['SHIPPRIORITY', 'O_COMMENT']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 46)][['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['LINENUMBER'] < 6)][['L_SUPPKEY', 'RECEIPTDATE', 'LINENUMBER']].merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(lineitem[(lineitem['EXTENDEDPRICE'] < 9474.59777425182) | (lineitem['L_PARTKEY'] >= 166637)][['LINENUMBER']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

part[['P_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 39)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(orders[['O_COMMENT', 'CLERK', 'ORDERSTATUS']].merge(partsupp, left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(region[(region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY']], left_on='O_ORDERKEY', right_on='R_REGIONKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['O_COMMENT'].str.startswith('i'))], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

supplier[(supplier['S_SUPPKEY'] < 22)][['S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT']].groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 'o') & (nation['N_NAME'] == 'S') | (nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] > 19)]

lineitem[(lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['SHIPMODE'] != 'AIR') & (lineitem['EXTENDEDPRICE'] > 18446.45273472139)][['RECEIPTDATE']].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u')].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY')

orders[['O_COMMENT', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'O_COMMENT']).agg('sum', numeric_only=True)

customer.merge(orders[['TOTALPRICE']].merge(part[(part['P_NAME'].str.startswith('a')) & (part['RETAILPRICE'] != 928.9401222724014)].merge(partsupp[(partsupp['SUPPLYCOST'] < 70.70468305329838) & (partsupp['PS_SUPPKEY'] > 3191)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='P_PARTKEY').merge(lineitem[['L_PARTKEY', 'SHIPMODE', 'SHIPDATE']].merge(partsupp[['PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['CLERK', 'ORDERSTATUS']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

nation[(nation['N_COMMENT'] != 's') & (nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'].str.startswith('t'))].merge(customer[(customer['C_CUSTKEY'] == 85)], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_COMMENT'] == 's')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] > 135)][['S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(orders[['ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE']].merge(lineitem[(lineitem['LINESTATUS'] == 'F')][['SHIPDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NAME', 'C_NATIONKEY']).agg('count')

part[['P_NAME', 'TYPE', 'SIZE', 'MFGR', 'BRAND']].merge(partsupp[(partsupp['P_COMMENT'] == 'h')][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] != '!')][['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(region, left_on='P_PARTKEY', right_on='R_REGIONKEY').groupby(by=['MFGR', 'BRAND']).agg('count')

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(customer[['C_ADDRESS']].merge(lineitem[(lineitem['L_SUPPKEY'] >= 2791) & (lineitem['SHIPDATE'] != '1998-10-30')][['RETURNFLAG', 'SHIPINSTRUCT', 'LINESTATUS']].merge(nation, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(partsupp[['SUPPLYCOST']].merge(lineitem[(lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['COMMITDATE'] >= '1992-05-15')][['TAX', 'LINESTATUS']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_NATIONKEY'] < 5)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(supplier[(supplier['S_SUPPKEY'] > 173) | (supplier['S_ADDRESS'] != 'V')][['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

part[(part['CONTAINER'].str.startswith('WRAP')) | (part['CONTAINER'].str.startswith('JUMBO'))]

nation[(nation['N_NAME'] != 'G') | (nation['N_REGIONKEY'] == 2)].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[['R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] > 8) & (nation['N_NAME'] == 'J')]

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NAME'] != 'P') & (nation['N_REGIONKEY'] != 0)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] == 49)].merge(nation[(nation['N_NATIONKEY'] > 2) | (nation['N_NATIONKEY'] != 17)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp.merge(lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS', 'S_COMMENT']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'QUANTITY', 'RECEIPTDATE', 'DISCOUNT']].merge(region[['R_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] <= 63) & (supplier['S_SUPPKEY'] == 163)][['S_NAME', 'S_ACCTBAL']].merge(lineitem[['LINENUMBER', 'COMMITDATE']], left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='R_REGIONKEY', right_on='S_SUPPKEY').merge(orders[(orders['CLERK'] == 'C') | (orders['ORDERDATE'] < '1998-07-21')], left_on='R_REGIONKEY', right_on='O_ORDERKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY').merge(part[['RETAILPRICE', 'TYPE', 'P_NAME', 'SIZE']].merge(customer[(customer['C_ADDRESS'] == 'M')][['C_PHONE']], left_on='P_PARTKEY', right_on='C_CUSTKEY').merge(supplier, left_on='P_PARTKEY', right_on='S_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY']].merge(nation.merge(customer[(customer['C_NATIONKEY'] < 2) & (customer['MKTSEGMENT'].isin(['BUILDING']))], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY').groupby(by=['QUANTITY']).agg('min', numeric_only=True)

nation.merge(region.merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] == 19)].merge(region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME']].merge(supplier[(supplier['S_NATIONKEY'] < 20) | (supplier['S_SUPPKEY'] < 20)][['S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_SUPPKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_PHONE'].str.startswith('13-'))][['C_NAME', 'C_COMMENT']].merge(orders[['ORDERSTATUS', 'CLERK', 'O_COMMENT']], left_on='C_CUSTKEY', right_on='O_ORDERKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] != 'd') | (customer['C_ACCTBAL'] == 5607.218398025874) | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_ADDRESS'].str.startswith(','))].merge(orders[['O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_ADDRESS'] != 'o') | (customer['C_COMMENT'] != 'r')][['C_ACCTBAL', 'C_CUSTKEY']].merge(orders[['ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['ORDERSTATUS'].isin(['P', 'F']))][['O_ORDERKEY']].merge(lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD')][['RECEIPTDATE', 'L_COMMENT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['QUANTITY'] > 38)].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'C_NATIONKEY']).agg('min', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_NATIONKEY'] > 2)].merge(customer[(customer['C_PHONE'] == '1')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[['C_COMMENT']].merge(supplier[['S_ADDRESS']].merge(lineitem[(lineitem['SHIPMODE'].isin(['REG AIR', 'TRUCK', 'MAIL', 'RAIL', 'FOB', 'SHIP']))], left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='C_CUSTKEY', right_on='S_SUPPKEY').merge(nation[(nation['N_NAME'] != 'K')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_CUSTKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 438.9562793110002) | (partsupp['PS_PARTKEY'] <= 37)].merge(part[(part['P_PARTKEY'] != 119)][['TYPE', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['COMMITDATE'] != '1992-05-15')][['COMMITDATE', 'RETURNFLAG']].merge(nation[(nation['N_NATIONKEY'] >= 12) & (nation['N_REGIONKEY'] == 2)].merge(customer[(customer['C_PHONE'].str.startswith('2')) | (customer['C_PHONE'] != '27-')][['C_PHONE', 'C_NATIONKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'h')].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 22) & (partsupp['PS_SUPPKEY'] >= 6780) & (partsupp['P_COMMENT'].str.startswith('j'))].merge(part.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 21)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_NAME'] == 'a') & (part['CONTAINER'] == 'MED')].merge(partsupp[(partsupp['AVAILQTY'] >= 1665)][['AVAILQTY']].merge(lineitem, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

orders[(orders['TOTALPRICE'] < 159791.88946871925) & (orders['ORDERDATE'] < '1998-07-21')][['ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE']].merge(nation[(nation['N_NAME'] == 'S') | (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='O_ORDERKEY', right_on='N_NATIONKEY').merge(supplier[(supplier['S_ACCTBAL'] > 2795.6263630771446)][['S_NAME', 'S_COMMENT']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(nation[(nation['N_REGIONKEY'] == 0)], left_on='S_SUPPKEY', right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'] == 'MED') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4']))][['PT_COMMENT', 'BRAND']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'h')][['C_ACCTBAL', 'C_COMMENT', 'C_PHONE']].merge(supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_PHONE'] == '28-')], left_on='C_CUSTKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY'), left_on='O_ORDERKEY', right_on='P_PARTKEY').groupby(by=['ORDERSTATUS', 'TOTALPRICE']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 927.4662727426012) | (partsupp['P_COMMENT'] != 'j')][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(lineitem[['LINENUMBER']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[(supplier['S_SUPPKEY'] >= 190)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[['L_COMMENT']].merge(nation[(nation['N_NAME'] == 'U') | (nation['N_NATIONKEY'] == 13)], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(orders[(orders['O_ORDERKEY'] != 385) | (orders['O_CUSTKEY'] > 102246)], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ADDRESS'] != 'p') | (supplier['S_NAME'].str.startswith('S'))]

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(supplier[(supplier['S_PHONE'] == '2')].merge(nation[(nation['N_REGIONKEY'] < 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_ADDRESS'] != 'm') | (customer['C_NATIONKEY'] == 6)], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

lineitem[['TAX', 'SHIPMODE', 'L_PARTKEY']].groupby(by=['TAX']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O']))][['TAX', 'COMMITDATE']].merge(supplier[(supplier['S_ADDRESS'] == '6')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] == 0)][['N_COMMENT']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] == 'M')], left_on='N_NATIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY').merge(part[(part['BRAND'] != 'Brand#53') & (part['SIZE'] < 21)][['RETAILPRICE']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').groupby(by=['COMMITDATE', 'TAX']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'B') & (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] < 5)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region.merge(nation.merge(supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(supplier[['S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_NAME'] != 'AFR')].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] != 35607) | (lineitem['DISCOUNT'] <= 0.028260435312145327) | (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['DISCOUNT'] <= 0.09494743711247751)][['SHIPDATE', 'EXTENDEDPRICE']].merge(customer[(customer['C_NATIONKEY'] < 10)][['C_COMMENT']].merge(orders[(orders['CLERK'] != 'C')][['SHIPPRIORITY', 'ORDERSTATUS']], left_on='C_CUSTKEY', right_on='O_ORDERKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY').merge(nation[['N_NATIONKEY']].merge(supplier[(supplier['S_NAME'] != 'S')], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('p'))][['N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(orders[['TOTALPRICE', 'O_COMMENT']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'].str.startswith('V'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']], left_on='O_ORDERKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('e')) | (partsupp['PS_SUPPKEY'] < 2331)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('al '))][['S_COMMENT', 'S_SUPPKEY']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

supplier[(supplier['S_COMMENT'] == 'the')][['S_ADDRESS']].merge(lineitem[['L_SUPPKEY', 'TAX', 'RECEIPTDATE', 'QUANTITY']].merge(partsupp[(partsupp['AVAILQTY'] < 5946)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] != '14-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] >= 2055)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 61) | (supplier['S_ACCTBAL'] <= 4274.577028302544) & (supplier['S_COMMENT'].str.startswith('al '))][['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(supplier[['S_NATIONKEY', 'S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_CUSTKEY'] >= 66)].merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_COMMENT'] != 't')][['N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NAME'] == 'U')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'G')].merge(nation[(nation['N_NAME'] != 'C')].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_REGIONKEY'] != 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(customer.merge(orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] <= 0)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_ADDRESS'].str.startswith('2'))], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_NAME']).agg('sum', numeric_only=True)

customer[['C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] == 'o')][['N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer

part[['SIZE', 'MFGR', 'BRAND', 'TYPE']]

part[(part['BRAND'] != 'Brand#13')]

part[(part['P_NAME'] == 'y') & (part['SIZE'] >= 8)][['P_NAME', 'SIZE', 'RETAILPRICE', 'MFGR', 'TYPE']].merge(orders.merge(customer[(customer['C_COMMENT'] == ',') | (customer['C_NAME'] != 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='P_PARTKEY', right_on='O_ORDERKEY')

part.merge(partsupp[(partsupp['SUPPLYCOST'] < 723.0243425837523)].merge(lineitem[(lineitem['L_PARTKEY'] < 45783) | (lineitem['LINENUMBER'] >= 2)][['COMMITDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[['RECEIPTDATE', 'LINENUMBER', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] != 19) & (partsupp['SUPPLYCOST'] > 461.58219857610464)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 389.62733655109787) & (partsupp['SUPPLYCOST'] > 392.94305996622734)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(lineitem[(lineitem['EXTENDEDPRICE'] <= 35089.74305454885)][['L_COMMENT', 'COMMITDATE', 'TAX', 'L_PARTKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

nation.merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[['MKTSEGMENT']].merge(orders[['ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS']].merge(supplier.merge(partsupp[(partsupp['AVAILQTY'] < 6443)][['SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='S_SUPPKEY'), left_on='C_CUSTKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['SUPPLYCOST'] == 293.9045377608837)].groupby(by=['SUPPLYCOST', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('LG'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['DISCOUNT'] == 0.04647066356877753) & (lineitem['EXTENDEDPRICE'] < 56302.17994437385)].merge(partsupp[(partsupp['AVAILQTY'] < 3561) | (partsupp['AVAILQTY'] >= 6433)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] < 4806) | (partsupp['SUPPLYCOST'] <= 895.9693791987048)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('n'))][['RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[['RETURNFLAG', 'SHIPMODE', 'L_PARTKEY', 'LINESTATUS']].merge(partsupp[(partsupp['AVAILQTY'] <= 5706)][['AVAILQTY']].merge(region[(region['R_NAME'] != 'A')], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='R_REGIONKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['PS_PARTKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'l')].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME']].merge(lineitem, left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_COMMENT'] == 'h')].merge(nation[['N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['AVAILQTY'] < 2561) & (partsupp['PS_PARTKEY'] < 6)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_PHONE', 'S_COMMENT']].merge(region, left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier.merge(partsupp[(partsupp['AVAILQTY'] < 1067)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] != 3008)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'ASI') & (region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(orders.merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY')][['C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[['C_ADDRESS', 'C_CUSTKEY']].merge(orders[(orders['O_ORDERKEY'] < 457)][['CLERK', 'TOTALPRICE', 'ORDERPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NATIONKEY'] >= 0)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[['O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY']].merge(customer[(customer['C_PHONE'] == '22-') | (customer['C_ADDRESS'] != 'i')][['C_ACCTBAL']].merge(supplier[(supplier['S_ACCTBAL'] >= 8995.594627757124)][['S_NATIONKEY', 'S_PHONE']], left_on='C_CUSTKEY', right_on='S_SUPPKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_COMMENT'] == 'c') & (customer['C_NATIONKEY'] <= 15)][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

supplier[(supplier['S_COMMENT'] != ' sl') & (supplier['S_SUPPKEY'] > 12) | (supplier['S_PHONE'] == '3')].groupby(by=['S_ACCTBAL', 'S_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'x')].merge(part[(part['PT_COMMENT'].str.startswith('kag')) | (part['P_PARTKEY'] >= 34)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] >= 1240)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['COMMITDATE', 'DISCOUNT']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(supplier[['S_SUPPKEY', 'S_NAME']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 3302) & (partsupp['AVAILQTY'] != 1450)][['PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_NATIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'E') | (region['R_NAME'] == 'AFR')].merge(nation.merge(region.merge(nation[(nation['N_NAME'].str.startswith('M'))][['N_NAME', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NATIONKEY'] > 14)][['N_NAME', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'P')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE')][['C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

part[(part['P_NAME'] == 'blu') & (part['PT_COMMENT'] != 'f')][['P_PARTKEY', 'TYPE', 'SIZE']].merge(partsupp[['PS_SUPPKEY']].merge(lineitem[['DISCOUNT', 'RETURNFLAG']].merge(orders[(orders['CLERK'] == 'C')][['O_COMMENT', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] != 1553) & (partsupp['PS_PARTKEY'] > 7)].merge(part[['TYPE', 'P_PARTKEY', 'BRAND']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 609) & (partsupp['SUPPLYCOST'] == 42.82503439579566)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'SHIP') & (lineitem['LINENUMBER'] != 2) & (lineitem['LINESTATUS'] == 'F') | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'TAKE BACK RETURN', 'COLLECT COD']))][['LINESTATUS', 'L_ORDERKEY', 'L_COMMENT', 'SHIPDATE']]

lineitem[['SHIPDATE', 'RECEIPTDATE']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(lineitem[['LINESTATUS', 'SHIPINSTRUCT', 'SHIPDATE', 'TAX']].merge(part[(part['BRAND'] != 'Brand#45')], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['BRAND'].isin(['Brand#15', 'Brand#42', 'Brand#32', 'Brand#54', 'Brand#55', 'Brand#45', 'Brand#53']))][['MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(region.merge(nation[['N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_REGIONKEY'] < 3)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 4246) & (partsupp['P_COMMENT'] != 'h')][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']]

partsupp[(partsupp['P_COMMENT'] != 'b') | (partsupp['PS_PARTKEY'] != 16) & (partsupp['PS_PARTKEY'] < 12) & (partsupp['SUPPLYCOST'] == 616.7573076369102)].merge(part[(part['P_PARTKEY'] <= 176)][['CONTAINER', 'PT_COMMENT', 'TYPE']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_PHONE', 'S_COMMENT']], left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(customer[['C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] <= 21)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[(part['BRAND'].isin(['Brand#44', 'Brand#25', 'Brand#33', 'Brand#11', 'Brand#22', 'Brand#45', 'Brand#43', 'Brand#31', 'Brand#35', 'Brand#14', 'Brand#51', 'Brand#55', 'Brand#15', 'Brand#24', 'Brand#53', 'Brand#54', 'Brand#21', 'Brand#32', 'Brand#12', 'Brand#13', 'Brand#41', 'Brand#52', 'Brand#23', 'Brand#34', 'Brand#42'])) & (part['TYPE'] == 'M')][['TYPE']].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'] == 'l')][['R_COMMENT']].merge(supplier, left_on='R_REGIONKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='R_REGIONKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

orders[(orders['O_ORDERKEY'] == 170) | (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['SHIPPRIORITY'] <= 0) | (orders['O_COMMENT'].str.startswith('n'))][['O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[['MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_CUSTKEY'] >= 90) & (customer['C_NAME'] != 'C')][['C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'v') | (supplier['S_NATIONKEY'] < 6)][['S_SUPPKEY', 'S_ACCTBAL']].merge(partsupp.merge(lineitem[(lineitem['L_SUPPKEY'] <= 9332)][['LINENUMBER', 'L_PARTKEY', 'RECEIPTDATE', 'SHIPMODE']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['L_PARTKEY'] != 172145) & (lineitem['L_COMMENT'] != 'l')].merge(partsupp[(partsupp['SUPPLYCOST'] >= 372.06524569336653)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != '6') & (supplier['S_COMMENT'] != '.') | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != '5')][['S_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] == 4351)].merge(lineitem[(lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['LINESTATUS'].isin(['F']))].merge(orders[['ORDERSTATUS', 'O_COMMENT', 'ORDERDATE', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] == 456.18931820636874)][['PS_PARTKEY']].merge(lineitem[['RETURNFLAG']].merge(customer[['C_ACCTBAL']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['TAX'] != 0.026860298597669478) & (lineitem['L_PARTKEY'] != 2490)].merge(orders[['TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['AVAILQTY'] >= 3590) & (partsupp['P_COMMENT'] != 'd')][['SUPPLYCOST', 'PS_PARTKEY']].merge(lineitem[(lineitem['SHIPMODE'] != 'RAIL') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN']))][['COMMITDATE']].merge(supplier[(supplier['S_SUPPKEY'] > 166) | (supplier['S_COMMENT'] != 'y')][['S_SUPPKEY', 'S_NAME']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != '1') & (supplier['S_COMMENT'].str.startswith('k')) & (supplier['S_NATIONKEY'] != 7)]

nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'].str.startswith('K')) | (nation['N_REGIONKEY'] < 2) | (nation['N_NAME'].str.startswith('I'))].merge(region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] == 2)].merge(nation[(nation['N_NAME'].str.startswith('K'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

region.merge(nation[(nation['N_NAME'] == 'G')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(customer.merge(nation[['N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[['R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] < 2) & (nation['N_NAME'] != 'R')][['N_NATIONKEY', 'N_REGIONKEY']].merge(customer[(customer['C_NATIONKEY'] != 4) & (customer['C_ADDRESS'] == '9')][['C_NAME']].merge(supplier, left_on='C_CUSTKEY', right_on='S_SUPPKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_NAME'] != 'E')][['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

lineitem[(lineitem['RETURNFLAG'] != 'A') | (lineitem['EXTENDEDPRICE'] == 53728.781534695234)][['TAX', 'LINESTATUS', 'RETURNFLAG', 'SHIPINSTRUCT', 'LINENUMBER']].merge(nation.merge(region[['R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_ACCTBAL'] > 1119.8088540955534) & (supplier['S_NAME'] != 'S')].merge(partsupp[(partsupp['AVAILQTY'] == 2228)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').groupby(by=['LINENUMBER', 'SHIPINSTRUCT']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 208119.6482485211) & (orders['SHIPPRIORITY'] <= 0)][['TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('c'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier[(supplier['S_SUPPKEY'] <= 187) & (supplier['S_PHONE'] != '17-')][['S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERDATE', 'O_CUSTKEY']).agg('count')

part.merge(partsupp[(partsupp['AVAILQTY'] <= 3430)][['PS_SUPPKEY', 'AVAILQTY']].merge(lineitem[(lineitem['LINENUMBER'] <= 5)][['DISCOUNT', 'EXTENDEDPRICE']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('count')

part.merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(lineitem[(lineitem['RETURNFLAG'] != 'N') & (lineitem['L_COMMENT'].str.startswith('g'))][['L_PARTKEY', 'RETURNFLAG']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(' ')) & (partsupp['SUPPLYCOST'] >= 774.7360407166025)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] < 5132)].merge(part[(part['BRAND'] == 'Brand#21')][['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_NAME']].merge(orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] == 'P')], left_on='P_PARTKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[['SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] >= 20) & (partsupp['PS_PARTKEY'] == 11)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'TYPE']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 's') & (partsupp['P_COMMENT'].str.startswith('i'))][['PS_PARTKEY']].groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(lineitem[['COMMITDATE', 'RETURNFLAG', 'QUANTITY', 'LINESTATUS']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['ORDERDATE'] > '1998-07-21')].merge(lineitem[(lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['RECEIPTDATE'] == '1992-05-02')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY']].merge(orders[['SHIPPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['O_CUSTKEY'] != 55391) & (orders['ORDERSTATUS'] == 'P')].merge(lineitem[['LINESTATUS', 'SHIPMODE']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 605.9619510661817)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['LINENUMBER', 'L_COMMENT']).agg('sum', numeric_only=True)

lineitem[['RECEIPTDATE', 'LINESTATUS', 'EXTENDEDPRICE']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] >= 22)].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'].str.startswith('K'))][['C_NAME', 'C_PHONE']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY').merge(nation[(nation['N_COMMENT'].str.startswith('h'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'u')].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(part[['BRAND', 'RETAILPRICE']].merge(supplier[(supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_NAME']], left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(customer[(customer['C_COMMENT'] != ',') | (customer['C_COMMENT'] == 'q')].merge(orders[(orders['O_COMMENT'] == ' re') & (orders['ORDERPRIORITY'] != '2-HIGH')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY').groupby(by=['RECEIPTDATE']).agg('min', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation.merge(customer.merge(nation[(nation['N_NATIONKEY'] < 4)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('count')

orders[['O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERDATE']].merge(lineitem[(lineitem['EXTENDEDPRICE'] < 19800.76732910439) | (lineitem['L_COMMENT'] == 'o')][['QUANTITY']].merge(nation.merge(customer[['C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['L_PARTKEY'] <= 41511) & (lineitem['RETURNFLAG'] != 'R')][['DISCOUNT', 'TAX', 'L_ORDERKEY', 'L_PARTKEY']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'E') & (region['R_COMMENT'] != 'u')].merge(nation[(nation['N_NATIONKEY'] > 0) | (nation['N_NATIONKEY'] > 19)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[['C_NAME', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS']].merge(part[['P_PARTKEY']], left_on='C_CUSTKEY', right_on='P_PARTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier[['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'C') & (nation['N_COMMENT'] == 'v')].merge(region.merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_NAME'].str.startswith('E'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('v'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_NAME'].str.startswith('F'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

orders[['ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] <= 7096.429427276023) & (customer['C_CUSTKEY'] > 82)][['C_COMMENT', 'C_ADDRESS', 'C_PHONE']].merge(region[['R_REGIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='C_CUSTKEY', right_on='R_REGIONKEY').merge(region[(region['R_REGIONKEY'] >= 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] > 2)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='C_CUSTKEY', right_on='R_REGIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_ADDRESS'].str.startswith('p')) | (customer['C_COMMENT'] == 'w')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[['L_PARTKEY', 'COMMITDATE']]

supplier[['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '26-')][['S_NAME']].groupby(by=['S_NAME']).agg('max', numeric_only=True)

supplier[['S_COMMENT']].merge(lineitem, left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['S_COMMENT']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(lineitem[(lineitem['LINENUMBER'] >= 5)], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY']].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] > 981.0639476002643) & (part['RETAILPRICE'] != 1077.4617954130274)].merge(partsupp.merge(supplier[['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] != 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['LINENUMBER'] == 3) & (lineitem['SHIPDATE'] > '1998-10-30')][['SHIPDATE', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPINSTRUCT']].merge(orders[(orders['CLERK'] != 'C') & (orders['TOTALPRICE'] > 62986.0248507357)][['SHIPPRIORITY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 859.2462309920942) & (partsupp['SUPPLYCOST'] > 176.65919288480654) & (partsupp['AVAILQTY'] > 8660) | (partsupp['AVAILQTY'] == 1776)].merge(part[(part['PT_COMMENT'] == 'g') | (part['P_PARTKEY'] <= 96)][['P_PARTKEY', 'SIZE', 'TYPE', 'CONTAINER']].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['LINESTATUS'].isin(['O', 'F']))][['L_COMMENT', 'SHIPINSTRUCT']].merge(partsupp[['AVAILQTY', 'P_COMMENT']].merge(nation[['N_NATIONKEY']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(part.merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['DISCOUNT'] > 0.020587620096145787) | (lineitem['TAX'] < 0.034979967370880403)].merge(orders[(orders['O_CUSTKEY'] == 116194)][['ORDERSTATUS', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

part.merge(partsupp[(partsupp['PS_PARTKEY'] >= 39)].merge(lineitem.merge(orders[(orders['O_ORDERKEY'] != 652)], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part.merge(partsupp[(partsupp['SUPPLYCOST'] == 831.2871126564565) & (partsupp['PS_SUPPKEY'] <= 3147)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[['N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'R') & (nation['N_NAME'].str.startswith('C'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(customer[(customer['C_NATIONKEY'] < 16)][['C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

customer[(customer['C_ADDRESS'] == 'H')]

part[(part['MFGR'] != 'Manufacturer#2')][['P_NAME', 'RETAILPRICE', 'MFGR']].groupby(by=['MFGR', 'RETAILPRICE']).agg('min', numeric_only=True)

orders.merge(lineitem[(lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')][['L_COMMENT', 'EXTENDEDPRICE']].merge(partsupp, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['L_ORDERKEY'] >= 95)].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['CLERK'] == 'C')][['O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_COMMENT'] == 'a')][['C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('5')) | (supplier['S_SUPPKEY'] != 159) | (supplier['S_NATIONKEY'] != 7) & (supplier['S_SUPPKEY'] != 145)].groupby(by=['S_NAME', 'S_NATIONKEY']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'E') & (part['CONTAINER'].str.startswith('LG')) | (part['SIZE'] == 35) & (part['SIZE'] <= 14)].merge(partsupp[(partsupp['PS_SUPPKEY'] != 5299)].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 28) | (partsupp['AVAILQTY'] < 6702)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'MKTSEGMENT']].merge(part.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('q'))].merge(part[(part['BRAND'] == 'Brand#23')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='C_CUSTKEY', right_on='P_PARTKEY').merge(lineitem[['LINESTATUS', 'EXTENDEDPRICE']], left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(supplier[(supplier['S_SUPPKEY'] != 114) | (supplier['S_NAME'] == 'S')][['S_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('s')) | (partsupp['SUPPLYCOST'] == 458.5369723707649)].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] == 2905)][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='C_CUSTKEY', right_on='S_SUPPKEY').groupby(by=['MKTSEGMENT']).agg('count')

lineitem[(lineitem['L_COMMENT'] == 'l') | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['L_PARTKEY'] > 1075)].merge(orders[['TOTALPRICE', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] <= 106.71393441104503) | (partsupp['PS_SUPPKEY'] >= 5243)][['PS_SUPPKEY']].merge(lineitem[(lineitem['RETURNFLAG'] != 'A') & (lineitem['COMMITDATE'] != '1992-05-15')][['COMMITDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

supplier

part.merge(partsupp.merge(lineitem[(lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['EXTENDEDPRICE'] >= 81987.28988116587)][['L_PARTKEY', 'EXTENDEDPRICE', 'SHIPINSTRUCT']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(supplier[['S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] != 5013)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] <= 539.1509940042976) & (partsupp['AVAILQTY'] >= 2446)][['SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_PHONE']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('count')

partsupp.merge(lineitem[(lineitem['L_PARTKEY'] <= 6818)][['SHIPINSTRUCT', 'COMMITDATE']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(region, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith(';'))], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders.merge(lineitem[(lineitem['L_COMMENT'].str.startswith('-'))][['QUANTITY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['TYPE'] != 'SMA') & (part['TYPE'].str.startswith('S'))][['PT_COMMENT', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('min', numeric_only=True)

nation.merge(supplier[(supplier['S_ADDRESS'] == 'V')].merge(partsupp[['SUPPLYCOST', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_COMMENT'].str.startswith('v'))][['S_NAME', 'S_SUPPKEY']].merge(partsupp.merge(part[(part['P_PARTKEY'] != 111) & (part['P_PARTKEY'] == 5)][['P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

lineitem[['EXTENDEDPRICE', 'COMMITDATE']].merge(supplier[(supplier['S_NATIONKEY'] != 17)][['S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY').groupby(by=['COMMITDATE']).agg('min', numeric_only=True)

partsupp.merge(part[['BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

region.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

part[(part['BRAND'] == 'Brand#25') | (part['RETAILPRICE'] >= 906.0028556209996) & (part['SIZE'] <= 8)].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(lineitem[(lineitem['L_PARTKEY'] != 154101) & (lineitem['RECEIPTDATE'] > '1998-11-06')][['RECEIPTDATE', 'L_ORDERKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['TAX'] <= 0.07047821088393545) & (lineitem['SHIPMODE'].isin(['FOB', 'MAIL', 'RAIL']))][['QUANTITY', 'L_ORDERKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer

nation[['N_NAME']]

partsupp.merge(supplier[(supplier['S_PHONE'] == '3') | (supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['SHIPMODE'].isin(['FOB', 'REG AIR'])) & (lineitem['RETURNFLAG'] != 'A')][['L_ORDERKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['SHIPPRIORITY'] == 0)][['ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_COMMENT'].str.startswith('w'))][['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']], left_on='O_ORDERKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 7562)][['LINENUMBER', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 32) & (partsupp['AVAILQTY'] != 2559)][['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['P_NAME'] == 'b')].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['AVAILQTY'] != 4771)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')][['SHIPMODE', 'TAX', 'RETURNFLAG', 'DISCOUNT']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem.merge(orders[(orders['O_ORDERKEY'] > 568) | (orders['ORDERPRIORITY'] == '1-URGENT')], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['LINENUMBER', 'L_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 12) & (partsupp['PS_SUPPKEY'] == 6157)].merge(part[['P_NAME', 'TYPE', 'P_PARTKEY']].merge(partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('s'))][['S_NAME', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 71) | (supplier['S_ACCTBAL'] != -695.8305119223253) | (supplier['S_SUPPKEY'] > 100)][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] <= 8029)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(lineitem[(lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['L_COMMENT'] == ' re')][['TAX', 'RECEIPTDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

supplier.merge(partsupp[(partsupp['SUPPLYCOST'] >= 218.78052065393769)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(lineitem[['L_SUPPKEY', 'QUANTITY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 13)][['SUPPLYCOST', 'PS_PARTKEY']].merge(lineitem[(lineitem['RETURNFLAG'] != 'R')].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'L') & (supplier['S_ADDRESS'] == 'g') | (supplier['S_SUPPKEY'] >= 70)][['S_SUPPKEY']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] >= 0.03436765453422469) | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD'])) & (lineitem['EXTENDEDPRICE'] == 8741.34371491315)][['SHIPMODE', 'LINESTATUS', 'EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(lineitem[(lineitem['LINENUMBER'] > 3) | (lineitem['SHIPMODE'].isin(['RAIL', 'TRUCK', 'MAIL', 'FOB', 'REG AIR', 'SHIP', 'AIR']))], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[(supplier['S_COMMENT'] == 'q')][['S_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 301.6406517515247)][['PS_SUPPKEY']].merge(lineitem[(lineitem['RETURNFLAG'] == 'N') | (lineitem['L_PARTKEY'] > 78611)][['L_SUPPKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('p'))].merge(lineitem[['L_COMMENT', 'L_SUPPKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(partsupp[['PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['SHIPMODE'].isin(['RAIL', 'SHIP', 'FOB', 'MAIL', 'REG AIR', 'AIR'])) | (lineitem['L_PARTKEY'] >= 59667)].merge(orders[(orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] == 'C')][['O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].merge(nation[(nation['N_NATIONKEY'] >= 14)], left_on='O_ORDERKEY', right_on='N_NATIONKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[['TYPE']].merge(region[['R_COMMENT']], left_on='P_PARTKEY', right_on='R_REGIONKEY').merge(partsupp, left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 's') & (supplier['S_COMMENT'] == 'r') & (supplier['S_SUPPKEY'] < 28) & (supplier['S_PHONE'].str.startswith('2'))][['S_PHONE', 'S_ADDRESS']].merge(part[['P_NAME', 'CONTAINER']], left_on='S_SUPPKEY', right_on='P_PARTKEY').merge(customer.merge(nation[(nation['N_NAME'] != 'S')][['N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='S_SUPPKEY', right_on='C_CUSTKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

region[['R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] != 'p')].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_SUPPKEY'] > 82)].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'].str.startswith('p'))][['N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier.merge(partsupp[(partsupp['PS_PARTKEY'] < 3) | (partsupp['SUPPLYCOST'] < 652.6570001754453)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 497.20640898364906) & (partsupp['PS_SUPPKEY'] <= 156)].merge(part[(part['CONTAINER'] != 'LG') | (part['P_PARTKEY'] == 142)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part.merge(partsupp[['PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'] == ' ')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NATIONKEY'] >= 20) | (nation['N_REGIONKEY'] == 1)].merge(region.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] <= 5)].groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

nation

partsupp.groupby(by=['P_COMMENT', 'PS_PARTKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(orders[(orders['O_COMMENT'] == 'egu')].merge(lineitem[['SHIPMODE', 'LINENUMBER', 'L_SUPPKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_ADDRESS', 'C_PHONE']).agg('count')

customer[(customer['C_ACCTBAL'] >= 227.9121264621158)].merge(nation[(nation['N_REGIONKEY'] != 1)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(customer[(customer['C_NATIONKEY'] == 2)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

partsupp[(partsupp['PS_PARTKEY'] != 17)][['PS_SUPPKEY', 'AVAILQTY']].groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('c')) & (orders['CLERK'] != 'C') | (orders['CLERK'] != 'C')][['ORDERSTATUS']].merge(lineitem[['TAX', 'L_SUPPKEY', 'SHIPDATE']].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(partsupp[(partsupp['PS_PARTKEY'] >= 9) | (partsupp['SUPPLYCOST'] > 375.2372837250191)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] <= 918.8598471394071)][['P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'].str.startswith(' '))][['S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] < 3)].merge(supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_PHONE'] != '26-')][['S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] > 5042)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='O_ORDERKEY', right_on='N_NATIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(customer[(customer['C_CUSTKEY'] >= 51) & (customer['C_ACCTBAL'] <= 6393.212951183651)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders.merge(lineitem[['TAX', 'COMMITDATE', 'LINESTATUS']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

nation.merge(customer[(customer['C_NATIONKEY'] >= 9)].merge(orders.merge(customer[(customer['C_CUSTKEY'] != 99)][['C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NAME'] == 'R')][['N_NAME']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_NATIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 12) | (partsupp['P_COMMENT'] == 'ly ')][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].groupby(by=['PS_SUPPKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 3) | (nation['N_COMMENT'] == 'a')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

orders[(orders['O_CUSTKEY'] > 83925) & (orders['TOTALPRICE'] >= 123639.02683705978) | (orders['O_COMMENT'].str.startswith('n'))][['O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT']].merge(lineitem[(lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['COMMITDATE'] > '1992-05-15')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['LINENUMBER'] < 4)].merge(orders[(orders['ORDERSTATUS'] == 'O') | (orders['O_COMMENT'].str.startswith(','))][['ORDERDATE']].merge(customer, left_on='O_ORDERKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 4722)].merge(lineitem[['SHIPDATE', 'RECEIPTDATE', 'EXTENDEDPRICE']].merge(supplier[(supplier['S_SUPPKEY'] == 139)][['S_COMMENT', 'S_NAME', 'S_PHONE']].merge(customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT']], left_on='S_SUPPKEY', right_on='C_CUSTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 19) & (supplier['S_ADDRESS'].str.startswith('K')) | (supplier['S_SUPPKEY'] >= 131)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(customer[['C_NAME']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[['S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[['SUPPLYCOST']].merge(nation, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY').merge(supplier, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_PARTKEY'] > 48)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(lineitem[['QUANTITY', 'L_SUPPKEY', 'RECEIPTDATE', 'LINESTATUS']].merge(partsupp[(partsupp['AVAILQTY'] >= 5091)][['SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY']].merge(customer[(customer['C_COMMENT'] == 'p')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_CUSTKEY'] >= 51)].merge(orders[(orders['O_COMMENT'] == 'ly ') & (orders['O_CUSTKEY'] != 89693)].merge(lineitem[(lineitem['L_COMMENT'] == 'q') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN', 'DELIVER IN PERSON']))], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[['C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] >= 0)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 12) | (nation['N_COMMENT'].str.startswith('u'))][['N_COMMENT']].merge(part[(part['P_PARTKEY'] <= 103) & (part['TYPE'] == 'SMA')][['P_PARTKEY', 'MFGR']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 616.0875322159247)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='N_NATIONKEY', right_on='P_PARTKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 57) | (supplier['S_ACCTBAL'] > 6149.062065525626) & (supplier['S_SUPPKEY'] > 153) & (supplier['S_ACCTBAL'] != -949.6000799022105)].merge(nation[(nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] != 13)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_PHONE']]

supplier[['S_ADDRESS']].merge(customer.merge(nation[(nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='S_SUPPKEY', right_on='C_CUSTKEY').merge(nation[(nation['N_COMMENT'] == 't')][['N_REGIONKEY']], left_on='S_SUPPKEY', right_on='N_NATIONKEY').merge(part[(part['RETAILPRICE'] == 922.5233861208636)], left_on='S_SUPPKEY', right_on='P_PARTKEY').groupby(by=['S_ADDRESS']).agg('count')

supplier[(supplier['S_ACCTBAL'] < 4246.342179639393) & (supplier['S_SUPPKEY'] >= 102) | (supplier['S_PHONE'] == '32-')][['S_COMMENT', 'S_PHONE']].merge(part[(part['P_PARTKEY'] > 133) | (part['MFGR'] != 'Manufacturer#5')].merge(partsupp.merge(lineitem[['L_SUPPKEY', 'TAX', 'LINENUMBER']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='S_SUPPKEY', right_on='P_PARTKEY').merge(customer[(customer['C_ACCTBAL'] != 7283.866390518051) & (customer['C_PHONE'] == '22-')][['C_COMMENT', 'C_NAME']].merge(lineitem[(lineitem['L_SUPPKEY'] == 1123)][['L_ORDERKEY']].merge(orders[(orders['ORDERPRIORITY'] != '2-HIGH')], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] <= 1)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(customer[(customer['C_CUSTKEY'] > 97)][['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_CUSTKEY', right_on='N_NATIONKEY'), left_on='S_SUPPKEY', right_on='C_CUSTKEY').groupby(by=['S_PHONE', 'S_COMMENT']).agg('max', numeric_only=True)

part[['SIZE', 'BRAND', 'PT_COMMENT']].merge(nation[(nation['N_NAME'] != 'S') | (nation['N_REGIONKEY'] >= 2)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_ACCTBAL'] > 1568.4585712557332) & (customer['C_CUSTKEY'] <= 93)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='P_PARTKEY', right_on='N_NATIONKEY').groupby(by=['BRAND', 'SIZE']).agg('count')

part[['TYPE']].merge(partsupp, left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(supplier[['S_SUPPKEY']], left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(customer.merge(nation[['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY').groupby(by=['TYPE']).agg('count')

nation[(nation['N_NATIONKEY'] >= 21) & (nation['N_NATIONKEY'] > 17)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_SUPPKEY'] >= 27) | (supplier['S_NATIONKEY'] != 0)][['S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'SHIPMODE', 'LINESTATUS', 'LINENUMBER', 'L_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] != 2)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] != 'a') | (nation['N_NAME'].str.startswith('E'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY').merge(orders[['TOTALPRICE']].merge(supplier, left_on='O_ORDERKEY', right_on='S_SUPPKEY').merge(nation[['N_NATIONKEY']], left_on='O_ORDERKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY')

orders

customer[(customer['C_NAME'] != 'C')].merge(orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['CLERK'] != 'C')][['TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'] == '1') | (customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['LINESTATUS'] != 'O') | (lineitem['TAX'] < 0.06134576015616641)][['COMMITDATE', 'LINESTATUS', 'L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] == 'b')][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 12) | (supplier['S_NAME'] == 'S')][['S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('A'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] > 0) & (nation['N_COMMENT'] != 'a')].merge(customer[(customer['C_ACCTBAL'] > 8110.619202726855)][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME']].merge(part[(part['TYPE'] != 'S')][['MFGR', 'SIZE', 'RETAILPRICE']], left_on='C_CUSTKEY', right_on='P_PARTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_NATIONKEY'] > 13)][['N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'S_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'F') & (customer['C_PHONE'].str.startswith('3'))].merge(nation.merge(region[['R_COMMENT']].merge(part, left_on='R_REGIONKEY', right_on='P_PARTKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 5668.626537842834) | (supplier['S_SUPPKEY'] != 22) & (supplier['S_SUPPKEY'] > 175) & (supplier['S_NATIONKEY'] > 21)].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['SIZE'] <= 6)][['BRAND', 'P_NAME', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[(part['TYPE'] == 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_NAME'] != 'E')].merge(nation[(nation['N_REGIONKEY'] != 1)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_NAME']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 6929) & (partsupp['AVAILQTY'] != 4368)][['AVAILQTY', 'SUPPLYCOST']].merge(lineitem[['TAX', 'QUANTITY', 'L_SUPPKEY', 'DISCOUNT']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(orders.merge(lineitem[(lineitem['RETURNFLAG'] == 'R') & (lineitem['LINENUMBER'] != 3)][['EXTENDEDPRICE', 'SHIPMODE', 'TAX', 'SHIPDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY'), left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(customer, left_on='S_SUPPKEY', right_on='C_CUSTKEY').merge(partsupp[(partsupp['P_COMMENT'] != '.') & (partsupp['P_COMMENT'] == 'bli')], left_on='S_SUPPKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).groupby(by=['S_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] < 409) | (orders['O_ORDERKEY'] != 457)][['ORDERSTATUS', 'SHIPPRIORITY']].merge(part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='P_PARTKEY').merge(customer[(customer['C_COMMENT'].str.startswith('a')) & (customer['C_ACCTBAL'] != -248.9784614011338)][['C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] <= 22)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS', 'SHIPPRIORITY']).agg('min', numeric_only=True)

part[(part['P_NAME'].str.startswith('p')) & (part['PT_COMMENT'].str.startswith('ly ')) | (part['PT_COMMENT'] == 'r') | (part['BRAND'] == 'Brand#12')].merge(partsupp[(partsupp['SUPPLYCOST'] > 906.4221970185448) | (partsupp['P_COMMENT'] == 'c')][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(lineitem[['TAX', 'EXTENDEDPRICE', 'RECEIPTDATE', 'SHIPINSTRUCT']].merge(part[(part['CONTAINER'].str.startswith('SM'))], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='P_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('mean', numeric_only=True)

supplier.merge(partsupp[(partsupp['PS_PARTKEY'] < 28)][['SUPPLYCOST', 'P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp.merge(supplier.merge(partsupp[(partsupp['PS_PARTKEY'] < 13)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier[(supplier['S_PHONE'].str.startswith('1'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_PHONE']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 26)][['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']]

supplier[['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 3630)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(part[(part['P_PARTKEY'] <= 69)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[['DISCOUNT']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] != 0)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] > 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] != 15) & (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders[(orders['ORDERDATE'] <= '1992-01-13') & (orders['O_ORDERKEY'] > 41) & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] != 'C')][['CLERK', 'O_ORDERKEY']].merge(lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R']))].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

orders.merge(lineitem[(lineitem['EXTENDEDPRICE'] < 34440.79150073142) & (lineitem['RETURNFLAG'] != 'A')].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

orders[['O_COMMENT', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] >= 2342.913903585404) & (customer['C_PHONE'] == '22-')][['C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_NATIONKEY'] == 15) | (customer['C_NAME'] != 'C')][['C_ADDRESS']].merge(supplier[(supplier['S_ADDRESS'] == 'w') | (supplier['S_SUPPKEY'] <= 85)], left_on='C_CUSTKEY', right_on='S_SUPPKEY').merge(lineitem, left_on='C_CUSTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['L_ORDERKEY'] < 62) & (lineitem['L_SUPPKEY'] != 2152) | (lineitem['L_ORDERKEY'] >= 49)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 1)][['P_COMMENT', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['AVAILQTY'] >= 5405)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['COMMITDATE', 'SHIPMODE']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['LINESTATUS'] == 'F')].groupby(by=['QUANTITY']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_NATIONKEY'] == 11) & (supplier['S_COMMENT'] == 't') | (supplier['S_PHONE'] == '28-')][['S_SUPPKEY']].merge(partsupp[['SUPPLYCOST', 'AVAILQTY']].merge(nation, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY').merge(lineitem[['SHIPINSTRUCT']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

customer[['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] != 6) | (nation['N_NAME'].str.startswith('B'))][['N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 18)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

nation[['N_NATIONKEY']].merge(customer[['C_COMMENT', 'C_PHONE', 'C_CUSTKEY']].merge(orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] > 78022)][['ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['O_COMMENT', 'SHIPPRIORITY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='O_ORDERKEY', right_on='N_NATIONKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[['S_PHONE', 'S_NATIONKEY']].merge(nation.merge(customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

lineitem[['DISCOUNT', 'SHIPINSTRUCT', 'LINESTATUS', 'LINENUMBER', 'L_ORDERKEY']].merge(orders[(orders['O_CUSTKEY'] > 13749) | (orders['O_COMMENT'] == 'd')][['O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_CUSTKEY'] >= 16) & (customer['C_PHONE'].str.startswith('27-'))][['C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT']].merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='C_CUSTKEY', right_on='R_REGIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders.merge(customer[(customer['C_NATIONKEY'] != 10)].merge(orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] != 4510.572930483368)][['ORDERDATE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 29) | (partsupp['P_COMMENT'].str.startswith('k'))][['SUPPLYCOST', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['LINENUMBER', 'L_ORDERKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_COMMENT'].str.startswith('s')) | (nation['N_NAME'].str.startswith('V'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_NATIONKEY'] != 4)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_PHONE'] != '1')].merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].merge(region, left_on='O_ORDERKEY', right_on='R_REGIONKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] != 11)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[['ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_PHONE'].str.startswith('1')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_NAME'] != 'S')].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['O_ORDERKEY'] != 154)][['O_COMMENT']].merge(supplier[['S_ADDRESS']], left_on='O_ORDERKEY', right_on='S_SUPPKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] < 2)][['R_REGIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 13)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(customer[(customer['C_NATIONKEY'] >= 10) & (customer['C_NATIONKEY'] != 5)][['C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer.merge(orders[(orders['O_CUSTKEY'] >= 101548) & (orders['ORDERSTATUS'] == 'F')][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] != 2) | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 3154.079183052979)][['S_NAME', 'S_ADDRESS']].merge(customer[(customer['C_CUSTKEY'] == 17) & (customer['C_ACCTBAL'] != 58.82026365072204)][['C_ADDRESS', 'C_COMMENT']].merge(region.merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_COMMENT'].str.startswith('y'))][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='C_CUSTKEY', right_on='R_REGIONKEY'), left_on='S_SUPPKEY', right_on='C_CUSTKEY').merge(orders[['ORDERSTATUS']], left_on='S_SUPPKEY', right_on='O_ORDERKEY').groupby(by=['S_ADDRESS', 'S_NAME']).agg('sum', numeric_only=True)

orders[['CLERK']]

lineitem.merge(partsupp[['P_COMMENT']].merge(nation, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[['R_NAME']].merge(customer.merge(orders[(orders['ORDERDATE'] >= '1992-01-13')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='R_REGIONKEY', right_on='C_CUSTKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['ORDERSTATUS'] == 'P')].merge(customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['C_NATIONKEY'] < 0)][['C_NAME']].merge(supplier[(supplier['S_SUPPKEY'] == 30) & (supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT']], left_on='C_CUSTKEY', right_on='S_SUPPKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_COMMENT'].str.startswith('.'))][['CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NAME', 'C_PHONE']).agg('min', numeric_only=True)

region.merge(nation[(nation['N_NATIONKEY'] <= 4)].merge(supplier[(supplier['S_SUPPKEY'] <= 70) & (supplier['S_PHONE'].str.startswith('14-'))][['S_ADDRESS', 'S_COMMENT']].merge(customer[(customer['C_COMMENT'].str.startswith('g')) & (customer['C_ACCTBAL'] != 3687.894475860405)], left_on='S_SUPPKEY', right_on='C_CUSTKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] != 13)].merge(supplier[(supplier['S_ACCTBAL'] <= 2973.614084391509) & (supplier['S_NAME'] == 'S')].merge(partsupp[(partsupp['SUPPLYCOST'] <= 140.8157732592918) & (partsupp['AVAILQTY'] < 3361)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'].str.startswith('I'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] < 25)][['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

orders.groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 22) & (nation['N_COMMENT'].str.startswith('i'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 3720.9795136859902) | (supplier['S_NAME'] != 'S')][['S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_PHONE'] != '17-')][['S_ADDRESS', 'S_COMMENT']].merge(customer, left_on='S_SUPPKEY', right_on='C_CUSTKEY').merge(orders[(orders['O_CUSTKEY'] == 16524) | (orders['TOTALPRICE'] != 284506.17504634464)][['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS']].merge(part, left_on='O_ORDERKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='O_ORDERKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

orders[(orders['O_ORDERKEY'] >= 138) | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['TOTALPRICE'] == 175565.11863810953) & (orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_CUSTKEY'] <= 81)].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['L_COMMENT'].str.startswith('.')) | (lineitem['COMMITDATE'] >= '1998-10-16')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['COMMITDATE'] > '1998-10-16')].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 5620) | (partsupp['P_COMMENT'] != 'q')][['PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERDATE', 'CLERK']).agg('sum', numeric_only=True)

customer[['C_ADDRESS']].merge(orders[(orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] > 256463.54650198738)].merge(lineitem[(lineitem['EXTENDEDPRICE'] < 59321.9949028856)][['TAX', 'RETURNFLAG', 'L_COMMENT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_ORDERKEY').merge(nation[(nation['N_NAME'] != 'A')][['N_NATIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] == 133) & (supplier['S_SUPPKEY'] == 84)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_CUSTKEY', right_on='N_NATIONKEY').merge(part[(part['SIZE'] >= 42)].merge(partsupp[(partsupp['AVAILQTY'] > 7036) | (partsupp['P_COMMENT'].str.startswith('y'))].merge(part[['CONTAINER', 'PT_COMMENT', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['LINENUMBER'] == 6)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='C_CUSTKEY', right_on='P_PARTKEY').groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['CLERK']).agg('count')

supplier[(supplier['S_ACCTBAL'] <= 8668.718270967425) & (supplier['S_ACCTBAL'] >= 4374.4542317202595)].groupby(by=['S_ACCTBAL', 'S_SUPPKEY']).agg('max', numeric_only=True)

orders

orders[(orders['O_ORDERKEY'] < 495)].merge(lineitem[(lineitem['SHIPDATE'] >= '1998-10-30')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(orders[['TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY']].merge(lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02')][['L_PARTKEY', 'LINESTATUS', 'LINENUMBER']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['L_PARTKEY'] < 145365) | (lineitem['L_SUPPKEY'] > 3993) | (lineitem['SHIPDATE'] != '1998-10-30')][['LINESTATUS', 'L_PARTKEY', 'L_SUPPKEY', 'SHIPDATE', 'COMMITDATE']].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] == 'G') | (supplier['S_ACCTBAL'] != 2305.0917347718078)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['L_SUPPKEY', 'COMMITDATE']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O')][['TOTALPRICE']].merge(region.merge(nation.merge(region[['R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='O_ORDERKEY', right_on='R_REGIONKEY').merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']], left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

customer[(customer['C_ACCTBAL'] > 2316.821781416612) & (customer['C_ADDRESS'] != 'c')].groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 197) & (orders['ORDERSTATUS'] == 'F') & (orders['TOTALPRICE'] != 190476.37802338877) | (orders['O_ORDERKEY'] < 152)].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['CLERK'] != 'C') & (orders['ORDERDATE'] > '1998-07-21')][['O_COMMENT']].merge(supplier[(supplier['S_COMMENT'] == 'd')], left_on='O_ORDERKEY', right_on='S_SUPPKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['LINENUMBER', 'EXTENDEDPRICE']].merge(customer[(customer['C_PHONE'] != '27-') & (customer['C_NAME'] != 'C')][['C_ADDRESS', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY').merge(region[(region['R_NAME'] != 'AME')].merge(nation[(nation['N_REGIONKEY'] == 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='R_REGIONKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[(nation['N_NAME'] == 'V') | (nation['N_COMMENT'] != ' ')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders.merge(lineitem[(lineitem['QUANTITY'] > 10)][['TAX', 'RETURNFLAG', 'L_PARTKEY', 'DISCOUNT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_ORDERKEY', 'ORDERSTATUS']).agg('min', numeric_only=True)

customer[['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT']].merge(partsupp[(partsupp['AVAILQTY'] >= 9741) | (partsupp['AVAILQTY'] < 9686)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(lineitem[['TAX', 'COMMITDATE', 'L_COMMENT', 'RECEIPTDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[(supplier['S_PHONE'].str.startswith('1'))][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] > 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(partsupp[(partsupp['AVAILQTY'] >= 3440) & (partsupp['PS_SUPPKEY'] != 6362)], left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] == 350) | (orders['ORDERSTATUS'] == 'O')][['ORDERDATE', 'TOTALPRICE', 'O_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_NATIONKEY'] >= 17)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='O_ORDERKEY', right_on='R_REGIONKEY').merge(nation, left_on='O_ORDERKEY', right_on='N_NATIONKEY')

orders.merge(lineitem[(lineitem['EXTENDEDPRICE'] != 3588.719731493976)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(orders[['TOTALPRICE']].merge(customer[['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE']], left_on='O_ORDERKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['ORDERSTATUS'] == 'P') | (orders['O_CUSTKEY'] >= 41472)].merge(lineitem[(lineitem['LINESTATUS'].isin(['F', 'O']))], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_COMMENT', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('r')) | (customer['C_COMMENT'] != 'w') | (customer['C_NAME'].str.startswith('C'))].merge(orders.merge(lineitem[(lineitem['COMMITDATE'] <= '1998-10-16')][['RETURNFLAG']].merge(orders, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(orders[(orders['TOTALPRICE'] == 297980.4687831867) | (orders['SHIPPRIORITY'] < 0)][['SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_NATIONKEY']].merge(supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_SUPPKEY'] <= 42)].merge(nation[(nation['N_NATIONKEY'] <= 5)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] > 22) | (nation['N_NATIONKEY'] < 0)][['N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(lineitem[(lineitem['L_ORDERKEY'] != 33) | (lineitem['L_COMMENT'] != 'p')][['COMMITDATE', 'DISCOUNT', 'L_COMMENT', 'L_PARTKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] > 303.17816243319174)].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem.merge(orders[(orders['ORDERPRIORITY'] == '5-LOW')][['TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 3)].groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] <= 941.4756565613731) & (part['P_NAME'].str.startswith('s')) & (part['PT_COMMENT'] != 'r') | (part['TYPE'].str.startswith('E'))].merge(partsupp[(partsupp['AVAILQTY'] < 4048) | (partsupp['P_COMMENT'] != '.')][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE']).agg('count')

part[(part['P_NAME'] != 'lin') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5'])) | (part['SIZE'] <= 40) | (part['SIZE'] < 40)][['P_PARTKEY', 'RETAILPRICE']].merge(partsupp.merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[['TAX']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] != ',')][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 2105)][['PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer.merge(nation.merge(supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_NAME'] == 'S')], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

partsupp[(partsupp['AVAILQTY'] > 3447)].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] != 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation.merge(supplier[['S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'I')][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL']].groupby(by=['S_PHONE', 'S_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 67632) | (orders['ORDERDATE'] < '1998-07-21')][['O_ORDERKEY']].merge(lineitem.merge(partsupp.merge(lineitem[['TAX', 'QUANTITY', 'SHIPINSTRUCT', 'DISCOUNT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'u')].merge(nation[(nation['N_COMMENT'].str.startswith('n'))].merge(supplier[(supplier['S_NATIONKEY'] > 5)][['S_NAME', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] == 1)].merge(region[(region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_NATIONKEY'] < 20) & (customer['C_NATIONKEY'] <= 12)][['C_ADDRESS', 'C_PHONE', 'MKTSEGMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] == 'I')][['N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('count')

partsupp.merge(part[(part['TYPE'].str.startswith('E'))][['PT_COMMENT', 'SIZE', 'P_NAME']].merge(customer.merge(orders[['SHIPPRIORITY', 'TOTALPRICE', 'O_ORDERKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='P_PARTKEY', right_on='C_CUSTKEY').merge(orders, left_on='P_PARTKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] < 2119)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] == 705.1188691633565)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_PARTKEY'] <= 77)][['TYPE']].merge(partsupp, left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[(part['TYPE'] == 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SHIPMODE']).agg('count')

customer[(customer['C_ACCTBAL'] <= 563.5298361106718) | (customer['MKTSEGMENT'] == 'MACHINERY')].merge(orders[['CLERK']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']], left_on='O_ORDERKEY', right_on='N_NATIONKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3'])) | (part['SIZE'] == 34)][['RETAILPRICE', 'SIZE', 'MFGR', 'P_PARTKEY']].merge(partsupp.merge(lineitem[['COMMITDATE', 'DISCOUNT', 'LINENUMBER']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] != 5574)].merge(supplier[['S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

part[(part['BRAND'] == 'Brand#15') & (part['SIZE'] >= 18) | (part['BRAND'].isin(['Brand#51', 'Brand#15', 'Brand#24', 'Brand#32', 'Brand#14', 'Brand#35', 'Brand#44', 'Brand#41', 'Brand#53', 'Brand#22', 'Brand#54', 'Brand#33', 'Brand#11', 'Brand#13', 'Brand#23', 'Brand#25', 'Brand#42', 'Brand#34', 'Brand#55', 'Brand#45', 'Brand#21'])) | (part['SIZE'] <= 47)][['PT_COMMENT', 'RETAILPRICE', 'SIZE']].merge(supplier[['S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(customer[(customer['C_COMMENT'] == 'l') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY']))], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['LINENUMBER'] > 5)], left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'])

customer[(customer['C_ADDRESS'] == 'u') & (customer['C_ACCTBAL'] == 5659.615704700023) & (customer['C_CUSTKEY'] > 93)].merge(orders[['ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'] == '27-')][['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] < 2)][['N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE']))][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_COMMENT'].str.startswith('al '))].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'MKTSEGMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] < 18) | (supplier['S_PHONE'] == '2')]

customer[(customer['C_ACCTBAL'] == 2826.2934134856296) & (customer['C_COMMENT'] != '.')][['C_COMMENT', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(orders[['ORDERSTATUS', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(lineitem[(lineitem['LINESTATUS'] != 'O') | (lineitem['DISCOUNT'] <= 0.003985743073189285)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['BRAND'] != 'Brand#34') | (part['BRAND'] == 'Brand#23')][['P_NAME', 'MFGR', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[(part['BRAND'] == 'Brand#52') & (part['P_PARTKEY'] < 110)].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] == ';')], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_PARTKEY']).agg('sum', numeric_only=True)

region.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'] != 'AFR')].merge(nation[(nation['N_NATIONKEY'] <= 14)][['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] > 292748.2856859398) | (orders['ORDERDATE'] == '1998-07-21') & (orders['TOTALPRICE'] > 106894.88687684915) | (orders['CLERK'].str.startswith('C'))].merge(lineitem[(lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['L_COMMENT'] == 'n')][['RETURNFLAG', 'RECEIPTDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_NATIONKEY'] <= 6)], left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] == 0.03957083405525857)].merge(orders.merge(lineitem[(lineitem['L_PARTKEY'] != 10997)][['TAX']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[['ORDERPRIORITY', 'O_ORDERKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['TAX', 'RETURNFLAG', 'L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 567.4263062997298)].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_ORDERKEY', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0)].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERPRIORITY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == 'r')].groupby(by=['TOTALPRICE', 'ORDERSTATUS']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

orders[['SHIPPRIORITY', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[['C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_COMMENT'] != 'a') | (customer['C_CUSTKEY'] != 13)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

supplier[(supplier['S_ADDRESS'] != 'W')].merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_COMMENT'] != 's')].merge(supplier[['S_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_SUPPKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_NATIONKEY'] >= 2) | (customer['C_NATIONKEY'] < 12)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['PS_PARTKEY'] >= 19) & (partsupp['PS_SUPPKEY'] > 3434)].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S'))][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] == 1)][['N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['MFGR'] == 'Manufacturer#2') & (part['P_NAME'] != 'blu')].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 2581) | (partsupp['SUPPLYCOST'] == 25.573872631881407)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE', 'S_ADDRESS']).agg('mean', numeric_only=True)

lineitem[['L_COMMENT', 'L_SUPPKEY', 'SHIPINSTRUCT', 'RECEIPTDATE']].merge(partsupp[(partsupp['P_COMMENT'] == 'c') & (partsupp['PS_SUPPKEY'] < 4834)].merge(lineitem.merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier.merge(nation[(nation['N_REGIONKEY'] > 2)][['N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= 247.68764427357132) & (supplier['S_NATIONKEY'] > 12)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 6623)][['SUPPLYCOST', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NAME'] == 'P') & (nation['N_NAME'] == 'M') | (nation['N_COMMENT'].str.startswith('a'))].merge(supplier[(supplier['S_SUPPKEY'] < 33)][['S_PHONE', 'S_SUPPKEY']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

region.merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_REGIONKEY'] >= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_COMMENT'] != 'h')][['R_COMMENT']].merge(orders[['ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY']], left_on='R_REGIONKEY', right_on='O_ORDERKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('32-'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_NATIONKEY'] >= 14)][['N_NAME', 'N_NATIONKEY']].merge(supplier[(supplier['S_NATIONKEY'] <= 12)], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_ACCTBAL'] != 1908.6064718768796)].merge(partsupp[(partsupp['P_COMMENT'] == ';')][['SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['AVAILQTY'] <= 5246)][['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NATIONKEY'] == 7)][['S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation.merge(customer[(customer['C_NATIONKEY'] < 9) | (customer['C_NAME'] == 'C')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] < 1294) | (partsupp['AVAILQTY'] >= 1774)][['P_COMMENT', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] > 6458)].merge(supplier[(supplier['S_NATIONKEY'] != 12) | (supplier['S_ACCTBAL'] == 29.56969619534948)][['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'SIZE']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'].str.startswith('g'))].merge(nation[(nation['N_COMMENT'] != 'l') & (nation['N_COMMENT'] != 'v')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME']].merge(part[(part['MFGR'] == 'Manufacturer#5') | (part['PT_COMMENT'] != 'u')][['SIZE', 'PT_COMMENT', 'P_PARTKEY']], left_on='N_NATIONKEY', right_on='P_PARTKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 4) | (partsupp['PS_PARTKEY'] >= 28) & (partsupp['AVAILQTY'] != 6043) | (partsupp['P_COMMENT'] == 'l')].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL']].merge(partsupp[(partsupp['AVAILQTY'] >= 2029)][['P_COMMENT']].merge(part[['P_NAME']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'] == 'S') & (nation['N_COMMENT'].str.startswith('l'))].merge(supplier[(supplier['S_NATIONKEY'] < 5) & (supplier['S_PHONE'].str.startswith('1'))].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'MED') & (part['RETAILPRICE'] == 1030.3317547577863)].merge(partsupp[(partsupp['PS_SUPPKEY'] > 5111) | (partsupp['P_COMMENT'] != 'k')][['PS_PARTKEY', 'SUPPLYCOST']].merge(lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06')].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')][['SHIPDATE', 'RETURNFLAG', 'RECEIPTDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] > 2278) & (partsupp['PS_SUPPKEY'] > 2647)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_COMMENT']].merge(part, left_on='S_SUPPKEY', right_on='P_PARTKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['C_COMMENT'] == 'r') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE', 'AUTOMOBILE', 'MACHINERY']))].merge(orders[(orders['O_ORDERKEY'] <= 78)].merge(lineitem[(lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['COMMITDATE'] <= '1998-10-16')], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

region[['R_COMMENT']].merge(orders[(orders['TOTALPRICE'] != 51391.786165331294) | (orders['O_COMMENT'] == 'f')][['ORDERDATE']].merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'] != 'C')].merge(orders[(orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERSTATUS'] != 'P')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_ORDERKEY', right_on='C_CUSTKEY').merge(region[(region['R_NAME'] == 'AME')][['R_NAME']], left_on='O_ORDERKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] > 3)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(supplier[(supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] <= 10) | (nation['N_REGIONKEY'] >= 1)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region.merge(nation[(nation['N_COMMENT'].str.startswith('p'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[['R_NAME', 'R_REGIONKEY']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(customer[(customer['C_ACCTBAL'] != 7380.974363999543)][['C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_SUPPKEY'] >= 161)].merge(nation[(nation['N_NATIONKEY'] < 5)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] != 'u')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY', 'C_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['DISCOUNT'] > 0.06222306582460449) & (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['SHIPDATE'] < '1992-04-27')][['L_ORDERKEY', 'DISCOUNT']].merge(orders.merge(customer[['C_ADDRESS']].merge(partsupp[(partsupp['AVAILQTY'] <= 934)], left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['CLERK'] == 'C')].merge(lineitem[(lineitem['LINESTATUS'] == 'F')], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['CLERK', 'TOTALPRICE', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_ACCTBAL']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 132.80316959106966) & (partsupp['AVAILQTY'] <= 2653)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 86.41075773568545) | (partsupp['SUPPLYCOST'] > 907.9304028969698)][['AVAILQTY', 'PS_SUPPKEY']].merge(lineitem[(lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['EXTENDEDPRICE'] > 52280.85826296499)][['SHIPDATE', 'L_PARTKEY', 'COMMITDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['ORDERPRIORITY'] == '2-HIGH')][['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('o')) & (supplier['S_ACCTBAL'] != 1527.3516769530345)], left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

part[['PT_COMMENT', 'SIZE', 'P_NAME']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(partsupp.merge(part[(part['PT_COMMENT'] == 'x')].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='P_PARTKEY', right_on='R_REGIONKEY')

part[(part['BRAND'] == 'Brand#52')].groupby(by=['CONTAINER', 'SIZE']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] != 60) | (customer['C_NAME'] != 'C')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NATIONKEY']].merge(customer[(customer['C_ADDRESS'].str.startswith('o')) | (customer['C_ACCTBAL'] >= 5867.558974131075)][['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] != 'F')][['N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERPRIORITY']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'w')][['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE']].merge(orders.merge(lineitem.merge(orders[['ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] >= 0)].merge(customer[(customer['C_COMMENT'] == 'y')][['C_ADDRESS']].merge(partsupp[(partsupp['PS_PARTKEY'] != 37) & (partsupp['PS_PARTKEY'] <= 49)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='C_CUSTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 945.4675443407922) & (partsupp['PS_PARTKEY'] == 9) | (partsupp['PS_PARTKEY'] != 35)][['AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY']).agg('count')

lineitem[['DISCOUNT', 'LINENUMBER', 'L_PARTKEY', 'SHIPINSTRUCT']].groupby(by=['L_PARTKEY']).agg('count')

supplier[(supplier['S_ACCTBAL'] == 3829.5043911774274) & (supplier['S_ADDRESS'].str.startswith('q'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_NAME'] != 'S')][['S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp.merge(lineitem[['L_COMMENT', 'SHIPINSTRUCT', 'QUANTITY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS', 'S_COMMENT']).agg('min', numeric_only=True)

supplier.merge(partsupp[['AVAILQTY', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation.merge(customer[(customer['C_CUSTKEY'] <= 37) | (customer['MKTSEGMENT'] != 'BUILDING')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

part[(part['SIZE'] <= 48)][['MFGR']].merge(partsupp[(partsupp['P_COMMENT'] == 'bli')].merge(lineitem[['L_ORDERKEY', 'TAX']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['COMMITDATE'] == '1992-05-15')], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']).merge(lineitem[(lineitem['L_ORDERKEY'] == 100) | (lineitem['TAX'] > 0.04307534558452938)].merge(partsupp[(partsupp['PS_PARTKEY'] > 43)], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['TOTALPRICE'] < 249566.0149415384)], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='P_PARTKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).groupby(by=['MFGR']).agg('mean', numeric_only=True)

nation.merge(supplier[(supplier['S_ACCTBAL'] <= 5019.949484471427)].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer.merge(orders[(orders['ORDERSTATUS'].isin(['O', 'P']))][['SHIPPRIORITY', 'O_ORDERKEY']].merge(lineitem[(lineitem['QUANTITY'] == 30) & (lineitem['COMMITDATE'] <= '1998-10-16')], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_CUSTKEY'] == 68) | (customer['C_NATIONKEY'] != 8)][['C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 23) & (partsupp['PS_SUPPKEY'] != 3195)].merge(lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] <= 805.8949259396841)].merge(part[['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['CONTAINER'] == 'MED') | (part['BRAND'].isin(['Brand#14', 'Brand#31', 'Brand#15', 'Brand#41', 'Brand#33', 'Brand#54', 'Brand#44', 'Brand#45', 'Brand#42', 'Brand#51', 'Brand#35', 'Brand#22', 'Brand#11', 'Brand#25', 'Brand#53', 'Brand#13', 'Brand#34', 'Brand#43', 'Brand#21', 'Brand#12', 'Brand#32', 'Brand#55']))][['CONTAINER', 'RETAILPRICE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 402.05398351406546)][['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']]

part

part[['SIZE', 'P_PARTKEY', 'BRAND', 'P_NAME', 'RETAILPRICE']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 144.4307655506139) | (partsupp['P_COMMENT'].str.startswith(' th'))].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[['TAX', 'L_PARTKEY', 'LINENUMBER']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST']].merge(lineitem, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(customer[['C_NAME']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='C_CUSTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY')

part[(part['BRAND'].isin(['Brand#41', 'Brand#53', 'Brand#35', 'Brand#52', 'Brand#45', 'Brand#33', 'Brand#14', 'Brand#11', 'Brand#21', 'Brand#15', 'Brand#23', 'Brand#32', 'Brand#13', 'Brand#51', 'Brand#42', 'Brand#22', 'Brand#31', 'Brand#25', 'Brand#12', 'Brand#43', 'Brand#55', 'Brand#24'])) | (part['TYPE'].str.startswith('STA')) | (part['BRAND'].isin(['Brand#44', 'Brand#45', 'Brand#51', 'Brand#52', 'Brand#35', 'Brand#15', 'Brand#33', 'Brand#25', 'Brand#22', 'Brand#14', 'Brand#32', 'Brand#54', 'Brand#41', 'Brand#24', 'Brand#55', 'Brand#21', 'Brand#11', 'Brand#23']))][['BRAND', 'P_PARTKEY']]

partsupp[(partsupp['AVAILQTY'] == 3584) | (partsupp['P_COMMENT'] != 's')].merge(lineitem[['SHIPINSTRUCT']].merge(nation[(nation['N_NAME'] == 'I')], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY').merge(supplier[['S_PHONE']], left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='S_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')][['SHIPDATE']].merge(orders[(orders['O_COMMENT'] != '.')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

orders[['ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE']].merge(nation.merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[['S_NAME', 'S_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_REGIONKEY']], left_on='S_SUPPKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='O_ORDERKEY', right_on='N_NATIONKEY').merge(supplier[(supplier['S_COMMENT'].str.startswith('al ')) & (supplier['S_ADDRESS'] == 'L')].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] == 4)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_ORDERKEY', right_on='S_SUPPKEY').groupby(by=['TOTALPRICE']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_ORDERKEY'] > 232) | (orders['O_ORDERKEY'] == 381)][['O_ORDERKEY', 'O_COMMENT', 'CLERK']].merge(lineitem[(lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['SHIPMODE'] == 'FOB')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['LINENUMBER', 'L_COMMENT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem.merge(orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['TOTALPRICE'] == 316636.32265595515)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('c'))], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['CLERK']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] <= 1468.19770064441) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(orders[(orders['O_COMMENT'].str.startswith('g')) | (orders['O_COMMENT'] == ' re')][['ORDERSTATUS', 'O_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 3047)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='O_ORDERKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY']), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_NAME', 'N_NATIONKEY']].merge(supplier[(supplier['S_ACCTBAL'] < 3164.9941981063657)][['S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['L_SUPPKEY'] <= 1674) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['L_PARTKEY'] <= 104529)].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 7228) | (partsupp['SUPPLYCOST'] >= 498.30383977723125)].merge(supplier[['S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 42.223097059915304)].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['L_PARTKEY']).agg('min', numeric_only=True)

region[['R_COMMENT']].merge(lineitem[(lineitem['RETURNFLAG'] == 'R') & (lineitem['RECEIPTDATE'] < '1998-11-06')][['L_COMMENT']], left_on='R_REGIONKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(orders[['ORDERDATE', 'O_ORDERKEY']], left_on='R_REGIONKEY', right_on='O_ORDERKEY')

part[(part['CONTAINER'] == 'LG') & (part['PT_COMMENT'].str.startswith('ly ')) & (part['BRAND'].isin(['Brand#34', 'Brand#35', 'Brand#13', 'Brand#24', 'Brand#22', 'Brand#21', 'Brand#45', 'Brand#42', 'Brand#11', 'Brand#12', 'Brand#54', 'Brand#23']))].merge(partsupp[(partsupp['PS_PARTKEY'] == 5)].merge(lineitem[['L_ORDERKEY', 'SHIPINSTRUCT', 'RETURNFLAG']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['MFGR'] == 'Manufacturer#4') & (part['P_PARTKEY'] != 90)].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5833)][['SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

supplier.groupby(by=['S_NAME', 'S_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 2) & (nation['N_COMMENT'].str.startswith('t'))].merge(supplier.merge(partsupp[(partsupp['PS_SUPPKEY'] < 5395)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_PHONE'] == '2') | (supplier['S_NATIONKEY'] >= 3)].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

partsupp.merge(lineitem[(lineitem['L_PARTKEY'] < 29551)].merge(partsupp[(partsupp['PS_SUPPKEY'] > 2945)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

customer[(customer['C_ADDRESS'].str.startswith('3')) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'X')][['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT']]

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_PHONE'] != '32-') | (supplier['S_SUPPKEY'] < 173)].merge(nation[(nation['N_NAME'] != 'K')].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('bli'))][['PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'A') | (nation['N_NAME'] == 'M')][['N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_NAME'] != 'E')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_NATIONKEY'] >= 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'].str.startswith('v'))][['S_COMMENT', 'S_ADDRESS', 'S_PHONE']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] != 'M')], left_on='S_SUPPKEY', right_on='R_REGIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'c') | (customer['C_ACCTBAL'] >= 4664.8691840202055) & (customer['C_COMMENT'] == 'f') | (customer['C_COMMENT'].str.startswith('.'))][['C_PHONE']].groupby(by=['C_PHONE']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(lineitem[(lineitem['L_SUPPKEY'] >= 5505)].merge(partsupp[(partsupp['AVAILQTY'] <= 8760) & (partsupp['SUPPLYCOST'] > 291.0432921909577)][['SUPPLYCOST']].merge(orders[['TOTALPRICE']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['PS_SUPPKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] >= 0) | (region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_NAME'] != 'A')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] < 1)][['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation.merge(customer[(customer['C_PHONE'] == '18-') | (customer['C_COMMENT'].str.startswith('p'))][['C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'e')][['N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

orders[(orders['O_CUSTKEY'] != 89481)].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE']))].merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] <= 0)].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'W')][['S_NAME']].merge(lineitem.merge(orders.merge(lineitem[(lineitem['RETURNFLAG'] != 'R')], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'])

supplier[(supplier['S_NATIONKEY'] >= 14) | (supplier['S_PHONE'].str.startswith('28-'))][['S_COMMENT']].merge(lineitem[['RECEIPTDATE', 'SHIPMODE']].merge(customer, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='S_SUPPKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']).merge(nation[(nation['N_COMMENT'].str.startswith('u'))].merge(supplier[['S_COMMENT']].merge(orders[(orders['ORDERPRIORITY'] == '5-LOW')], left_on='S_SUPPKEY', right_on='O_ORDERKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_SUPPKEY'] != 60) | (supplier['S_SUPPKEY'] != 105)].merge(partsupp[['P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_SUPPKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY']].merge(orders[['O_ORDERKEY', 'ORDERDATE']].merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 23)][['PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_NATIONKEY'] >= 4) & (customer['C_PHONE'] == '13-')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

part[['CONTAINER', 'P_PARTKEY', 'MFGR']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(lineitem[(lineitem['L_ORDERKEY'] > 2) & (lineitem['QUANTITY'] != 25)], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[['BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != '.')].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('count')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']]

partsupp[(partsupp['SUPPLYCOST'] > 777.1704780603718) & (partsupp['PS_PARTKEY'] >= 17) | (partsupp['AVAILQTY'] >= 5642)].groupby(by=['SUPPLYCOST']).agg('count')

region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

customer.merge(nation[['N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

orders

part[(part['SIZE'] <= 35)][['PT_COMMENT']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] >= 19)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

region.groupby(by=['R_NAME']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'HOUSEHOLD'])) & (customer['C_PHONE'].str.startswith('22-')) | (customer['C_ACCTBAL'] == 7093.346538148514) | (customer['C_NATIONKEY'] == 1)].merge(orders[(orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] != 'C')][['O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

partsupp

region[['R_REGIONKEY', 'R_COMMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] <= 2)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('STA')) & (part['SIZE'] > 32)][['MFGR', 'P_PARTKEY', 'CONTAINER', 'TYPE']].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] == '2') & (supplier['S_ADDRESS'] != 'O')][['S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('I'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier[(supplier['S_NATIONKEY'] < 12)].merge(partsupp[(partsupp['PS_PARTKEY'] < 2)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

part[(part['MFGR'] == 'Manufacturer#5') | (part['PT_COMMENT'].str.startswith('r')) | (part['CONTAINER'] == 'LG')][['BRAND', 'SIZE', 'P_PARTKEY', 'PT_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 1933)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(orders, left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='O_ORDERKEY').merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='R_REGIONKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_PARTKEY']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] == 4711) & (lineitem['RETURNFLAG'] == 'R')][['DISCOUNT', 'QUANTITY', 'L_ORDERKEY']].merge(orders[(orders['O_COMMENT'] != 'uri')][['TOTALPRICE', 'ORDERDATE']].merge(region.merge(nation[(nation['N_NAME'].str.startswith('C'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='O_ORDERKEY', right_on='R_REGIONKEY').merge(lineitem[(lineitem['EXTENDEDPRICE'] > 38020.058752311306) | (lineitem['DISCOUNT'] <= 0.04699907299520084)], left_on='O_ORDERKEY', right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['ORDERPRIORITY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPINSTRUCT', 'LINENUMBER', 'COMMITDATE', 'RECEIPTDATE', 'LINESTATUS']].merge(nation, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='N_NATIONKEY')

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'].str.startswith('AFR'))].merge(nation[(nation['N_NATIONKEY'] <= 22) & (nation['N_REGIONKEY'] > 3)].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] != 'o') & (nation['N_COMMENT'] == 'a')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 10) | (nation['N_NATIONKEY'] < 21) | (nation['N_NAME'] == 'V') | (nation['N_COMMENT'] == 'y')].merge(customer[(customer['C_CUSTKEY'] > 60) | (customer['C_COMMENT'] != 'h')].merge(nation[(nation['N_NATIONKEY'] < 12)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_ACCTBAL'] < 9762.523018158254)].merge(nation[(nation['N_NAME'] != 'R')].merge(customer[(customer['C_NATIONKEY'] >= 14)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5787) & (partsupp['PS_PARTKEY'] <= 8)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']].merge(partsupp.merge(lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R']))][['DISCOUNT', 'L_PARTKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] >= 610.28861719195)][['SUPPLYCOST']].merge(nation[(nation['N_NAME'] == 'E') | (nation['N_NATIONKEY'] != 0)][['N_COMMENT']], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY').merge(lineitem[['RETURNFLAG', 'COMMITDATE', 'L_SUPPKEY', 'L_PARTKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 522.2386431635772) | (partsupp['AVAILQTY'] > 7609)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY']), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_NATIONKEY'] == 5)].merge(region.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[['L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] > 441.32469297324764)].merge(lineitem[(lineitem['L_ORDERKEY'] <= 124) & (lineitem['L_COMMENT'] == '-')], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

part[['BRAND', 'RETAILPRICE', 'MFGR', 'P_NAME']].merge(orders[(orders['O_COMMENT'] != '.')].merge(lineitem[(lineitem['LINENUMBER'] > 5)].merge(orders[['CLERK', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['DISCOUNT'] <= 0.07618927690923538)][['LINENUMBER', 'QUANTITY']].merge(customer, left_on=['L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY'], right_on='C_CUSTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='P_PARTKEY', right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT']].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] >= 2770.496177743867)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='C_CUSTKEY').merge(nation[(nation['N_NAME'] != 'P') & (nation['N_NATIONKEY'] != 23)], left_on=['PS_PARTKEY', 'PS_SUPPKEY'], right_on='N_NATIONKEY'), left_on='P_PARTKEY', right_on=['PS_PARTKEY', 'PS_SUPPKEY'])

region[(region['R_REGIONKEY'] > 3) | (region['R_NAME'] != 'E')]